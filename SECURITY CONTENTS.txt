***********************************************
***********************************************
INTRO TO CYBERSECURITY:

===============================================
M1: INTRO TO CYBERSECURITY:

=========================
WORLD OF CYBER SECURITY:

---------------
WHAT IS CYBERSECURITY:
-----
- protect from digital attacks
-----
~ -=-
protect digital assets from [unauthorized users]
network, data, infra, app...
[protect yours from others].
-----
data:
- personal
- organizational
- governmental
-----

---------------
PROTECTING PERSONAL DATA:
-----
exist online, offline
-----
use web -> got online identity!
-----

---------------
YOUR ONLINE IDENTITY:
-----
don't use DOB, job role in
username/password
- it should not be guessable
for the bad actors
-----
review your online accounts
-----

---------------
YOUR DATA:
-----
attackers can use
names, photo, Ids
to impersonate or track you
-----
~ -=-
- medical records
- educational records
- employment records
- financial records
-----
you are online
got business
but need to be safe
-----

---------------
WHAT IS YOUR DATA:
-----
data spreads faster
store loyalty cards
-----
smart devices
-----
what do hackers want? (of course money)
impersonate, track, steal, change...
-----

---------------
IDENTITY THEFT:
-----
short-term financial gain < long-term gain of id theft.
-----
who all wants my data?:
~ -=-
- ISP
- search engine
- websites
- social media
- advertisers
-----

=========================
ORGANIZATIONAL DATA:

-----
know what it is, implement
best practices.
-----

---------------
ORGANIZATIONAL DATA TYPES:
-----
- transactional
- financial
- intellectual
-----
IoT & big data
-----
~ [McCumber] cube framework
1991
-----

---------------
DATA SECURITY BREACHES:
-----
~ [Persirai] - IoT botnet
targets IP cameras
~ [ELF_PERSIRAI.A] via Shodan
Mirai, Hajime?
TCP port 81
-----
~ [Equifax] - 2017 data breach
a consumer credit reporting agency
identity theft by CCP's PLA?
name, soc sec number, address, DOB, license
an Equifax internal audit:
a large backlog of vulnerabilities to patch
there is more to it!
-----

---------------
CONSEQUENCES OF DATA BREACH:
-----
~ -=-
- reputation down
- vandalism
- theft
- revenue loss
- damaged intellectual property
-----

---------------
HOW TO EVADE:
-----
be vigilant, don't fall for traps
-----
~ [RASER] data breach - august 2020
misconfigured cloud cluster
1 lakh gamer's personal info
exposed a segment to public
Security researcher Volodymyr Diachenko
found it
-----
- best practices
-----

=========================
WHAT WAS TAKEN:

-----
customer database -> financial info
-----

---------------
SECURITY BREACH:
-----
~ -=-
an incident that results in
unauthorized access to system
which exposes private info
that can be used for
financial gains etc...
-----
an incident in which an attacker
exploited a vulnerability and got
access to private information.
-----

---------------
what [exploits] the attackers used?
mitigation measures to prevent breaches
-----

=========================
CYBER ATTACKERS:

---------------
TYPES OF ATTACKERS:
-----
~ -=-
- amateurs - script kiddies
- hackers - white, grey, black
- organized - criminals, hacktivists, terrorists, state-sponsored
-----
- internal threats
- external threats
-----

=========================
CYBERWAR:

---------------
US + Israel against
Iran nuclear program
~ [Stuxnet]
gather defence secrets
malware against SCADA
-----

=========================
INTRO
ORG DATA
WHAT WAS TAKEN
ATTACKERS
CYBERWAR

===============================================
M2: ATTACKS, CONCEPTS, TECHNIQUES:

=========================
ANALYZE A CYBER ATTACK:

---------------
TYPES OF MALWARE: 9
~ -=-
-----
- virus - damage data, software
- worms - self exe, spread
-----
- spyware - listen, steal
- adware
- ransomware - encrypt, ask for money
- scareware
-----
- trojan horse - liars
- backdoor - bypass
- rootkit - remote control
-----

---------------
SYMPTOMS OF MALWARE:
-----
~ -=-
- more CPU usage
- freeze, crash, heat
- low browsing speed
- unexplainable problems
- modified files
- unknown files
- unknown process running
- programs reconfiguring themselves
- emails sent automatically
-----
~ [task manager]
-----

---------------
- know the malwares (bomb)
- know the symptoms (beep)
the process = attack.
- analyse the attack (AiTelly)
- plan to secure (CGPT?)
-----

=========================
INFILTERATION METHODS:

---------------
malware = bomb
~ [infiltrate], plant
at the target
-----
how do I get in?
-----

---------------
SOCIAL ENGINEERING:
-----
> pretexting - develop a scene for data
> tailgating - follow the target
> quid pro quo - something for something
-----

---------------
DOS:
-----
send lots of maliciously formatted packets
-----

---------------
DDOS:
-----
attacker -> botnet(zombie hosts network) -> infect more
sheer volume
-----
is this an attack/ infiltration method?
-----

---------------
BOTNET:
-----
bot computer = infected ones
botnet is a group of bots
controlled by attackers
zombies
-----

--------------------
ON-PATH ATTACKS:
-----
intercept or modify communications
[man-in-the-middle] or
man-in-the-mobile attack.
-----

--------------------
SEO POISONING:
-----
search engine -> present web pages -> based on search query
ranked with relevancy of content.
-----
hackers -> push malicious sites up.
goal = increase traffic to malicious sites
may host malware or
attempt social engineering.
-----

--------------------
WI-FI PASSWORD CRACKING:
-----
~ [aircrack-ng]
-----
sir my dog stepped on a bee!!!
please give me your company's
wi-fi password.
can't say no to a cutie (no)
wait I'll ask my manager (yes)
-----

--------------------
PASSWORD ATTACKS:
-----
Entering a username and password is a popular
forms of authenticating to a website.
-----
~ -=-
- password spraying
- dictionary attacks
- brute-force attacks
- rainbow attacks
- traffic interception
-----

--------------------
CRACKING TIMES:
-----
someone trying to crack our org's Wi-Fi password?
make sure it is strong enough.
-----
weak - Iloveyou
weak - 1234
good - Bm3D3ptRamyaMami5Cut3
-----

--------------------
APT:
-----
not ROSE's song
[advanced persistent threat]
-----
infiltrate with APT
- multi-phase
- long term
- stealthy
- advanced operation
-----
complexity and skill level required is huge
usually well-funded, typically targets organizations
or nations for business or political reasons.
deploy customized malware, remain undetected.
-----
pager attack?
-----

--------------------
- know the bomb types.
-----
infiltrate:
- social engineering
- SEO poison
- MITM
- crack password
- APT
-----

=========================
SECURITY VULNERABILITY AND EXPLOITS:

--------------------
~ [vulnerability] = defect/weakness
-----
write a [program] to take advantage of
vulnerability = ~ [exploit].
-----
criminal -> vulnerability -> exploit
get access to resource
can steal/destroy/change...
-----
goal -> access to system -> data
-----

--------------------
HARDWARE VULNERABILITIES:
-----
hardware design flaws
-----
RAM -> [capacitors]
component - can [hold an electrical charge]
influence neighbour capacitors.
-----
[RAM]
~ [Rowhammer] exploit: takes adv of DRAM
affect other cells. charge leaks?
-----
[CPU]
~ [meltdown & spectre]:
affected all CPU from 1995
can read all memory
aka
~ [side-channel attacks]
-----

--------------------
SOFTWARE VULNERABILITIES:
-----
~ [SYNful knock] vulnerability:
-----
a persistent malware
compromise integrity with modified CIOS software image
to gain control
-----
CIOS software attack
stealthy modification of firmware image
to maintain persistence
-----

---------------
CATEGORIZE SOFTWARE VULNERABILITIES:
-----
- buffer overflow:
temporary storage, overfill, data flow out
-----
- non-valid input:
SQL injection attack?
-----
- race conditions:
2 or more threads can access shared data and
they try to change it at the same time
-----
- weakness in security practices
-----
- access control problems
-----
~ -=-
software vulnerabilities:
- overflow
- injection
- race
-----
overflow is a vulnerability
and not an attack?
-----

---------------
SOFTWARE UPDATES:
-----
- stay current
avoid exploits
-----
still events occurs for an org
some needs 3rd party security researchers
-----
invest in own pentest dream
-----
~ [Google’s Project Zero]
after finding
~ [heartbeat vulnerability] 
a team in google with
security analysts to find
0 day exploits
-----

=========================
CYBERSECURITY LANDSCAPE:

-----
- cryptocurrency
~ [crypto jacking]:
your device used for mining cryptocurrencies
without your consent like in case of bots.
-----

===============================================
M3: PROTECT YOUR DATA, PRIVACY:

=========================
PROTECT DEVICES AND NETWORK:

---------------
PROTECT DEVICES:
-----
~ -=-
- password protection
- antimalware scans
- manage OS + browser
- firewall ON
-----
might seem simple
too much info will
make you forget
-----

---------------
WIRELESS NETWORK:
-----
~ [KRACK] - key reinstallation attack
SSID hide (hidden network) -> still insecure
- risks of using public wi-fi
- WPA2 still safe?
- password guidelines
-----
~ [SHODAN] to scan for IoT vulnerability
search engine for internet connected devices
-----

=========================
DATA MAINTENANCE:

for device over
for network over
now for data

---------------
- encrypt
- backup
- delete permanently (really gone or just inaccessible by OS?)
overwrite with 0,1
-----
~ -=-
s-delete
shred
secure empty trash
-----

=========================
WHO OWNS YOUR DATA:

---------------
TERMS OF SERVICE:
-----
~ -=-
legal binding contract that governs rules of relationship
between you, service provider, others who use the service
-----
do carefully:
- data use policy - how SP collect, use, share your data
- privacy settings - control who sees info
- security policy - what company does to secure your data
-----
always read it
know your rights on your data
request a copy of it
what can provider do with your data
what happens to your data if you close account
-----

=========================
SAFEGUARD ONLINE PRIVACY:

---------------
- 2 factor authentication
open authorization
- minimize social sharing
don't get spoofed!
email, web browser privacy
-----

=========================
DISCOVER YOUR OWN RISKY ONLINE BEHAVIOUR:

---------------
- what are safe to share on social media
- passwords to use on account
- connect to open Wi-Fi hotspot = bad
- risks with downloading freebies
-----
- User and entity behaviour analytics (UEBA)
-----

===============================================
M4: PROTECTING THE ORGANIZATION:

=========================
CYBERSECURITY DEVICES AND TECHNOLOGIES:

---------------
SECURITY APPLICATIONS:
-----
- router
- firewalls *
- IPS *
- VPN *
- anti-malware
etc...
-----

---------------
FIREWALL TYPES:
-----
~ -=-
network layer
transport layer
app layer
- context aware layer
L 3,4,7,2
-----
- proxy server
reverse proxy
server
-----
- NAT firewall
- host based firewall
-----

---------------
NMAP PORT SCANNING:
-----
probing a computer for open ports
used maliciously as a recon tool too
~ -=-
nmap, zenmap, hacker target.
[probe(good)/recon(evil)]
like drones
-----

---------------
IDS, IPS:
-----
real time detection
~ [cisco AMP] = against [APT, zero days]
AMP = advanced malware protection
uses threat intel, sandbox
does continuous analysis
-----
~ [cisco threat grid]:
SOC, IR, threat intel, sec infra engineering
place it inside LAN
-----

---------------
PROTECT AGAINST MALWARE:
-----
~ -=-
- Cisco AMP (visit cisco website, AMP is old)
- SOC team
- IR team
- threat intel team (informers)
- security infra engineering team
-----
SOC is operational (surveillance)
IR is tactical (specific or special tasks)
threat intel team collects information
-----

---------------
BEST PRACTICES:
-----
~ -=-
- risk assessment
- security policy
- physical security measures
- HR security measures
- tests, backups
- updates, patches
- access controls
- IR
- monitor, analyse, manage
- network security devices
- endpoint security solution
- encrypt data
- educate users
-----
- map the assets
- risk assessment
- security policy
- educate, encrypt
- IAM, SIEM, EDR, IR
etc...
-----

=========================
BEHAVIOUR APPROACH TO CYBERSECURITY:

---------------
behaviour based security
form of threat detection
-----
capture, analyse flow of comm
-----
~ [honeypots]
-----
source:
- logs
- netflow
-----

---------------
~ -=- NETFLOW:
-----
info of data flowing through network
[needed for behaviour based detection]
-----
switches, routers, firewalls
equipped with NetFlow can
report info of data
entering, leaving, traveling
through network.
-----
info sent to [netflow collectors]
collect, store, analyse
use it to establish [baseline behaviours]
on more than [90 attributes]
-----
example: S, D IP and 88+...
-----
netflow -> baseline
-----

---------------
PENTESTING:
-----
~ -=-
- planning
- scanning
- gain access
- maintain access
- analyse, report
-----
plan
scan
get in
stay undercover
steal/destroy
report
-----
identify target
gather intel
find weakness
exploit
maintain access, do the mission
cover tracks
-----

---------------
IMPACT REDUCTION:
-----
- communicate issue *
- sincere, accountable
- provide details
- find cause *
- apply lessons learned
- check, check again
- educate!
-----

---------------
RISK MANAGEMENT:
-----
- frame
- assess
- respond
- monitor
-----

=========================
CISCO's APPROACH TO CYBERSECURITY:

---------------
~ -=- CISCO'S CSIRT: (IR team - tactical)
-----
computer security incident response team
-----
[receive, review, respond] to incidents.
-----
- proactive threat assessment
- mitigation planning
- incident trend analysis
- security architecture review
- prevent security incidents
-----
hunt, plan, analyse, prevent
----
~ -=-
cisco CSIRT collaborate with:
- FIRST - connects IR teams
- NSIE - net sec info exchange
- DSIE - def sec info exchange
- DNS-OARC - a membership org for DNS infra
-----

---------------
~ -=- SECURITY PLAYBOOK:
-----
collection of [repeatable queries] or reports
-----
standard process to detect incident, respond.
-----
- how to identify, automate response
to common threats
- define inbound, outbound traffic
- summary info of trends, stats, metrics
- [correlate events].
-----
prevent > curing breach:
how to identify, assess risks
implement defences
response plan
measures for aftermath
all these -> compiled into a security playbook.
-----

---------------
TOOLS FOR INCIDENT DETECTION, PREVENTION:
-----
~ [SIEM]
~ [DLP]
-----

---------------
CISCO:
-----
~ [Identity Services Engine]:
context-aware policy service
-----
~ [TrustSec]:
simplify network segmentation, policy management
enforce user access to network resources
role based access control policies - [RBAC]
-----
~ -=-
all outdated
visit:
-- https://www.cisco.com/site/us/en/products/security/all-products.html#tabs-35d568e0ff-item-194f491212-tab
-----

---------------
-- https://bugs.chromium.org/p/project-zero/issues/list
-- https://www.fcc.gov/consumers/guides/how-protect-yourself-online
-- https://pages.nist.gov/800-63-3/
-----
snort
~ [malpedia]
-----

***********************************************
***********************************************
ENDPOINT SECURITY:

===============================================
M1: CYBERSECURITY THREATS, VULNERABILITIES, ATTACKS:

=========================
COMMON THREATS:

---------------
THREAT DOMAINS:
-----
~ -=-
protected [area] which attackers can exploit:
-----
our threat domain or base needs
2 Su57 and a squadron of S400 to
be in operation!
-----
- physical (hard disk) *
- removable media (USB)
- wireless *
- email
- social media
- cloud *
- supply chain (pager)
-----

---------------
CYBER THREAT TYPES:
----
~ -=-
- categorize
- assess likelihood
- monetary impact
- prioritize.
-----
- internal *
- external *
-----
- user
- device
- LAN
- cloud
- app
-----

---------------
INTERNAL, EXTERNAL THREATS:
-----
internal = current or former employees, partners
accidentally or intentionally mishandle
-----
external = ~ [organized, hackers, amateurs]
-----
1 = hacktivists, terrorists, state-sponsored
2 = black, grey, white hats
3 = script kiddies
-----

---------------
USER THREATS & VULNERABILITIES:
-----
no awareness, poor policies...
-----
employee opening an email with
suspicious or unwanted links
-----

---------------
THREATS TO DEVICES:
-----
damage device
insert memory card
infect device
-----
using pen drive in
school computer
-----

---------------
THREAT TO LAN:
-----
access to wirings, systems
transit data exploit, mismanagement
port scans (recon)
-----

---------------
THREAT TO PRIVATE CLOUD:
-----
- use system via internet
- port scanning, network device software vulnerabilities,
- configuration errors,
- others accessing  it.
-----

---------------
THREAT TO PUBLIC CLOUD:
-----
available to public instead for a single org
-----
3 models of public cloud services to choose:
saas, paas, iaas
-----
threats?
- user credentials lost
- services exploited
-----

---------------
THREAT TO APPLICATIONS:
-----
- gaining unauthorised access
- server downtime
- data loss
- client-server vulnerabilities
-----

---------------
DOMAINS:
-----
- user
- physical device
- LAN
- application
-----
ID, device, network, app
-----

---------------
THREAT COMPLEXITY:
-----
software vulnerabilities:
~ [programming mistakes]
~ [protocol vulnerabilities]
~ [system misconfigs]
-----
attacker taking advantage, becoming sophisticated.
~ [APT] = continuous, espionage, operate under radar, remain undetected
-----
~ [algorithm attacks]:
ex: disable computer by forcing it to use all RAM
or overworking its CPU...
-----

---------------
BACKDOOR & ROOTKITS:
-----
~ [RAT] - remote admin tool
-----
- backdoor - bypass security system
grants access
-----
- rootkit - modify OS, allow backdoor.
[assists backdoor]
can contain multiple malicious tools
rootkit provides an attacker
with a backdoor into a machine
modifies monitoring tool, forensics
-----
rootkit = covertly take over system
for illegal access and control
-----
rootkit types:
> firmware
> bootloader
> memory
> app
> kernel mode
-----
rootkit ex:
~ [NTRootkit]
-----
~ [Zeus] - trojan horse - bank info with MITB + keylogger
~ [Stuxnet] - [rootkit] - industrial control system
-----

---------------
THREAT INTEL & RESEARCH [SOURCES]:
-----
~ [threat intelligence]:
data collected, analysed to understand
threat actor motives, targets, behaviours.
[org specific]
-----
~ -=-
- IOC - indicators of compromise
- TTP - tactics, techniques, procedures
- OSINT - open source intelligence
-----
- CERT - computer emergency readiness team
- CVE by MITRE - common vulnerabilities and exposures
-----
- AIS - automated indicator sharing
(free program to share IOC, by CISA).
- CISA - cyber infra sec agency
-----
-=- STIX - structured threat info expression
(language for threats)
-=- TAXII - trusted automated exchange of indicator info
(to share the STIX)
-----
- Cisco Talos
- Forti Guard Labs
etc...
-----
dark web = ~ [encrypted, unindexed]
need specific
software, authorization, configurations to access
monitor this for new threat intelligence
-----

domains
threats
intel

=========================
DECEPTION:

---------------
SOCIAL ENGINEERING:
-----
- pretexting - bro, I'm from Madurai, short of 10 rupees (good story to fool you)
- quid pro quo - this for that (barter system)
- ID fraud - fake ID
-----

---------------
SOCIAL ENGINEERING TACTICS:
-----
- authority
- intimidation
- consensus
- scarcity
- urgency
- familiarity
- trust
-----
generally exploiting all
human feelings :)
-----

---------------
SHOULDER SURFING & DUMPSTER DIVING:
-----
see their PIN in ATM
see their trash in ATM
-----

---------------
IMPERSONATION AND HOAXES:
-----
pretend to be someone else
hoax = spam to deceive someone
-----

---------------
PIGGYBACKING & TAILGATING:
-----
- tailgating - bad guy follow good guy
without good guy knowing it
- piggybacking - bad girl is let in by
our smart good guy
-----

---------------
OTHERS:
~ -=-
-----
- invoice scam:
scammers send a bill to be paid
which you never ordered
may pretend to be trusted partner
-----
- watering hole attack:
plant bomb in river so animals
come by themselves and need not
search for them
-----
- typo squatting:
chatpgt.com
-----
- prepending:
malicious code onset of legit
-----
- influence campaigns:
invest in my crypto
-----

---------------
DEFEND AGAINST DECEPTION:
-----
- never pass confidential data over
email, chat, text, call, in person to unknown parties.
-----
- resist the urge to click links
-----
- uninitiated or automatic downloads
-----
- educate employees
-----
- take ownership of security issues
-----
- do not give in to pressure by unknown
-----

---------------
EXPLORE SOCIAL ENGINEERING TECHNIQUES -=- LAB:
-----

=========================
CYBER ATTACKS: ~ [12]

-----
malware is a software
used in an attack
-----

---------------
DIFFERENT MALWARES:
-----
makes different attacks:
steal/ bypass/ cause harm/ compromise
-----
~ [viruses] - eg: [melissa]
~ [worms] - eg: [code red]. worms share similar patterns
~ [trojan horse] - bind with non exe files
-----

---------------
LOGIC BOMBS:
-----
waits for trigger
-----

---------------
RANSOMWARE:
-----
hold(encrypt) data until payment made
-----

---------------
DOS: *
-----
overwhelming quantity/ malicious packets
-----
it is an attack, not malware
-----

---------------
DNS:
-----
domain reputation
spoofing
domain hijacking
URL
-----

---------------
LAYER 2 ATTACK:
-----
move data across linked physical network
IP - ARP - MAC
~ [spoof MAC, ARP, IP]
~ [flood MAC]
-----

---------------
performance issue with systems: DDoS attack
-----

---------------
MITM, MITMO:
-----
intercept, modify, impersonate
[Zeus malware - MITMO capabilities]
-----

---------------
0 DAY ATTACKS:
-----
exploits before they are known
defend against fast moving target
sophisticated, holistic view of architecture
-----
~ [threat hunting]
-----

---------------
KEYBOARD LOGGING:
-----
record/ log keystrokes
configure [keylogger] to send that log files to criminal
-----
anti-spyware tools can detect, remove it
-----

---------------
DEFEND AGAINST ATTACKS:
-----
- configure firewalls - remove packets from outside
- patches, updates
- distribute the workload
~ [block external ICMP - prevent DOS]
-----

-----
malware is the bomb
attack is the process
-----
~ -=-
attack:
flood
spoof
DDOS
MITM
keylogging
zero days
etc...
-----

=========================
WIRELESS AND MOBILE DEVICE ATTACKS:

---------------
~ [GRAYWARE] - unwanted app, annoying manner
~ [SMISHING] - short message service, trick people
-----

---------------
ROGUE AP:
-----
WAP installed without authorization = ~ [RAP]
-----
social engineering -> get physical access to infra
-> install RAP. use as MITM
-----
~ [evil twin attack] - attacker's AP looks better than real one
-----

---------------
RF JAMMING:
-----
wireless signals susceptible to EMI, RFI, lightning,
noise from florescent lights.
-----
interference
-----

---------------
BLUETOOTH ATTACKS:
-----
- bluejacking - send unauthorized messages to others
- bluesnarfing - get information from target
-----

---------------
ATTACK AGAINST WI-FI PROTOCOLS:
-----
~ -=-
- WEP, WPA = protocols to secure wireless networks
- WEP uses keys but no key management, small init vector
recover encryption key by observing network traffic.
- WPA-2 = can analyse packets going but can't see keys.
-----

---------------
WI-FI & MOBILE DEFENCE:
-----
authentication, encryption
change default config settings
-----
restrict AP placement by
~ [placing it outside FW or in DMZ]
DMZ = perimeter network to protect LAN.
-----
- WLAN tools:
~ [netstumbler] etc - detect RAP
netstumbler -> RAP killer!
-----
develop policy
[VPN] for WLAN access
-----

wireless:
Bluetooth
wi-fi
radio jam

=========================
APPLICATION ATTACKS:

---------------
CROSS-SITE SCRIPTING: (XSS)
-----
attackers inject malicious scripts into webpages
-----
attacker -> malware into webpage -> into user's browser
-> access cookies, session tokens... impersonate user.
-----
attacker -> website -> your browser -> you
-----

---------------
CODE INJECTION:
-----
modern websites uses database - SQL, XML...
~ [XML, SQL, DLL, LDAP injection attacks]
-----

---------------
BUFFER OVERFLOW:
-----
buffers = [memory allocated to apps]
data written beyond buffer limit
crash or escalates privileges
-----

---------------
REMOTE CODE EXE:
-----
learn METASPLOIT, white hat cybersecurity tool
~ [revshells]?
-----

---------------
OTHER APPLICATION ATTACKS:
-----
- CSRF (cross site request forgery):
login to yono, visit  malicious site
while still logged in yono
malicious site pretends to be
you and transfers money
-----
- race condition attack
- improper input handling attack
- error handling attack
- API attack *
- replay attack *
- directory traversal attack *
- resource exhaustion attack
-----

~ -=-
- scripting
- injection
- overflow
- remote exe
- forgery
- error handle
- replay
etc

---------------
APPLICATION ATTACK DEFENCE:
-----
- write solid code
- prudent programming practice
- software up to date
-----

---------------
SPAM MAIL:
-----
junk mail/ unsolicited email
maybe advertising but...
how to identify spam mails?
bulk spams -> viruses/ worms found
malware or deceptive content
abnormal email with tricks
-----

---------------
PHISHING:
-----
to steal info
masquerading as legitimate person or organization
trick target to instal malware or share info.
congratulations! you won I phone 69
give your ATM pin immediately.
targeted phishing = spear phishing.
-----

---------------
VISHING, PHARMING, WHALING:
-----
- voice. scam calls
- misdirect users to fake version of an official website
- phish a high profile individuals - CEO?
smishing
-----

---------------
EMAIL, BROWSER DEFENCE:
-----
can't stop spam but reduce effects
1st filter = ISP itself, email software itself,
antivirus software, educate persons,
never assume it's safe. scan before opening.
~ [APWG] - anti-phishing working group
update, patch.
-----

---------------
MORE:
-----
physical attacks
adversarial AI attacks
supply chain attacks
cloud based attacks
-----
~ -=- ATTACKS:
- phishing
- spoofing
- flooding
- injection
- scripting
- hijacking
- brute force
- password cracking
- DoS
- insider
- drive-by
-----

=========================
EXTRAS:

---------------
~ -=-
OSINT list
back orifice
net bus
Domain reputation
WHOIS record
-----

---------------
~ -=-
this module was about
[threats, deception, attacks]
-----
result of an ATTACK is a
THREAT to defenders.
-----

---------------
surf the internet for:
-----
- threats - types, domains, complexities, intel, research
- social engineering
- attacks - L1, L2, wireless, app etc...
-----

===============================================
M2: SECURING NETWORKS:

=========================
CURRENT STATE OF AFFAIRS:

---------------
ANATOMY OF AN ATTACK:
-----
attacker POV
target an R&D facility
see their website, find members
find more about the members
hack into their system
then to the R&D related data
cover your footprints
sell the data, make money <3
-----
architecture matters!
example: placement of firewall
-----

---------------
NETWORKS = TARGET:
-----
search for network attacks in
~ [Kaspersky]
- cyberthreat real-time map
- displays current network attacks
-----

---------------
REASON FOR NETWORK SECURITY:
-----
lot of loss, find them.
-----
aware of evolving threats, vulnerabilities
~ [cisco TALOS] intel group website
-----
~ [PSIRT] - product security IR team
dedicated ones
cisco, Fortinet, IBM etc...
-----
~ -=-
IRT = incident response team
it can be
CSIRT, PSIRT etc...
-----

===============
~ -=-
normal soldier = main stream info.
feels safe and proud
best = no boundary for information.
stressed but fine :)
===============

---------------
VECTORS OF NETWORK ATTACKS:
-----
~ [attack vector]:
attacker's path to gain access
-----
may originate from in or out
tools to mitigate both.
-----

---------------
DATA LOSS:
-----
various valuable asset
data loss/ exfiltration causes:
reputation, legal, cost damage.
implement [DLP] controls.
-----
~ -=-
Data loss vectors:
- social media
- unencrypted devices
- removable media
- improper access control
- cloud storage devices
-----

---------------
INVESTIGATE A THREAT LANDSCAPE - LAB + VIDEO:
-----

=========================
WHO IS ATTACKING THE NETWORK:

---------------
THREAT, VULNERABILITY, RISK:
-----
~ -=-
- threat * - potential breach
- risk * - potential for loss
- attack surface - all potential entry points for attackers
- vulnerability - weakness that can be exploited
- exploit - [method to breach] system vulnerabilities
            or method to get unauthorized access
-----
risk management:
- accept
- avoid *
- reduce *
- transfer
-----
local vs remote exploit
-----
countermeasure
impact
-----

---------------
HACKER VS THREAT ACTOR:
-----
- hacker:
security researcher
clever programmer
network professional
-----
- threat actor:
tries for unauthorized access
runs programmers to slow/ swipe
-----

---------------
THREAT ACTOR EVOLUTION:
-----
~ -=-
threat actor types: (evolution)
- script kiddies
- vulnerability brokers *
- hacktivists
- cybercriminals = money minded. underground economy
- state-sponsored
-----

---------------
CYBERSECURITY TASKS:
-----
best practices?
~ -=-
- trusted IT vendor
- updated security policy
- regular pen-tests
- updated software
- backup to cloud/hard disk
- enforce strong password
- change periodically
- 2FA
-----
- awareness
- checklist
- report to authorities
-----

---------------
CYBERTHREAT INDICATORS:
-----
- indicators of compromise - IOC
- indicators of attack
-----

---------------
THREAT SHARING, BUILD AWARENESS:
-----
~ -=-
- CISA, NCSA, AIS, NCASM in US
- ENSA in EU.
-----

===============================================
M3: ATTACKING THE FOUNDATION:

=========================
IP PDU DETAILS:

---------------
IPv4, IPv6:
-----
- HEADER DETAILS
(refer network notes)
-----
WIRESHARK - 2 VIDEO
-----
~ [DIAGRAMS]
-----

=========================
IP VULNERABILITIES:

---------------
IP VULNERABILITIES:
-----
~ -=-
- ICMP attacks
- DoS/DDoS attacks
- address spoofing attacks
- MiTM
- session hijacking
-----

---------------
ICMP ATTACKS:
-----
carry diagnostic messages
report error.
-----
ping command = user generated ICMP
verify connection to destination.
-----
attackers exploit ICMP
find reachable host, attack (recon)
-----
ICMP flooding
echo request - reply
unreachable
mask reply
redirects
router discovery
-----
strict ICMP [ACL] to filter in networks
IDS, FW generate alerts to analysts.
-----

---------------
AMPLIFICATION, REFLECTION, SPOOFING ATTACKS - VIDEO
-----

---------------
ADDRESS SPOOFING ATTACKS:
-----
~ -=-
- [non-blind] spoofing - see traffic
- [blind] spoofing - DOS
-----
- MAC address spoofing in internal network
[switch CAM table]
-----
~ [DIAGRAMS]
-----
application, service spoofing
rogue DHCP -> MiTM condition
-----

=========================
TCP AND UDP VULNERABILITIES:

---------------
TCP SEGMENT HEADER:
-----
~ [DIAGRAM]
-----
control bits OF TCP segments:
- URG
- ACK
- PSH
- RST
- SYN
- FIN
-----

---------------
TCP SERVICES:
-----
reliable
flow control
stateful.
-----
HTTP, SSL/TLS, FTP, DNS zone transfers
-----
TCP 3 way handshake:
SYN ->
<- ACK, SYN
ACK ->
-----
4 way to end:
FIN ->
<- ACK
<- FIN
ACK ->
-----
for both:
1
 2
1
-----

---------------
TCP ATTACKS:
-----
~ -=-
- TCP SYN flood attack
- TCP reset attack
terminates when RST bit received.
- TCP session hijacking
-----
[flood, reset, hijack]
-----

---------------
UDP SEGMENT HEADER, OPERATION:
-----
DNS, DHCP, TFTP, NFS, SNMP
~ [DIAGRAM]
-----

---------------
UDP ATTACKS:
-----
- no encryption by default
- [optional checksum]
-----
UDP flood attacks - consume resources
it is like DOS.
-----
[flood]
-----

---------------
learn how TCP/UDP works
learn how it is weaponized
flood, reset, hijack...
-----

===============================================
M4: ATTACKING WHAT WE DO:

=========================
IP SERVICES:

---------------
ARP VULNERABILITIES:
-----
exploit ARP (request - reply)
unsolicited ARP reply = gratuitous ARP replies
[unnecessary]
-----
- manipulate ARP tables
- poison ARP cache
- MITM attacks
-----

---------------
ARP CACHE POISONING:
-----
MiTM attacks
tools to create this attack =
~ -=-
- dsniff
- cain & abel
- [Ettercap]
- yersinia
-----
~ [ARP -> target table and cache]
-----

---------------
DNS ATTACKS:
-----
- DNS open resolver attacks
- DNS stealth attacks = fast flux, double IP flux, domain gen alg
- DNS domain shadowing attacks
- DNS tunnelling attacks.
-----
- DNS cache poisoning attacks
- DNS amplification, reflection attacks
- DNS resource utilization attacks
-----
~ -=-
- open resolver
- stealth
- domain shadow
- tunnel
- cache poison
- amplify, reflect
- resource util
-----
open resolver:
Exploiting misconfigured DNS servers to
amplify DDoS attacks on targets.
-----
stealth:
fast flux = rapid IP change
double IP flux = domain and IP are rapidly rotated
domain gen alg = create lots of domain names to control botnets
-----
domain shadowing:
access to domain registrar's account
and alters the DNS settings
-----
cache poison:
Manipulating DNS cache to redirect
users to malicious or fake sites
-----
amplification, reflection:
attacker -> small query to DNS server
its response -> overwhelm a target
-----
resource utilization:
DNS resource utilization attack overwhelms servers,
causing service disruptions or downtime.
-----
~ [DNS = a lot]
-----

---------------
DNS TUNNELLING:
-----
place non-DNS traffic within DNS traffic
circumvents security solutions
-----
~ -=-
DNS record types:
- TXT
- MX
- SRV
- NULL
- A
- AAA
- CNAME
etc...
-----
use a filter to inspect these...
DLP?
-----
DNS security solution:
- Cisco umbrella = cisco openDNS
~ [dynamic DNS services = sus]
-----

---------------
DHCP:
-----
normal DHCP operation - DORA
- discover
- offer
- request
- accept
-----

---------------
DHCP ATTACKS:
-----
- DHCP spoofing attacks
- rogue DHCP servers
- false IP configuration
- wrong default gateway
- wrong DNS server
- wrong IP address
-----
~ [spoof, rogue, misconfig]

---------------
EXPLORING DNS TRAFFIC - LAB:
-----

=========================
ENTERPRISE SERVICES:

---------------
HTTP AND HTTPS:
-----
need web security
-----
how web attack works:
compromised webpage
redirect to site with malware
system infected
= drive by download
-----
exploit kits scans software vulnerabilities
often [PHP script].
has management console
malware downloads from exploit kit
exploit kit server, malware server
-----
~ [connection status]:
- 1xx - info. server should not send to [HTTP/1.0 client]
- 2xx - successful
- 3xx - redirection, [detect loops]
- 4xx - client side error
- 5xx - server side error
-----
defence:
- OS, browser = update, patch
- web proxy like:
~ [cisco cloud web security]
~ [cisco web security appliance]
-----
best security practices from OWASP
~ [OWASP top 10] =
useful list of potential vulnerabilities that
are commonly exploited by threat actors.
-----
OWASP = best practices, popular threats
-----

---------------
COMMON HTTP EXPLOITS:
-----
~ -=-
- malicious [iFrames] - embed external content
I recently found one in a manga website
- http 302 cushioning - redirects traffic to overwhelm servers, causing disruptions.
- domain shadowing (after domain compromise).
-----
defence:
- cisco umbrella
- [web proxy]
- secure the domain owner accounts
so that attacker don't shadow
-----
~ [iFrames, 302 cushion, shadow]
-----

---------------
EMAIL:
-----
corporate communication backbone
-----
~ -=-
attacks:
- attachment based attacks
- email spoofing (forged sender address)
- spam email
- open mail relay server
- homoglyphs - uses visually similar characters from different alphabets
to trick users into visiting fake websites or phishing
-----
- SMTP server vulnerabilities
-----
countermeasures:
- [cisco email security appliance] ESA
- how to recognise spam?
-----
~ [spoof, spam, open]
-----

---------------
WEB-EXPOSED DATABASES:
-----
web apps connect to RDB to access data
RDB often with sensitive data (a target)
-----
- code injection
- SQL injection
-----

---------------
CLIENT-SIDE SCRIPTING:
-----
~ -=-
- cross-site scripting (XSS):
web pages executed on client side
-----
[types]:
- stored(persistent):
permanently stored on the target server
Affects any user visiting the affected page
- reflected(non):
payload is reflected in the response
Affects only user who clicks the mal-link
-----
web vulnerabilities that allow attackers to
inject malicious scripts into websites.
-----
counter:
- IPS
- web proxy *
- umbrella
-----
- content filtering
- traffic inspection
- web App Firewall (WAF)
-----

---------------
INSTALL A VM - LAB + VIDEO:

---------------
ATTACK A MYSQL DATABASE - LAB + VIDEO:

---------------
READ SERVER LOGS - LAB:

=========================
MITIGATE COMMON NETWORK ATTACKS:

---------------
DEFENDING THE NETWORK:
-----
~ -=-
best practices:
- written security policy
- control physical access
- passwords
- encrypt
- security services - FW, IPS, VPN
- antivirus
- content filtering
- backups, test it
- shut down unwanted ports, services
- update
- audits
- prevent buffer overflow
- privilege escalation
-----

---------------
MITIGATING MALWARE:
-----
- antivirus software
- host based but ok
~ -=-
- Symantec
- McAfee
- Trend Micro
alter malware to evade detection?
-----
maintain up-to-date antivirus
better than
clean up infected computers
-----

---------------
MITIGATE WORMS:
-----
countermeasures
~ [WORM] = write once, run manytimes
more network based than viruses
-----
worm response = 4 phases:
- contain
- inoculate
- quarantine *
- treat
-----

---------------
MITIGATE RECONNAISSANCE ATTACKS:
-----
- preconfigured alarms
when a parameter exceeds
ex: ICMP request count
-----
technologies and devices for to
monitor and generate alarm:
~ -=-
- cisco ASA - adaptive app security
- cisco ISR - integrated services router
can detect these...
-----
defend:
- authentication
- encryption
- anti-sniffer tools *
- switched infra
- firewall
- IPS
-----
- turn off ICMP echo, reply -> stops ping sweep
but diagnostic data is lost.
-----
port scans can be run without full ping sweeps
but takes a bit longer to scan.
-----

---------------
MITIGATE ACCESS ATTACKS:
-----
access attack = password guess/brute force/ dictionary
-----
- password security
- minimum trust principle
- cryptography
- OS, app patches
- disable after a specified attempts.
- MFA
-----
encrypted or hashed authentication protocols
strong password policy
reduces probability of successful access attacks.
-----

---------------
MITIGATE DOS ATTACKS:
-----
slow, unavailable resource
network utilization software package
network behaviour analysis tools
-----
~ -=-
anti spoofing tech:
- port security
- DHCP snooping
- IP source guard
- DAI (dynamic ARP inspection)
- ACL
-----

---------------
RECOMMENDED THREAT MITIGATION MEASURES - LAB:

===============================================
M5: WIRELESS NETWORK COMMUNICATION:

=========================
WIRELESS COMMUNICATION:

---------------
WLAN OPERATIONS - VIDEO:
-----
~ -=-
- infra mode - connects devices through a central device
- ad hoc mode - connect directly to each other without central device
- tethering - shares a device's internet connection with another
-----
basic set service
extended service set
-----
802.11 frame structure
CSMA/CA
wireless client
AP association
-----
passive, active discovery mode
-----

---------------
WIRELESS VS WIRED LAN:
-----
IEEE 802.3 | IEEE 802.11
connect hosts: [switch - WAP]
- wireless NIC reduces battery life
Wi-Fi > cellular
-----

---------------
802.11 FRAME STUCTURE:
-----
802.11 = CSMA/CA
802.3 = CSMA/CD
additional L2 header in frame
the 802.11 frame structure
-----

---------------
CSMA/CA:
----
- half duplex
- regulation varies in countries for wireless
- wired = IEEE standard only
- signal interference both, more in wireless
~ [DIAGRAMS]
-----

---------------
W CLIENT, AP ASSOCIATION:
-----
discover, authenticate, associate with AP
SSID, password, network mode, security mode
channel settings.
-----

---------------
PASSIVE, ACTIVE DISCOVER MODE:
-----
passive = advertise periodically
broadcast beacon frames with
SSID, supported standards, settings
-----
active = know SSID name
client initiate process
-----
connect to AP with probing process
-----

---------------
WIRELESS DEVICES - AP, LWAP, WLC:
-----
access points, clients with wireless NIC
-----
centralize control
management functions
of AP into a WLC
wireless LAN controller
-----
AP no longer autonomous
acts as LWAP.
LWAP = only forward data (WLC - wireless LAN)
monitor numerous AP
-----

=========================
WLAN THREATS:

---------------
WLAN THREATS - VIDEO:
-----
- interception of data
- wireless intruders
- DoS attacks
- rogue APs
-----

---------------
WIRELESS SECURITY OVERVIEW:
-----
WLAN = 
open to anyone within range of an AP
appropriate credentials to associate
wireless NIC, cracking technique = gain access
-----
- data interception
- wireless intruders
-----

---------------
DOS ATTACKS:
-----
- improperly configured devices
- malicious user intentionally interfere with
wireless communication
disables network so that legit users can't access
- accidental interference
-----
~ -=-
2.4 more prone to interference than 5GHz band
-----
Defence:
- harden the systems
- secure the passwords
- create backups
- configuration checks
- monitor WLAN
- use 5GHz in interference prone areas
-----

---------------
ROGUE ACCESS POINT:
-----
WAP or w router connected without authorization
against the policy.
-----
anyone with access to premises
install an inexpensive router
gives access to secure network
-----
capture MAC addresses
data packets
gain network resources
launch MiTM
-----
a personal hotspot could also be RAP
act like original
-----
configure WLCs with rogue AP policies
~ [DIAGRAM]
-----

---------------
MITM:
-----
evil twin AP is an MITM attack
-----
RAP:
configure with same SSID as legit AP
airports, cafes, restaurants...
trap with open authentication, read packets
-----
same SSID?
near, strong signal AP likely associated.
user traffic sent to rogue AP
it captures data, forwards to legit AP
steal passwords, personal info,
access their device, compromise the system.
-----
sophistication of WLAN infra matters to defend
identify legit devices
-----

=========================
SECURE WLAN:

---------------
SECURE WLAN - VIDEO:
-----
~ [SSID CLOAKING]:
hides a Wi-Fi network's name to make it invisible to unauthorized users.
disable SSID beacon frame
must manually configure SSID.
-----
- MAC ADDRESS FILTERING:
permit or deny clients
authentication, encryption systems
(open, shared key authentication)
-----

---------------
802.11 ORIGINAL AUTHENTICATION METHODS:
-----
SSID cloaking or MAC address filtering
alone won't make it secure.
-----
- shared key authentication:
WEP - WPA - WPA2 - WPA3
-----
- open system authentication
no password, open.
-----
~ -=-
- cloak SSID
- filter MAC
- shared key auth
-----

---------------
AUTHENTICATING A HOME USER:
-----
- personal = [PSK]
- enterprise = RADIUS server needed,
uses [EAP] for authentication
- WPA3 >>
-----

---------------
ENCYPTION METHODS:
-----
> TKIP (WPA):
support for legacy WLAN equipment
- solves flaws of WEP
- Message Integrity Check (MIC)
- uses WEP but encrypts L2 info with TKIP
-----
> AES (WPA2):
- stronger method
- Counter Cipher Mode with
Block Chaining Message Authentication
Code Protocol (CCMP)
- allows D to recognize if
bits are altered or not.
-----

---------------
AUTHENTICATION IN ENTERPRISE:
-----
- stricter security requirements
- additional authentication or login is required
AAA RADIUS server.
-----
reachable address of RADIUS server
authenticate AP with RADIUS server.
-----
UDP port numbers:
- 1812 = RADIUS authentication
- 1813 = RADIUS accounting
also = 1645, 1646
-----
~ -=-
[AP - EAP - RADIUS]
- shared key on AP to authenticate with RADIUS server
- handled by 802.1X standard
= centralized, server-based authentication of end users.
-----
- 802.1x uses EAP to communicate with AP, RADIUS server
EAP is a framework for authenticating network access.
-----

---------------
WPA3:
-----
- personal
- enterprise
- open networks
- IOT
-----

---------------
CONFIGURE WIRELESS SECURITY - LAB:

---------------
TROUBLESHOOT WIRELESS CONNECTION - LAB:

===============================================
M6: NETWORK SECURITY INFRASTRUCTURE:

=========================
SECURITY DEVICES:

---------------
SECURITY DEVICES - VIDEO:
-----
L2 security:
-----
> workgroup switches:
- port security
- DAI
~ [DHCP snooping]
-----
snoop = intercept, monitor
sniff = intercept, analyse
-----
distribution layer:
-----
> multilayer switches gives L3, L4 firewalls
-----
wireless network:
> WAP provide WPA2 authentication
-----
proxies:
> web, email, SSL proxy firewalls inspect traffic
SSL security appliance -> decrypt HTTPS, then send to IDPS.
-----
> IDS detect attacks
between core switch, edge router = L7 firewall (cisco ASA) NGFW
-----
> ASA provides L7 firewall, inline IPS
> cisco Talos provides global threat intelligence
coordinate with ASA NGFW.
-----
switches
WAP
proxy
IDS
NGFW
-----

---------------
FIREWALLS:
-----
properties
benefits
limitations
-----

---------------
COMMON SECURITY ARCHITECTURES:
-----
> private and public
> DMZ
> zone based policy firewalls.
~ [DIAGRAMS]
-----

---------------
FIREWALL TYPES:
-----
~ -=-
- stateless - packet filtering firewall
- stateful firewall
- application gateway firewall
- NG firewall
-----
also:
> host based
> transparent
> hybrid
-----

---------------
IPS, IDS:
-----
~ [DIAGRAMS]
- cisco ASA installed device?
-----
- advantages, disadvantages
- IDS vs IPS
- deployment considerations
- sensors
- signature based
-----
- anomaly detection (simple-packet)
- composite patterns (multi-packet)
-----
types:
> host based
> network based
-----
- IDS not inline?
- well designed security policy?
-----
~ -=-
networking architecture paradigms...
more info here
-----
- IDS = no latency, no congestion
can't stop, vulnerable
- IPS = stop, stream normalization
issues affect traffic, overloading, latency
-----
~ [HIPS] = antimalware + firewall
-----
combined with NIPS = good
work only in local level.
no complete view of network
HIPS on all hosts = good.
-----
NIPS = behind firewall in network
with a management server
another sensor for web, DNS server
corporate, server, internet = separated.
~ [DIAGRAM]
-----

---------------
SPECIALIZED SECURITY APPLIANCES:
-----
~ [AMP, ESA, WSA]
-----

=========================
SECURITY SERVICES:

---------------
SECURITY SERVICES - VIDEO:
-----
~ -=-
- IDS
- switched port analyser (SPAN)
- syslog
- AAA
- netflow
- SNMP
-----
IDS:
scan packets against security [signatures]
~ [core switch].
-----
SPAN -> port mirroring -> packets duplicated, sent to IDS
-----
syslog server -> collect log messages, analyse later
-----
AAA server -> has all user authentication
router send all login attempts to RADIUS server
-----
netflow = cisco service. enable, configure on routers, switches
ingress, egress traffic (for interface)
packet header details sent to netflow collector
use netflow info, find talkative ones in network
-----
SNMP in network management station  
read info from SNMP agents
read, manage, monitor hosts
give info to devices too
change router name from here...
-----

---------------
TRAFFC CONTROL WITH ACLs:
-----
series of commands
for [packet control]
based on header info.
-----
limit traffic, reduce load
increase performance
flow control
restrict unwanted or unsure ones
basic level of security
prevent hosts from accessing areas
-----
filter based on traffic type:
permit email, block telnet traffic
FTP, HTTP...
-----
allow, deny
analyse, forward, process...
priority processing? (VIP pass)
-----
~ [diagram] topology with ACL
-----

---------------
ACL FEATURES:
-----
ACL:
- standard, extended
- number, name to identify the ACL
-----
ACL logging, messages
-----

---------------
ACL DEMONSTRATION - LAB:

---------------
SNMP:
-----
read for more info
application layer protocol - [L7]
-----
provides message format
manager agent relationship
-----
MIB database
-----
part of NMS
- traps in SNMP?
-----

---------------
NETFLOW:
-----
Cisco IOS technology
SNMP = network management fetures, options
netflow = statistics on IP packets
~ [DIAGRAMS]
NetFlow collector
-----

---------------
PORT MIRRORING:
-----
packet analyser or sniffer = capture packets
entering, exiting NIC
-----
switch can isolate traffic
port mirroring = feature:
allows switch to duplicate copies
send to network monitor
original traffic sent in usual manner
~ [DIAGRAM]
-----

---------------
SYSLOG SERVERS:
-----
~ -=-
trusted mechanisms to notify the
administrator during events
-----
protocol called syslog
access system messages
-----
for networking devices
to syslog servers.
-----

---------------
NTP:
-----
synchronize the time across devices
learn more
-----
NTP stratum levels
0 to 16 max
-----

---------------
AAA SERVERS:
-----
~ -=-
- TACACS+, RADIUS = authentication protocols
to communicate with AAA servers
-----
selected according to needs
-----
both = to communicate between router, AAA servers
~ [router - RADIUS/TACACS+ - AAA server]
-----
RADIUS = password only encrypted
TACACS+ = more secure, all encrypted.
see more...
-----

---------------
VPN:
-----
~ [pvt net over public net]
-----
- virtual connections
- olden VPN = [IP tunnels]
-----
- generic routing encapsulation (GRE):
a tunnelling protocol which encapsulate packets
-----
- virtual point to point link
- encrypted
- peer connections within defined community of interest
- virtual private networking
-----
~ -=-
- layer 3 VPN:
GRE and [IPsec] (point to point)
MPLS (any to any)
-----
- GRE by cisco
- IPsec by IETF
read more.
-----
GRE itself don't encrypt data
it is used alongside IPsec
-----
SSL VPN?
-----

===============================================
M7 & M8: OPERATNG SYSTEMS:

===============================================
M9: SYSTEM AND ENDPOINT PROTECTION:

=========================
DEFENDING SYSTEMS AND DEVICES:

---------------
OS SECURITY:
-----
- good administrator
- systematic approach
- baseline
-----
remove unwanted programs, services
keep it under control
update in timely manner.
documented plans.
scan, audit...
-----
adware protection
trusted/untrusted sources verification
phishing protection
antivirus protection
spyware protection
-----
watch out!!!
- rogue anti virus products!
- ads like actual windows warning!
-----
- fileless malware
straight to memory
no footprint
- ends when rebooted
-----
scripts can be malware too
- py, bash(cmd for mac, Linux)
~ [VBA - Microsoft macros]
-----
remove unapproved software
non-compliant ones
may not to be malware but still
violates security policy
-----

---------------
PATCH MANAGEMENT:
-----
threat actors evolving
to exploit vulnerabilities.
install patches.
-----
- patch = code to prevent malware
- service pack = patch + upgrades
updates = security - critical - service.
-----
cybersecurity professional:
- test a patch before deploying,
- patch management tools
- automated patch service
-----

---------------
ENDPOINT SECURITY:
-----
~ -=-
- HFW
- HIDS
- HIPS
- EDR *
- DLP
- NGFW
- UEBA?
-----
- windows firewall = software firewall
- configure inbound and outbound rules
-----
HIPS:
- monitor for known attacks,
- anomalies (deviation in bandwidth, protocols, ports)
alarm, log activity, reset connection or drop packets
-----
EDR:
- collect data, monitor
- analyse, respond to threats.
-----
antivirus = block threats
EDR = block, find more
-----
DLP:
- centralized way to ensure data not
lost, misused, accessed by unwanted
-----
NG FW =
firewall + other network device filtering functions
- an AFW with deep packet inspection(DPI) on IPS.
AFW = application firewall.
-----

---------------
HOST ENCRYPTION:
-----
~ [EFS] from windows = encrypt files
~ [FDE] to encrypt whole drive.
-----
~ [bitlocker] to FDE
enable TPM in BIOS
-----
~ [bitlocker go] = encrypt removable drives
no TPM chip but still does
password to decrypt it
self encrypting drive?
-----

---------------
BOOT INTEGRITY:
-----
can be attacked anytime
necessary to remain secure during boot
ensure, not altered while OS loads
-----
~ [Firmware] - basic software instructions
- BIOS - basic input/output system
- UEFI - unified extensible firmware interface
-----
defines a standard interface
with OS, firmware, others.
UEFI can run in 64 bit mode.
-----
~ [secure boot] = security standard
- system boots
- firmware checks signature of all
- gives control to OS.
-----
~ [measured boot] >>> secure boot.
- measure each component
- store in [TMP chip] to create log
- test logs remotely
allows anti-malware to load earlier
-----

---------------
APPLE SYSTEM SECURITY FEATURES:
-----
security focussed hardware:
- special CPU & boot
- dedicated AES encryption engine
all these on
~ [secure enclave chip]
-----
> encrypted storage:
- apple data protection
- filevault data storage encryption
supported by AES encryption engine.
-----
~ -=-
allows cryptography processes
without [exposing keys] to
main CPU, OS, apps.
-----
> secure boot:
boot ROM protect low level hardware
allows unaltered apple OS software to run
-----
> secure biometric data:
biometric authentication data processed in
security hardware system.
[segregated from OS, apps, malware too]
-----
> find my mac:
location tracking function
remote device locking
storage erasing
-----
> Xprotect:
antimalware tech
prevent malware execution
[signature based]
alerts, option to remove
-----
> malware removal tool:
- detects, removes
detection rules automatically updated by apple
monitors at system restart, user login too.
-----
> [gatekeeper]:
only apple apps can be installed
feels safe but f*ck.
-----
~ -=-
- secure enclave chip
- encrypted storage
- secure boot
- secure biometrics
- find my MAC
- Xprotect
- MRT
- gatekeeper
-----

---------------
MANAGING DEVICE THREATS:
-----
~ -=-
best practices:
- update, patch OS
- establish ACL policies, standards, procedures, guidelines
- automated antimalware solutions
- password policies
- threshold lockouts
- content filtering
- disable internal CD drivers, USB ports
-----

---------------
PHYSICAL PROTECTION OF DEVICES:
-----
- cable locks
- locked rooms
~ [faraday cages] - blocks EMF?
- standard keyed lock + [deadbolt] lock
- cipher lock
- RFID systems - radio waves to track
-----

---------------
HARDEN A LINUX SYSTEM - VIDEO + LAB:

---------------
RECOVER PASSWORDS - VIDEO + LAB:

=========================
ANTI-MALWARE PROTECTION:

---------------
ENDPOINT THREATS:
-----
endpoints = hosts on network, can be accessed
by other hosts on network.
-----
~ -=-
remote device connect with VPN also endpoint
way for malware to gain access to network
-----
cisco security research:
.hta, .js, .zip, .docm, .wsf
analysis chart
-----

---------------
ENDPOINT SECURITY:
-----
protect network perimeter from outside
use:
~ -=-
- VPN services
- NG FW (ASA)
- IPS
- AAA
-----
protect network internally:
- endpoints
- network infrastructure.
-----
~ -=-
susceptible to LAN related attacks:
- MAC table overflow
- spoofing attacks
- DHCP related attacks
- LAN storm attacks
- STP manipulation attacks
- VLAN attacks.
-----

---------------
HOST BASED MALWARE PROTECTION:
-----
expanding network perimeter
remote access with VPN
these devices minimally secured
need host based antimalware software
host based firewall...
-----
~ -=-
antimalware software:
- defender virus
- threat protection
- cisco AMP
- Norton security
- McAfee
- Trend Micro
etc...
-----
these are:
~ -=-
- signature based (characteristics of known malware files)
- heuristics based (general features of various malware)
- behaviour based (analysis of sus behaviour/anomalies)
-----
real time protection, analyse data
~ [host based = agent based]
~ [agentless] antivirus scans host from [central] system
agentless good for virtual environments
~ [VMware's cShield]
-----
> host based firewall:
[FW] functions included in [OS]
- windows defender firewall
- Linux iptables
- Linux tcpwrappers
~ [defender vs iptables]
-----
~ -=-
> host based security suites:
- antimalware
- HIPS
- firewall functions
- safe browsing
-----
= layered defence
~ [AV-TEST] = reviews protection
-----

---------------
NETWORK-BASED MALWARE PROTECTION:
-----
~ -=-
- NGFW
- NIPS
~ [NAC] - network access control
~ [Gateway security]
- Endpoint security
-----
security architectures...
endpoints in borderless networks
layers of scanning
network based malware protection devices
share info among themselves
network, host based techniques
~ [ AMP, ESA, WSA, NAC ]
research about Cisco products
-----
NAC = network admission control - [permits only]
compliant systems to connect to network.
-----
all work together DIAGRAM:
> outside:
- sandboxing
- 3rd party integration
- talos/ threat intelligence
- AMP public/private cloud
> inside:
- NGFW
- NG IPS
- endpoint HIDS sensors
- other infra devices
ESA
WSA
-----
~ -=-
out: sandbox, threat intel, cloud
in: firewall, IDPS
-----

=========================
HOST BASED INTRUSION PREVENTION:

---------------
HOST BASED FIREWALLS:
-----
- standalone software programs
- control traffic in & out
- control packets
-----
apps there for phones
- set of predefined policies, profiles
- rules to create or modify
- based on address, protocols, ports
-----
configure to issue alerts
firewall logs, filtering, parsing techniques.
distributed firewalls =
host based features, central management
both type needed.
- windows defender
- iptables
- nftables
- TCP wrappers
-----

---------------
HOST BASED INTRUSION DETECTION:
-----
monitor sus activities
monitor, report, analysis, alerts.
management server endpoint
-----
~ [HIDS = antimalware + firewall]
- host based mostly does both detect, prevent
- logs stored locally
- logs slow down the system
- HIDS architecture
useful DIAGRAMS!
-----

---------------
HIDS OPERATION:
-----
- prevent known
- detect unknown potential attacks.
-----
- proactive, reactive strategies in HIDS
signatures to detect
- signatures good for known
not good against zero day
- some malwares = ~ [polymorphism] too
to evade detection.
-----
need additional strategies:
- anomaly based:
compare with baseline model for deviations
~ [behaviour based]...
log details of intrusion, alert, act
can create erroneous results.
- policy based:
~ [violate rules = action from HIDS]
shutdown the violated ones
predefined rules
custom policies
-----

---------------
HIDS PRODUCTS:
-----
~ -=-
- Cisco AMP (Cloud-managed EPS solution)
- alienvault USM
- tripwire
- OSSEC
-----
vintage products
follow news/blogs
for latest ones.
-----

---------------
RECOMMENDED ENDPOINT SECURITY MEASURES - LAB:
-----

=========================
APPLICATION SECURITY:

---------------
ATTACK SURFACE:
-----
- total sum of vulnerabilities
-----
~ -=-
- open ports
- servers, hosts
- software
- protocols
- users
- IoT, BYOD and more
-----
~ [SANS] -> attack surface:
> network
> software
> human
-----
- expanding attack surface:
BYOD
cloud
IoT
Mobility
Global ops
-----

---------------
APPLICATION BLOCK LIST AND ALLOW LIST:
-----
- limit access = reduce attack surface
users, programs, websites to allow
[allow list with a security baseline]
consider amount of risk before in or not
-----
~ -=-
- windows local group policy editor
- cisco firepower
[security management system]
-----
- talos security intelligence, get blacklists
~ [spamhaus] project - free blacklist service
-----

---------------
SYSTEM BASED SANDBOXING:
-----
execute, analyse sus files in safe environment
-----
- cisco AMP = track trajectory for polymorphism
sandbox - cisco threat grid glovebox
create signatures
~ [cuckoo sandbox]
~ [virus total]
~ [joe sandbox]
~ [crowdstrike falcon sandbox]
~ [ANY.RUN]
map malware tactics with MITRE matrix
-----

---------------
USING A SANDBOX TO LAUNCH MALWARE - LAB:

---------------
ONLINE MALWARE INVESTIGATION TOOLS - LAB:

===============================================
M10: CYBERSECURITY PRINCIPLES, PRACTICES, PROCESSES:

=========================
THREE DIMENSIONS:

threats, threat domains attackers can target?
principles, practices, processes to cybersecurity.

---------------
CYBERSECURITY CUBE:
~ -=-
-----
1st dimension = [need for security]:
- confidentiality
- integrity
- availability
-----
2nd dimension = [states of data]:
- process
- storage
- transit
-----
3rd dimension = [pillars to defend]:
- people
- tech
- policy and practices
-----
CIA
PST
PTP
-----

---------------
CIA TRIAD:
-----
- for confidentiality: ~ [tokenization]
[a substitute for encryption]
(random value with no relation replaces data)
token = meaningless, no value outside
preserves data format
useful for DB, card payment processing.
-----
~ -=-
- digital rights management
- information rights management
DRM, IRM protect data with encryption.
-----
DRM = music, films, books
cd, mp3, e-book encrypted
can't copy without decryption key
available with licensed parties
IRM = email... (communication)
allows document owner, org/ member
to control, manage access to it.
-----

---------------
PROTECTING DATA PRIVACY:
-----
- personal data
- business data
- classified data
-----
- privacy enhancement technologies
- anonymization
- data minimization
- tokenization
for privacy concerns
-----

---------------
DATA INTEGRITY:
-----
- accuracy, consistency, trustworthiness
of data across its entire lifecycle.
-----
remain unaltered
capture, store, retrieve, update, transfer.
-----
ensure integrity:
- hashing
- data validation checks
- access controls
-----
health, e-commerce = more trust
blogs, social media, searches = mid to low trust
-----

---------------
AVAILABILITY:
-----
prevents access to legal users
reasons to interrupt availability
takedown a rival website
-----
- redundancy
- backup testing
- resiliency
- equipment maintenance
- OS, software updates, patches
- new technology implementations
- monitor 24/7
- disaster planning
- availability testing
- practice plan for unforeseen disasters.
-----

---------------
CYBERSECURITY SORCERY CUBE SCATTER QUIZLET - LAB + VIDEO:
-----
~ [McCumber Cube framework] for cybersecurity
focus on core principles
3 dimensions
each with 3 elements
-----

---------------
FILE & DATA INTEGRITY CHECKS - LAB + VIDEO:
-----
- Recover files after a cyber attack.
- Use hashing to verify file integrity.
- Use [HMAC] to verify file integrity.

---------------
FILE & DATA ENCRYPTION - LAB + VIDEO:
-----
Discover encrypted account credentials
using ~ [OpenSSL tool]
-----
Upload and download confidential data.
Decrypt the contents of a sensitive file.
-----

=========================
STATES OF DATA:

---------------
DATA AT REST:
-----
in storage
no process using it
not in transit data
-----
~ -=-
data stored in:
- direct attached storage - DAS
- RAID
- network attached storage - NAS
- service area network - SAN architecture
- cloud storage
-----

---------------
CHALLENGES OF PROTECTING STORED DATA:
----
- direct-attached storage = hard to store, manage
- network storage systems = redundant, performance
hard to configure and manage.
-----
- RAID, NAS, SAN
performance, redundancy
but complex to manage
-----
countermeasures:
- avoid direct attached methods
- use network storage systems,
- IT technician will manage it
-----

---------------
METHODS OF TRANSMITTING DATA:
-----
~ -=-
- sneaker net - move data physically (pendrive/ USB flash drive/ hard drive)
- wired networks - LAN, WAN
- wireless - SOHO...
-----
open source standards - IP, HTTP
-----

---------------
CHALLENGES OF DATA IN TANSIT:
-----
wireless increases attack surface?
protect CIA of data in transit
-----
~ -=-
protection:
~ [VPN, SSL, IPsec] etc = confidentiality (packet capture)
~ [hashing, redundancy] = integrity (intercept, alter)
~ [mutual authentication] = availability (rogue AP)
-----

---------------
DATA IN PROCESS:
-----
data integrity checks
input, modification, output
-----

---------------
PROTCT DATA:
-----
need well designed systems
policy, procedures to
test, maintain, update.
-----

---------------
DATA SECURITY CHALLENGES - LAB:
-----
Data at Rest.
Data in Transit.
Data in Process.
-----

=========================
CYBERSECURITY COUNTERMEASURES:

---------------
HARDWARE & SOFTWARE BASED TECHNOLOGIES:
~ -=-
-----
> software based:
software = programs, databases, services
-----
- software firewalls:
OS already have a firewall
or else get one...
-----
- network and port scanner:
monitor open ports
-----
- protocol analysers:
signature analysers
collect, examine traffic
find faults
-----
 vulnerability scanners:
programs to asses weakness
-----
- HIDS:
generates [log files]
alarm messages if
detected unusual activity
-----
> hardware based:
physical devices
-----
- firewall:
block unusual traffic
custom rules
allow or deny traffic
-----
- proxy servers:
masking true origin of request
on behalf of client
-----
- hardware based access control:
biometric tech...
-----
- network switches:
a connection point
security efficiency of network
-----

---------------
CYBERSECURITY AWARENESS CULTURE:
-----
security policy = must
unawareness = vulnerability
misconfigurations
-----
education and training
~ [gamification]
activities
awareness program
ever going process
-----
build a culture
-----

---------------
POLICIES:
-----
[security policy]
objectives, [rules of behaviour],
system requirements to adhere to.
-----
commitment to security
consistency in operations
[legal consequences]
mechanisms needed
-----
~ -=-
- identification, authentication policies
- password policies
- acceptable use policy
- remote access policies
- network maintenance policy
- incident handling policy
-----
common security policy
acceptable use policy
what a user can, can't do
explicit as possible
no misunderstandings
list them
-----

---------------
STANDARDS:
-----
for consistency in operations.
have some standards bro!
-----

---------------
GUIDELINES:
-----
- list of suggestions
for efficiency, security
like standards but flexible, not mandatory
-----
defines standards
helpful guidelines makes best practices
~ [NIST, NSA]
-----

---------------
PROCEDURES:
-----
- longer, detailed than
standards, guidelines
- implementation details
step-by-step instructions
simple, visuals...
procedure documents to
maintain consistency.
-----

---------------
policies = rules
standards = status
guidelines = suggest
procedures = steps
-----

***********************************************
***********************************************
NETWORK DEFENCE:

===============================================
M1: UNDERSTANDING DEFENCE:

=========================
DEFENSE-IN-DEPTH:

---------------
ASSETS, VULNERABILITIES, THREATS:
-----
gives value to org:
server, infra, data
-----
weakness in system
could be exploited
-----
potential danger to asset
-----

---------------
IDENTIFY ASSETS:
-----
more asset needs more management
-----
asset can be,
intelligence, customer data,
account info, financial info...
-----
asset = attack surface
-----
implement policies, procedures
protect them
-----
~ -=-
do better and calm as analyst
promoted to work on risk management
-----

---------------
ASSET CLASSIFICATION:
-----
~ -=-
- a labelling system
how valuable, critical it is
-----
determine:
- software
- hardware
- information
- service
-----
- account:
owners of info, apps
-----
classification criteria:
- confidentiality
- time
- value
- access rights
- destruction
-----
classification schema:
consistent way
-----

---------------
ASSET STANDARDIZATION:
-----
- easy to maintain
- easy to fix when problem
- efficient
-----
non standardized:
- hard to manage
- maintenance costs
- inventory
like Indian armed forces
-----

---------------
ASSET LIFECYCLE STAGES:
-----
~ -=-
- procurement
- deployment
- utilization
- maintenance
- disposal
-----

---------------
IDENTIFY VULNERABILITIES:
-----
- list of likely threats
ask questions to identify threats
-----
DIAGRAM example with e-banking:
- data input errors
- phony transactions
- stolen customer data
- internal system compromise
- insider attack
- data centre destruction
-----
~ -=-
understand used apps to
identify vulnerabilities on network
need to research
-----

---------------
IDENTIFY THREATS:
-----
~ [defence-in-depth approach]:
uses [multiple layers] of security
at edge, inside, points.
-----
[internet - R1 - FW - R2 - LAN]
-----
also,
- IPS, AMP, ESA, WSA, IAM, NAC
in defence in depth approach.
-----
different layers work together
1's failure doesn't affect
other's effectiveness.
-----

---------------
SECURITY ONION, ARTICHOKE:
-----
~ [describes defence-in-depth approach]
-----
ONION:
- assets
- hardened devices
- AAA
- content filtering
- IPS
- FW
-----
ARTICHOKE:
- passwords
- client-side attacks
- databases
- web applications
- buffer overflows
-----
In the security artichoke,
defence-in-depth approach
not every layer needs to be penetrated
by the threat actor in order to get to
the data or systems. Each layer provides
a layer of protection while simultaneously
providing a path to attack.
-----

---------------
DEFENCE IN DEPTH STRATEGIES:
-----
layering
limiting
diversity
obscurity
simplicity
-----

=========================
CYBERSECURITY OPERATIONS MANAGEMENT:

---------------
CONFIGURATION MANAGEMENT:
-----
identify
control
audit implementation
changes to established baseline
-----
baseline configuration
template of sorts.
according to documented configuration
-----
- IP schema
- standard naming
- network maps
- cabling, wiring diagrams
- app config specs
-----
harden OS
log files
change default credentials
account policies
file level access control
-----

---------------
LOG FILES:
-----
records events as they occur
-----
> log management:
- generate
- transmit
- store
- analyse
- dispose
-----

---------------
OS, APP SEC LOGS:
-----
- client requests
- server responses
- user info
- transaction size, number
-----
generates a security log
auditing analysis
identify trends, long-term problems
-----
OS logs -> user login attempts
APP logs -> word app behaved unexpectedly
-----

---------------
PROTOCOL ANALYSERS:
-----
intercept, log [network traffic]
captures [packet]
-----
- values of fields in packet, analyse
-----
Network problem analysis
network misuse, intrusion attempts
Isolation of exploited systems
-----
~ -=-
- wireshark* = packet analyser
- TCPdump = cmd in Linux
- Ettercap* = suite for MITM
- Kismet* = network detector
- Ngrep = packet analyser
- Ntop = net traffic probe
- EtherApe = GUI net monitor
-----

=========================
SECURITY POLICIES, REGULATIONS, STANDARDS:

---------------
BUSINESS POLICIES:
-----
- company policies
- employee policies
- security policies
-----

---------------
SECURITY POLICY:
-----
~ [commitment] to security
- rules to be followed
- consistency in operation
- legal consequences
-----
- identification, authentication policy
- password policies
~ [acceptable use policy]
- remote access policy
- network maintenance policy
- incident handling procedures
-----

---------------
BYOD POLICIES:
-----
goals
requirements
rights to access
regulations
safeguards
-----
- password protected access
- manually control wireless security
- keep updated
- back up data
- find my device
- antivirus software
- mobile device management software
-----

---------------
REGULATORY & STANDARDS COMPLIANCE:
-----
~ [INFOSEC]
external regulations?
laws, codes of ethics
-----
Compliance regulations define what
organizations are responsible for
providing and liability if failed to comply.
-----

---------------
DOCUMENT ENTERPRISE CYBERSECURITY ISSUE - LAB:
-----
Part 1: Record your assessment of Athena's cybersecurity issues.
Part 2: Record different types of assets owned by Athena.
Part 3: List threats for each asset type.
Part 4: Recommend mitigation techniques to address each threat.
-----

===============================================
M2: SYSTEM & NETWORK DEFENCE:

=========================
PHYSICAL SECURITY:

---------------
FENCING & BARRIERS:
-----
physical security
check design [requirements]
specifications
-----
perimeter
-----

---------------
BIOMETRICS:
-----
~ -=-
type 1 error = false rejection
type 2 error = false acceptance
-----
type 2 = )>.<(
-----

---------------
BADGES & ACCESS LOGS:

---------------
SURVEILLANCE:
-----
CCTV
RFID
guards
-----

=========================
APPLICATION SECURITY:

---------------
AVATAR:
-----
protect app, website, online services
that we develop, use.
develop - test - deploy security
-----
website, app, service
-----

---------------
APPLICATION DEVELOPMENT:
-----
developing and testing phase:
in [development environment]
low security, less restrictive to test
-----
QA- [quality assurance] = find defects in software
fix defects at this phase = easy
-----
[staging, production phase]:
staging environment should match production environment
test the staging environment
-----
provisioning, deprovisioning:
create or update software
remove software
automate with self service portal?
-----

---------------
SECURITY CODING TECHNIQUES:
-----
~ -=-
- normalization
- stored procedure
- obfuscation, camouflage
- code reuse
- SDK = fast, insecure
-----

---------------
INPUT VALIDATIONS:
-----
control data input
maintain integrity
attackers insert malformed data
confuse, crash application
flood web app with invalid subscribers?
-----

---------------
VALIDATOIN RULES:
-----
check data if within parameters:
- size *
- format *
- consistency
- range
- [check digit]
-----
digit calculation:
multiply with numbers
save the total
check digit
-----

---------------
INTEGRITY CHECKS:
-----
~ -=-
- data
- binary and sum
- checksum
- transmit
- checksum
- compare
- match = pass
-----
- hash function
- snapshot of data
~ [checksum, a hash function]
-----
checksum process:
-----
> how a checksum works:
- [integrity check]
- before, after file transfer
- info -> value, [sum] the total
- receiver repeat process
- sums equal = ok or else,
changes occurred in transit.
-----
> hash functions
- MD5
- SHA1, SHA256, SHA512
complex mathematical algorithms
- compare hash values
hash calculator
- version control
- backups
- authorization (access control)
-----
~ -=-
checksum:
make data binary and sum
compare
hash:
use algorithm to make a hash
-----

---------------
OTHER BEST PRACTICES:
-----
- integrity checks
- secure cookies
- validation rules
- code signing
-----

---------------
MANAGE THREATS:
-----
- unauthorized access to data centres,
computer rooms, wiring closets
server and system downtime
-----
- network and OS vulnerability
update, patch
-----
- unauthorized access to systems:
~ [MFA, log files]
-----
- data loss:
data classification
implement [backup] procedures
-----
- software dev vulnerabilities:
software testing
-----

---------------
INVESTIGATE OWASP - LAB
-----
Part 1: OWASP Top 10
Part 2: OWASP Community Pages
-----

=========================
NETWORK HARDENING: SERVICES AND PROTOCOLS:

---------------
NETWORK ROUTING & SERVICES:
-----
- DHCP
- DNS
- ICMP
- RIP
- NTP
-----
attack or use target
as part of an attack
-----
detect open ports on device with port scanner
messages each port, waits for response
-----
close unwanted ones
~ [scan it before attacker scans]
-----
DHCP security checklist:
- physical security
- patches
~ [behind firewall]
- log analysis
- antivirus
- uninstall unused services
- close unused ports
-----
DNS security checklist:
- updated software
~ [prevent version string from revealing info]
~ [separate internal, external DNS server]
- Restrict allowed transactions by client IP address
- transaction signatures to authenticate transaction
~ [disable zone transfers]
- dynamic updates
- log, analyse them
-----
~ [DNSSEC] - DNS security extensions
- sign zones
-----
ICMP for error messages
ping command use ICMP to test reachability
~ [ICMP for reconnaissance, DOS]
- covert channel attacks
- filter ICMP requests to prevent them
-----
routing information protocol - [RIP]:
- limit hops
- max = 15
- exchange routing info
~ [calculates best route based on hop count]
- target RIP, router
- reduce performance, availability
- traffic redirection
-----
> secure services with:
- authentication
- system patching
- updates
-----
network time protocol - [NTP]:
synchronize network computer system clocks
for correct interpretation of events
in [syslog data files], [digital certs]
-----
- attack time servers, disrupt secure communication
that depends on digital signatures
~ [hide attack information]
- NTP authentication to verify
-----

---------------
TELNET, SSH, SCP:
-----
- SSH - TCP port 22
- telnet - port 23
- SCP - securely transfers files between two remote systems
-----
SCP uses SSH for:
- data transfer
- [authentication]
- confidentiality
of data in transmit
-----
Wireshark capture
see what is encrypted,
what is not and how.
-----

---------------
SECURE PROTOCOLS:
-----
- SNMP
- HTTP
- FTP
- POP, IMAP, [MIME]
-----
penetrate network infra via
~ [services, protocols, open ports]
- use latest ones
-----
SNMP = statistics of
TCP/IP devices
monitor network
equipment.
~ [SNMPv3] = current standard
cryptography to prevent eavesdropping, check integrity
-----
HTTP - web connectivity - port 80
SSL handshake - encrypt - confidentiality
TLS replacement for SSL
so TLS handshake too
SSL/TLS - HTTPS over HTTP
-----
FTP - transfer files
~ [plaintext username and password to connect]
FTPS - more secure
- supports TLS/SSL to FTP
-----
POP, IMAP, [MIME]:
email uses these to attach no-text data
~ [MIME] = multipurpose internet mail extension
- POP - port 110
- IMAP - port 143
SSL/TLS to secure them
S/MIME protocol
secure transmission
digitally signed, encrypted message
provides: authentication, integrity, non-repudiation
-----

=========================
NETWORK HARDENING: SEGMENTATION:

divide network into smaller parts
improve performance, security

---------------
VLANs:
-----
VLAN to [segment] network
secure area for sensitive data
-----
devices grouped within LAN, [on individual switches]
- LAN = physical connections
- VLAN = logical connections
-----
- each port on switch assigned to a VLAN
- others to physically interconnect switches
- allow multiple VLAN traffic between switches
- these ports = ~ [TRUNKS]
-----
network is segmented:
based on [function, team].
VLAN devices act like in own network
share infra with other VLANs on same LAN
decreases breach chance
limit broadcast traffic in switched network
-----
protect VLAN:
- monitor performance
- advanced configurations
- patches, updates
-----

---------------
DEMILITARIZED ZONE - DMZ:
-----
small network between private network, Internet
~ [LAN - DMZ - Internet]
-----
- access to untrusted networks
- web, mail [servers] placed within DMZ
- allows users to access untrusted network
without compromising internal network
-----
~ -=-
2 to 4 zones of risks:
- intranet
- extranet
- [DMZ]
- internet
risk increases one by one
-----
~ [zero trust model]:
- firewall manage [east west traffic]:
traffic between servers within organization
north-south traffic:
into and out of the organization’s network
constantly [monitor all] users
no matter their status or role.
-----
NETWORK DEFENCE SEGMENTED
VLAN = limit broadcasts.
-----

---------------
VLAN:
-----
~ -=-
manage threats to LAN:
- unauthorized access -> ~ [access control policies]
- unauthorized LAN access -> wire closets, room security
- Exploits of data in transit -> ~ [encrypt]
- network OS software vulnerabilities -> [patch, update policy]
- Unauthorized access by rogue users -> [require passphrase]
Unauthorized network probing and port scanning ->
Conduct [post-configuration pentests].
-----

=========================
HARDENING WIRELESS, MOBILE DEVICES:

security protocols
device protections
stay ahead

---------------
WIRELESS DEVICE SECURITY:
-----
- WPA configuration
- WPA features
- WPA2
- WPA3
- WPS
-----
~ [WEP] - wired equivalent privacy
first protocol, [64, 128] bit key
-----
~ [WPA] - wi-fi protected access
PSK common configuration, [256] bit key
- WPA-PSK = pre-shared key (personal)
-----
WPA
message integrity checks
- temporal key integrity protocol ~ [TKIP]
which [manages encryption keys]
- advanced encryption standard ~ [AES superseded TKIP]
[better key management, encryption]
-----
WPA2 =
mandatory [AES]
TKIP replaced with,
- counter cipher mode with block chaining
- message authentication code protocol - CCMP
-----
WPA3 =
more features with WPA2
strong cryptographic algorithms
~ [improve key exchange]
-----
WPS =
wi-fi protected setup
set up secure wireless home network
PIN code to connect to wireless network
brute-force PIN vulnerability
WPS no longer secure, disable it
-----
~ [PSK, TKIP, AES key management algorithms]
used in WPA protocols...
-----

---------------
CONFIGURE WIRELESS ROUTER HARDENING, SECURITY - LAB
-----
1: Configure Basic Security Settings for w Router
2: Configure Wireless Router Network Security
3: Configure Wireless Clients Network Security
4: Verify Connectivity and Security Settings
-----

---------------
AUTHENTICATION:
-----
wireless:
- mobility, convenience, vulnerable
- theft, hacking, unauthorized remote access,
- sniffing, MiTM, performance, availability
-----
use:
- authentication
- encryption
-----
wireless standard 801.11
has 2 types of authentication:
- open system authentication
- shared key authentication
-----

---------------
AUTHENTICATION PROTOCOLS:
-----
~ [EAP] - extensible authentication protocol
authentication framework for [wireless] network
-----
[EAP -> AUTHENTICATE WIRELESS]
-----
user - WAP - [authentication server]
username + password
verify, pass info, connect
-----
~ -=-
4 protocols used [with EAP] to provide
authentication for wireless networks:
- EAP-TLS: client, server cert. [secure]
- PEAP: server cert, [medium]
- EAP-TTLS: server cert, [medium]
- EAP-FAST: no cert, easy, [medium]
-----
EAP-TLS >>
P, TTLS, FAST = medium
-----
~ [WPA2 + EAP authentication = FIRE]
- unique username/password for each user
-----
if a user leaves organization, delete credentials
from authentication system.
-----

---------------
MUTUAL AUTHENTICATION:
-----
rogue access point
imitate authorized AP, steal users information
-----
prevention:
MiTM difficult to detect, results
stolen login credentials, data...
-----
~ -=-
- mutual authentication = 2 way authentication
- prevents RAP
- both authenticate each other
- can detect RAP, prevent attacks
-----
mutual auth > RAP
-----

**********
~ -=-
phone - cellular comm - [service provider] - IP-based 5G LTE networks - internet
**********

---------------
COMMUNICATION METHODS:
-----
- wi-fi, Bluetooth wireless signals
- NFC - chips - EMF
- infrared with IR receiver - TV
USB communication - wired - mobile device
-----

--------------
MOBILE DEVICE MANAGEMENT:
-----
mobile device by org can have
- personal, org data.
corporate owned personally enabled - ~ [COPE]
also [BYOD] option.
- need security policy.
-----
~ -=-
manage mobile devices:
- storage segmentation, containerization:
isolate, control particular data from others
- content management:
app that share data. use identity management security system.
- application management:
digitally sign apps. install from trusted source.
-----

---------------
MOBILE DEVICE PROTECTIONS:
-----
threats = theft, loss, access, OS risks
app risks, network risks.
-----
ways to bypass limitations:
~ [jailbreak] apple devices to install apps
~ [root] android devices
- run an unauthorized app
- solutions to detect them available
- device marked noncompliant, removed from network
-----
- [sideloading] to install unapproved apps
-----
~ -=-
safeguards:
- screen locks
- biometric authentication
- context-aware authentication
- remote wiping
- full device encryption
- GPS even when switched off?
explore...
-----

---------------
GPS TRACKING:
-----
satellite, computer to determine [location] of device
- standard feature on smartphones
to track phone's location
-----
instead GPS,
[geofencing, geolocation] which uses [RFID]
to determine geographic area.
-----
organizations ‘push’ ad messages based on
user’s location settings.
cyber attackers using push notifications
to capture data.
-----

---------------
BYOD:
implement BYOD policy for mobile devices
-----
strong password to access network
to prevent unauthorized access.
automatically install and use approved apps.
devices not on list are not allowed to connect.
access limited based on profile defined by IT.
remote wiping option if device is lost.
-----

=========================
CYBERSECURITY RESILIENCE:

maximize [availability] of systems
downtime = huge impact on revenue

---------------
HIGH AVAILABILITY:
-----
avoid downtime
it is imperative
-----
eliminate single point of failure:
replace or remove hot standby device
[redundant] components
multiple connections or pathways.
-----
reliable crossover:
- redundant power supplies
- backup power systems
- communication system
-----
detect failure as they occur:
- active monitoring
-----

---------------
THE FIVE NINES:
-----
~ -=-
a high availability goal
achieve an availability rate of 99.999%
five nines in a row
downtime is less than 5.26 minutes a year.
-----
~ [5 min 99.999% -> 59s]
-----
- standardized systems
- guards
- clustering
- shared component systems
-----
~ [security and management]
-----

---------------
SINGLE POINT OF FAILURE:
-----
- weak links in chain
can cause disruption
complete failure of entire system
hardware/ process/ data/ utility
should not rely on single element
- build redundant components
-----
find SPF, place [resilience] measures
redundant components
-----

---------------
N+1 REDUNDANCY:
-----
helps in system availability
for N components, need at least 1 backup component
~ [car having a spare wheel]
-----
system design can withstand loss of 1 of each component
-----

---------------
RAID LEVELS COMPARISON:
-----
RAID = data from single disk spread among several disk
except for RAID 0
-----
~ -=-
- increases data recovery speed
- hardware or software based
- managed by utility software in OS
- mirroring, striping, parity.
-----
0 = no redundancy
1 = disk mirroring
2 = error-correcting coding
3 = byte-level data striping with dedicated parity
4 = block-level data striping with dedicated parity
5 = combo of data striping, parity.
-----

---------------
SPANNING TREE:
-----
redundancy increases availability
protects from single point of failure
-----
loops, duplicate frames occur
bad for switched network
-----
STP - spanning tree protocol solves it
[prevents loops]
-----
intentionally blocks redundant paths
STP recalculates when a system fails
unblocks a new path if necessary
-----

---------------
ROUTER REDUNDANCY:
-----
one router serving as default gateway,
single point of failure
additional standby router
-----
- ISP
- forwarding router | virtual router | standby router
- LAN
- PC
-----
~ -=-
[redundancy protocol] determines
which router takes active role
which takes the standby
-----
active passive standby primary secondary...
-----
periodic messages to make sure both online
if standby stops receiving from forwarding,
it takes role as forwarding router (the dead hand)
-----
virtual router now forwards to what was
previously the standby router.
-----
first hop redundancy:
[dynamically recover] from the failure
of device acting as a default gateway
-----

---------------
LOCATION REDUNDANCY:
-----
- synchronous replication
- asynchronous replication
- point in time replication
-----

---------------
RESILIENT DESIGN:
-----
methods to make system tolerant to failure
redundant links between, STP in switch
= network resilience
-----
non-default settings in test network to see
if they can improve network recovery times
-----
critical to understand the business needs
-----
~ -=-
application resilience:
- fault tolerance
- cluster architecture
- backup and restore
-----
~ -=-
IOS resilience:
resilient configuration feature
- secure boot-image
- secure boot-config
-----
[image and config]
-----

---------------
SYSTEM & DATA BACKUP:
-----
- loose data if stolen/ system fails/ disaster/ error
- back up data regularly
- copy of info to backup media
- removable media, store in safe place
- security policy should include this
-----
frequency
storage
security
validation
-----

---------------
DESIGN HIGH AVAILABILITY SYSTEM:
-----
~ -=-
- eliminate SOP
- fault tolerance = work despite failure
- system resiliency = work despite events
-----

---------------
POWER:
-----
~ -=-
electrical power systems, considerations
- continuous supply is necessary
separate power supply from the rest
- redundant power sources
power conditioning
- UPS - [uninterruptible power supply]
-----
power excess:
[spike, surge]
-----
power loss:
[fault, blackout]
-----
power degradation:
[sag/dip, brownout, inrush current]
-----

---------------
HEATING, VENTILATION, AC - HVAC:
-----
control temperature, humidity, airflow
hardware, cabling, storage, fire protection...
-----
all systems come with environmental requirements
refer to requirements, implement solutions
-----

---------------
THREAT MANAGEMENT:
-----
- CCTV
- asset tagging
- policies, procedures
- security testing
- business continuity planning
- badge encryption for entry
- security awareness training
- disaster recovery plan
-----

=========================
EMBEDDED AND SPECIALIZED SYSTEMS:

---------------
THREAT TO KEY INDUSTRY SECTORS:
-----
[Stuxnet] proved malware can affect infrastructure
targeted [SCADA] systems
- industrial control systems
~ [segregate these from LAN]
-----

---------------
IOT EMERGENCE:
-----
enables devices connect to internet
cars, robots, locks, motors...
-----
increases attack surface
need to manage and secure them
-----
Big Data
DDOS possible on these?
need for IoT security
change administrator credentials
-----

---------------
EMBEDDED SYSTEMS:
-----
used in TV, HVAC, medical devices, automobiles
susceptible to timing attacks
~ [side channel attack]
-----
secure with:
- system on chip technology ~ [SoC]
- small form factor - SFF hardware module
Raspberry Pi, Arduino...
-----
single-board computers
implement with
~ [Field-Programmable Gate Array] (FGPA)
user can make changes after deploying the device.
poor authentication, can't patch or upgrade...
-----

---------------
IoT:
-----
intelligent devices and sensors
automate processes
monitor environmental conditions and alert
cameras, door locks, proximity sensors, lights...
-----
collect information about an environment
or the status of a device
-----
IoT uses RTOS = small OS
with RTOS comes:
~ [code injection]
~ [DoS]
~ [priority inversion]:
higher-priority task is indirectly pre-empted by a lower-priority task
-----
~ [Shodan IoT scanner]
- a search engine for internet connected devices
-----
~ [Zigbee] = [wireless protocols] set for WPANs
-----
secure with:
secure the network
security software on devices if possible
secure smartphones to communicate with these
-----

---------------
VOIP EQUIPMENT:
-----
uses internet to make, receive phone calls
private network provides strong security, quality
reliable as the underlying network security
-----
encrypt, SSH, passphrase, IDS, firewall
authentication to mitigate registration spoofing
-----

---------------
SPECIAL PURPOSE EMBEDDED SYSTEMS:
-----
medical, automotive and aviation sectors
-----
pacemakers, insulin pumps
medical implants, defibrillators
capable of:
wireless connectivity, remote monitoring and NFC
-----
[diagnostic interface on board]
- record speed, location and braking manoeuvres,
- encryption for communication between controllers
firewall?
-----
- flight control system
- communication system
credentials, protocols, backdoors
-----
~ -=-
UAV: hijacking, Wi-Fi attacks, GPS spoofing attacks,
jamming and de-authentication attacks
-----

---------------
DECEPTION TECHNOLOGIES:
-----
- honeypots = decoy system (left exposed to lure attackers)
~ [DNS sinkholes] = prevent hostname resolution for a URL
push users away from malicious resources.
-----

---------------
IMPLEMENT PHYSICAL SECURITY WITH IOT DEVICES - LAB:
-----
Connect IoT devices to the network.
Add IoT devices to the registration server.
Explore IoT security device functionality.
-----

===============================================
M3: ACCESS CONTROL:

---------------
- restrict access to users within network
- comes after authentication (AAA)
- also known as ~ [authorization]
---------------
authenticate to lab
access control within lab
accountable to actions
---------------

=========================
ACCESS CONTROLS:

---------------
PHYSICAL ACCESS CONTROLS:
-----
- [barriers] to prevent contact
- determine who, where, when can enter
-----
~ -=-
guards, fences, motion detectors, laptop locks,
locked doors, swipe cards, guard dogs,
video cameras, mantrap style entry systems,
alarms
-----

---------------
LOGICAL ACCESS CONTROLS:
-----
manage access to resources and systems
tools and protocols
-----
- identification
- authentication
- authorization
- accountability
~ [IAAA]
-----
encryption, embedded microchip in smart cards,
passwords, biometrics, ACL, protocols,
firewalls, routers, IDS, clipping levels
-----

---------------
ADMINISTRATIVE ACCESS CONTROLS:
-----
organization's policies to enforce control
-----
- policies
- procedures
- hiring practices
- background checks
- data classification
- security training
- reviews
-----

---------------
ADMINISTRATIVE ACCESS CONTROLS IN DETAIL:
-----
- it involves AAA
- primary [framework] to control access
-----
~ [authentication] - verify identity - username/ID
- something they (know, have, are)
- MFA >>>
-----
~ [authorization] - what you can access
- accomplished with [ACL]
- access privileges once user authenticates
- authorization = access control
-----
~ [accounting] - not financial accounting
- keep track of what users do
- what, how much time, changes made
- bank tracks customer account = example
-----
AAA concept is like credit card:
- who can use it
- how much they can spend
- accounts for services purchased
-----
- track and monitor in real time = cyber security
-----

---------------
IDENTIFICATION:
-----
enforce rules by authorization policy
whenever access to resource requested
-----
- access controls decide to [grant/ deny] (ACL)
- username = common method to identify user
-----
- username
- personal ID number - PIN
- smart card
- biometrics
-----
unique identifier
-----

---------------
FEDERATED IDENTITY MANAGEMENT:
-----
enterprises let users to use same ID to gain access
increases effects of an attack
-----
links a subject’s electronic identity across separate
~ [identity management systems]
-----
access several websites using the same social login 
credentials.
single sign-on to the web ( from user's POV)
-----

---------------
AUTHENTICATION METHODS:
-----
user prove identity with username/ ID
need to verify identity with any:
- what you know - PIN, passphrase
- what you are - biometrics
- what you have - smart cards
-----
2FA secure than username, password combination
-----

---------------
MULTI FACTOR AUTHENTICATION:
-----
at least two methods of verification
why MFA is better...
-----

---------------
AUTHORIZATION:
-----
- [controls] what a user can and cannot do
after successful authentication
-----
uses set of [attributes] to describe user's access to network
-----
What read, copy, edit, create and delete privileges
does this user have?
-----
~ [authorization is automatic]
-----
- authorization policy establishes rules
-----
- group membership policy:
authorization based on user's membership in a
specific group.
-----
all employees can have swipe card
it may provide access to premises
not all get access to server room
access permissions based on an employee’s position
-----

---------------
CONFIGURE ACCESS CONTROL - LAB + VIDEO:
-----
1: Configure and Use AAA Authentication Credentials
2: Configure and Use Email Services
3: Configure and Use FTP Services
-----

---------------
IMPLEMENTING ACCOUNTABILITY:
-----
third administrative access control,
which is accountability.
-----
- access control:
physical, logical, administrative
administrative has AAA
-----
traces an action back to person or process
reports the usage data
auditing or billing
log-in time for users
resources the user accessed
-----
implementation:
- log files
- login failures
-----
data retention
media disposal
compliance requirements
provides accountability
-----

---------------
CONFIGURE AUTHENTICATION AND AUTHORIZATION IN LINUX - LAB + VIDEO:
-----
~ -=-
add a new group for users
add users to new group
switch users, modify permissions
modify permissions in absolute mode
-----

=========================
ACCESS CONTROL CONCEPTS:

---------------
ZERO TRUST SECURITY:
-----
- secure all access across
networks, apps, environments.
-----
secure access from users, end-user devices,
APIs, IoT, microservices, containers...
~ [never trust, always verify]
-----
network perimeter or edge boundary
between inside and outside.
-----
~ -=-
Zero trust approach = any place at
which an access control decision is
required is considered a perimeter.
[access control - perimeter]
-----
though user may have passed access
control previously, can't access
another area until authenticated.
-----
~ -=-
pillars of zero trust:
- workforce - employee, contractors, partners, vendors
- workloads - secure access when API access DB within app
- workplace - IoT, HVAC, infusion pumps, servers...
-----

---------------
ACCESS CONTROL MODELS:
-----
~ -=-
- discretionary
- mandatory
- role based
- rule based
- attribute based
- time based
extras...
-----
Discretionary access control - DAC:
- discretion = decided by person, not rule
- least restrictive [LOW]
- control access to data as owners
- may use ACL or other methods to specify who can access
-----
Mandatory access control - MAC:
- strictest access control [HIGH]
- military or mission critical applications
- security level labels to information
- enables users to access based on security level clearance
-----
role based access control - RBAC:
- access decision based on individual's role
in organization
- different security privileges
- RBAC [profile] for the role
different positions, job classifications or groups of it
- non-discretionary access control
-----
attribute based access control - ABAC:
- based on attributes of object to access
user accessing resource
- environmental factors how object accessed
[like time of day]
-----
rule based access control - RBAC:
set of rules or [conditions] to access data or systems
permitted or denied IP address, protocols...
rule based RBAC
-----
time based access control - TAC:
based on time and day
-----
another,
- principle of least privilege
minimum access required to work.
- privilege escalation = exploit
-----

---------------
NETWORK ACCESS CONTROL SYSTEMS - NAC:
-----
enforcing organizational policies to
people and devices attempting to
access the network
-----
~ -=-
- enforcing access policies
- profiling connected users
- secure access to network guests
- compliance with security policies
- mitigating security incidents
by blocking or repairing...
-----
NAC = useful for BYOD, IoT attack surface
important in zero-trust [security architecture]
-----

=========================
ACCESS MANAGEMENT:

---------------
ACCOUNT TYPES:
-----
use admin account to administer only.
if infected with malware during work
means game over.
-----
default group and user accounts that might be
installed by an operating system
~ [know your environment, disable unwanted ones]
-----
- always replace default accounts
- make sure they require password
-----
~ -=-
- hire new employee
- create id profile
- register employee's computer, mobile devices
- enable access to organization's network
- authenticate identity
- disable unwanted accounts
- give least privilege
- review user access
- time of day restrictions
- location restrictions
- geofencing, geolocation, geotagging
-----

---------------
PRIVILEGED ACCOUNTS:
-----
- main target
- unrestricted access to systems
-----
practices:
- reduce privileged accounts count
- principle of least privilege
- eliminate shared accounts
- secure password storage
- revoke access rights when employee leaves
- log activity
- generate alerts
- disable inactive accounts
- MFA for administrative access
- gateway between end user and sensitive assets
-----

---------------
FILE ACCESS CONTROLS:
-----
- permissions to secure data
- rules to limit access or user or group
-----
- full control
- modify
- read and execute
- write
- read
-----
- admin action overrides any
permission settings
-----
- data movement will inherit
permissions accordingly
-----

---------------
ACCOUNT POLICIES IN WINDOWS:
-----
- admin configures ~ [Active Directory]
with [domains] on a Windows server.
-----
domain security policy for all domain members.
-----
not part of active directory domain,
configure policies through [local security policy]
~ [secpol.msc]
at run command to open it.
-----
- production environment
- 100's of office computers in lab
- users come, go. their work should be safe
- use active directory
- use your account with your credentials
in any PC in the office
-----
configure:
- password policy
- account lockout policy
- audit policies
-----

---------------
AUTHENTICATION MANAGEMENT:
-----
- ensure secure sign in with ease of use
-----
- single sign on
~ [OAuth] - a standard. services use your info
- password vault
~ [knowledge-based authentication] - KBA
-----

---------------
HASH BASED MESSAGE AUTHENTICATION CODE - HMAC:
-----
- encryption key with hash function
to authenticate a web user
-----
basic authentication doesn't
encrypt used ID, password.
-----
user sends [private key identifier]
HMAC server looks up user's private key
and creates HMAC
compare the HMAC values...
-----
~ -=-
VPN -> IPsec -> HMAC functions
data integrity verification
-----

---------------
AUTHENTICATION PROTOCOLS AND TECHNOLOGIES:
-----
~ [authenticates data between two entities]
secure protocols:
-----
~ -=-
- extensible authentication protocol - EAP
~ [password authentication protocol] - PAP
~ [challenge handshake authentication protocol] - CHAP
~ [802.1x]
- RADIUS server
- TACACS+
~ [Kerberos] - Tickets
-----

---------------
APPLICATIONS OF CRYPTOGRAPHIC HASH FUNCTIONS:
-----
why use cryptographic hash functions
- use SHA 256 or higher
-----
- SHA1, MD5 = discovered security flaws in them
plain text + hash function = hash value
-----
can detect, can't guard changes
vulnerable to MiTM attacks
-----

---------------
ACCESS CONTROL STRATEGIES:
-----
grant or restrict access to resource
-----
mandatory
discretionary
role-based
rule-based
(access control)
-----

=========================
AAA USAGE AND OPERATION:

---------------
AAA OPERATION:
-----
design network so that you can control
who is allowed, what they can do.
-----
[design requirements] identified in 
[network security policy]
-----
specify how:
- network admins
- corporate users
- remote users
- business partners
- client
access network resources
-----
- accounting system
track who when what
- log it!
-----
[AAA] protocol provides necessary FRAMEWORK
to enable scalable access security
-----
- 3 independent security functions
by AAA architectural framework
-----
like credit card:
- who are you = authentication
- how much can you spend = authorization
- what did you spend it on = accounting
-----

---------------
AAA AUTHENTICATION:
-----
authenticate users for:
- administrative access
- remote network access
-----
cisco = 2 methods of implementing AAA services:
- local AAA authentication
- server based AAA authentication
-----
- centralized AAA = more scalable, manageable
- preferred AAA implementation
- may independently maintain databases for A,A,A
-----
~ [leverage Active Directory or LDAP]
for user authentication, group membership
- while it maintains [own] authorization,
accounting databases
-----
~ -=-
communicate with [central AAA server] with:
- Remote authentication dial-in user service - RADIUS
or
Terminal access controller access control system - TACACS+
protocols
-----
[user -> RADIUS/TACACS -> Central AAA server]
- TACACS = terminal ACAC system
-----
~ [learn their differences]...
> TACACS+:
- separates all AAA = modular
- cisco supported
- TCP 49
- encrypts all
- limited
-----
> RADIUS:
- combines except for accounting = less flexible
- open/ RFC standard
- UDP 1812, 1813 or 1645, 1646
- encrypts password
- extensive
-----
CHAP protocol?
-----

---------------
AAA ACCOUNTING LOGS:
-----
- accounting records -> centralized repositories
- simplifies [auditing] of user actions
- collect, report usage data in AAA logs
-----
data may include:
start & stop time, commands executed,
number of packets, number of bytes.
~ [time, command, packet, bytes]
-----
log contains numerous data fields
useful to [troubleshoot] devices
[evidence] against bad ones
-----
- user authenticated -> AAA accounting process -> start
- finishes -> stop message recorded
-----
~ -=-
various types of accounting information to collect:
- network accounting - PPP session, packet, byte counts
- connection accounting - outbound info by client ex SSH
- EXEC accounting - user shell info - name, date, server IP
- system accounting - system level events - reboot...
- command accounting - info of EXEC shell commands
- resource accounting
-----
AUTHENTICATION:
- control who is permitted to network.
- prove that they are who they say they are.
- Established with username + password.
- questions, token cards...
-----
AUTHORIZATION:
- created set of [attributes]
- user’s access to the network.
- What a user can, can't do.
-----
ACCOUNTING:
- Records what user does,
amount of time resource accessed,
and changes that were made.
Collect, report for auditing or billing.
leverage against malicious people.
-----

---------------
CONFIGURE SERVER BASED AUTH WITH TACACS+, RADIUS - LAB:
-----
Configure server-based AAA authentication using TACACS+.
Verify server-based AAA authentication from the PC-B client.
Configure server-based AAA authentication using RADIUS.
Verify server-based AAA authentication from the PC-C client.

===============================================
M4: ACCESS CONTROL LISTS:

===============================================
M5: FIREWALL TECHNOLOGIES:

=========================
WHY FIREWALL TECHNOLOGIES:

---------------
- design network with protection
- network security infrastructure
-----
- many ways to build a secure network infra
- standard designs recommended by industries
-----
firewalls to create network security architecture
-----

---------------
firewall to secure:
- network infrastructure
- network architecture
-----

=========================
SECURE NETWORKS WITH FIREWALLS:

---------------
FIREWALLS:
-----
system or group of system enforce
~ [access control policy] between networks.
-----
allow/deny traffic or packet
-----
example:
-----
> allow:
- external address to web server
- traffic to FTP, SMTP, internal IMAP server
-----
> deny inbound traffic:
- address matching internal registered IP to server from external addresses
~ [ICMP echo request]
~ [MS active directory queries to MS SQL server queries]
~ [MS Domain local broadcasts]
-----
common firewall properties:
~ -=-
- resistant to network attacks
- only transit point for packets
- enforce access control policy
-----
firewall benefits:
- prevent sensitive resource exposure to untrusted users
- sanitizes protocol flow, prevents protocol flaw exploits
- block malicious data from servers and clients
- reduce security management complexity
-----
firewall limitations:
- misconfigured firewall = risky
- data from Many apps can't pass over firewalls securely
- ways around firewall to receive blocked material?
- slows network performance
- tunnel or hide unauthorized traffic in legit traffic
-----

---------------
TYPES OF FIREWALLS: (firewall types)
-----
each with specific capabilities
use the right one for situation
-----
- stateless
- stateful
- proxy/application gateway
- NG
-----
- host
- transparent
- hybrid
-----
> stateless [packet filtering] firewall:
- usually part of router firewall
- based on [L 3, 4] info
- uses simple [policy table] look-up that filters traffic
~ [IP S + D, protocol, port number S + D]
- synchronize/start [SYN]
-----
> stateful firewall:
- most versatile and common
~ [stateful packet filtering]
- with connection info in [state table]
- firewall architecture classified at network layer
- analyses traffic at OSI [L 4, 5]
-----
> application gateway/proxy firewall:
- filters information at [L 3, 4, 5, 7] of OSI model
- firewall control, filtering done in [software]
- client use [proxy server] to connect to [remote server]
- proxy server in behalf of client
- server connection from proxy server
-----
> next generation firewall:
- goes beyond stateful firewall with
~ [integrated IPS]
- application awareness
- control to see, block risky apps
- Upgrade paths to include future information feeds
addresses evolving security threats
-----
other method to implement firewall:
-----
- host based firewall:
PC or server with firewall software
-----
- transparent firewall:
filter IP traffic between pair of bridged interface
-----
- hybrid firewall:
combo of various firewall types
ex: [application inspection firewall]
combines stateful firewall with an app gateway firewall
-----

---------------
PACKET FILTERING FIREWALL BENEFITS, LIMITATIONS:
-----
- packet filtering = part of a router firewall
- permitting or denying traffic
- based on Layer 3, 4 information
- stateless firewalls
~ [simple policy table look up]
- filters traffic based on specific criteria
-----
SMTP servers listen to port 25 by default
admin configure it to block 25 from specific workstation
to prevent it from broadcasting an email virus.
-----
advantages of using packet filtering firewall:
- simple permit or deny rule sets
- low impact on network performance
- easy to implement, supported by most routers
- initial degree of security at network layer
- cheaper, does the job
-----
- packet filters = not complete firewall solution
but important element in firewall security policy
-----
disadvantages of using a stateless firewall:
~ [IP spoofing]
- arbitrary packets that ACL criteria
- unreliable filtering of fragmented packets
~ [uses complex ACLs, difficult to maintain]
- cannot dynamically filter certain services
~ [difficult to defend against dynamic port negotiation]
- stateless: examine each packet individually
not in context of connection [state].
-----

---------------
STATEFUL FIREWALL BENEFITS, LIMITATIONS:
-----
- primary means of defence
~ [strong packet filtering]
- improved performance
- defend against [DoS, spoofing]
- richer data logs
-----
~ [no application layer inspection]
~ [limited tracking of stateless protocols]
~ [difficult to defend against dynamic port negotiation]
~ [no authentication support]
-----

=========================
FIREWALLS IN NETWORK DESIGN:

---------------
COMMON SECURITY ARCHITECTURES:
-----
firewall =
device [interfaces]
permitting or denying traffic
based on source, destination
and type of [traffic]
-----
common firewall designs:
-----
~ -=-
- private and public
- DMZ
- ZPF
-----
> [private and public]:
- public network = outside = untrusted
- private network = inside = trusted
- firewall with 2 interfaces is configured
- traffic from in to out permitted, inspected
-----
returning from out to in with associated traffic
- originated from in is permitted
- out to in is generally blocked.
-----
> [demilitarized zone]:
a firewall design with
- 1 inside interface connected to private network
- 1 outside interface connected to public network
- 1 DMZ interface
-----
- private -> public/DNS = inspected
- little or no restriction
- return from DMZ/public to private is permitted
- DMZ -> private blocked
- DMZ -> public selectively permitted, inspected
- typically DNS, HTTP, HTTPS traffic
- return from DMZ to public dynamically permitted
- public -> private blocked
-----
> [zone based policy firewall]:
- zones concept = additional flexibility
- zone = ~ [group of interfaces] with similar functions
-----
~ -=-
helps to specify where CIOS firewall
rule or policy should be applied
-----
group LANs with [similar security policies]
-----
traffic between interfaces in same zone
is not subject to any policy, passes freely.
-----
all zone-to-zone traffic is blocked
-----
to permit traffic between zones,
configure a policy to allow or inspect traffic.
-----
one exception for default deny any policy is
router self zone (router itself, all its interface IP)
policy that includes self zone applies to, from router
no policy for this type of traffic by default
consider these traffic when
-----
designing policy for self zone:
management plane, control plane traffic
(SSH, SNMP, RP - routing protocols).
-----

---------------
LAYERED DEFENCE:
-----
- network core security:
protect from malware, traffic anomalies, enforce network policies
- perimeter security:
secure boundaries between zones
- communications security:
information assurance
- endpoint security:
gives identity, device security
-----
~ -=-
- core
- perimeter
- endpoint
- comm
-----
a layered defence uses different firewall type in layers
depth to security of organization
-----
policies enforced between layers, inside layers
these policies determine if traffic forwarded or discarded
-----
- traffic from untrusted network
- packet filter on edge router
- screened firewall or bastion host system
- applies more rules to traffic
- discard suspicious packs
-----
~ [bastion host]:
- hardened computer located in DMZ
- interior screening router
- internal destination host
- after passing through all policy enforcement points
between outside router and inside network.
~ [this DMZ setup = screened subnet configuration]
-----
layered defence is not all to ensure safety.
-----
~ -=-
network admin should consider more factor when
building in-depth defence.
- firewall don't stop intrusions from hosts within zone
- firewall don't protect against RAP installations
- firewall don't replace backup, recovery mechanisms
(from attack or hardware failure)
- Firewall = no substitute for informed admins, users
-----
partial best practices as starting point
for firewall security policy:
- position firewall at security boundaries
~ [deny all traffic by default]
- permit only needed service
- control physical access to firewall
- monitor firewall logs regularly
- change management for firewall configuration changes
~ [firewall protects from outside technical attacks]
-----

---------------
DEMILITARIZED NETWORK SECURITY DESIGN:
-----
[1 inside interface, 1 outside interface, 1 DMZ]
-----
~ [layered defence = a security design]
uses different firewall types, security measures
combined at different areas of network to add depth
to security of organization.
-----
[internal network except DMZ = trusted]
-----

---------------
SECURITY:
~ -=-
-----
~ [packet filtering susceptible to IP spoofing]
- packet filtering firewall = easy to implement
-----
~ [NGFW > stateful FW = integrated IPS]
[NG is an IPS]
-----
- UDP, ICMP stateless protocol = no connection
info to build state table
-----
~ traffic returning from DMZ to private = OK
~ traffic originating from DMZ to private = not OK
-----
zone = group of interfaces with similar functions
-----

---------------
- FW types
- FW architecture
- layered defence
-----

===============================================
M6: ZONE BASED POLICY FIREWALLS:

=========================
INTRODUCTION:

- evolution beyond classic firewalls
-----
- classic = on router interfaces
- ZPF = assign interfaces to zones
-----
define security policy for [zones]
security relationships between zones
~ [based on zones, not IP networks]
- multiple interface in a zone
-----

=========================
ZPF OVERVIEW:

---------------
BENEFITS OF A ZPF:
-----
> CIOS firewall = 2 config model:
- classic firewall
firewall ~ [policy on interfaces]
- ZPF
assign interfaces to zones
firewall ~ [policy for traffic between zones]
-----
3 zone network:
- public, DMZ, private
-----
structure, ease of use
documentation, communication
security
-----
~ [not dependent on ACL]
- lock unless explicitly allowed
- easy to use, troubleshoot with C3PL
structured method for traffic policies
- scalability
- virtual, physical interfaces into zones
- policies -> unidirectional traffic
between zones
-----
ZPF, classic both concurrently
but can't combine on single interface
-----
an interface can't be
security zone member, IP inspection.
-----

---------------
ZPF DESIGN:
-----
- determine zones
- security borders of network
subjected to policy restrictions
-----
establish [policies between zones]
- define sessions that client can request
TCP, UDP, ICMP sessions
- if not sessions, unidirectional traffic flows
-----
- design physical infrastructure
- zones identified
- documented traffic requirements
- security, availability considerations
-----
identify zone subnets, merge traffic requirements:
- interzone policy?
-----

---------------
EXAMPLE DESIGNS:
-----
LAN - internet:
in - firewall - out
-----
firewall - public servers:
in - firewall - (web server(perimeter), out)
-----
firewall - servers:
in - firewall - web server - firewall - out
-----
redundant firewalls:
in - 2FW parallel - web server - 2FW parallel - out
-----
complex firewall
firewall - (admin, server, in, VPN users, VPN offices) - firewall - out
-----

=========================
ZPF OPERATION:

---------------
ZPF ACTIONS:
-----
- policies identified by
~ [protocol, S, D zone].
-----
~ -=-
- inspect - stateful packet inspection
- drop ~ deny statement in ACL
- pass ~ permit in ACL
-----

---------------
RULES FOR TRANSIT TRAFFIC:
-----
- ingress, egress interfaces
same or different zone...?
-----
see the [rules]
neither same = pass
both same = pass
both + policy = inspect
-----

---------------
RULES FOR TRAFFIC TO SELF ZONE:
-----
for device management
traffic forwarding control
rules different for self zone
rules depend on
router is S/D = permit
exception = S,D a ZP with specific policy
-----

=========================
CONFIGURE A ZPF:

---------------
CONFIGURE A ZPF:
-----
~ -=-
- create zones
- identify traffic with class map
- define action with policy map
- identify zone pair, match to policy map
- assign zones to interfaces
-----
- assign class map to policy map
- assign policy map to zone pair
[after configuring policy]
-----
in zone - G0/0 R1 S0/0/0 - out zone
HTTP ->, HTTP return <-, block others
-----

---------------
1. CREAT ZONES:
-----
interfaces to include
name of zones
necessary traffic, direction
-----
2 interfaces, 2 zones, 1 direction traffic
source traffic from out not allowed
global config command:
-- zone security zone-name
-----
-- zone security PRIVATE
-- exit
-- zone security PUBLIC
-- exit
R1(config)#
R1(config-sec-zone)#
-----

---------------
2. IDENTIFY TRAFFIC:
-----
class-map, traffic to policy
class = identify packets with match conditions
define class -> apply action, identify traffic
that reflects policy -> define class with class maps
-----
class-map command
several types of class-maps
inspect -> define class map
meet a match criteria
(match-any)
or match all criteria
(match-all)
-----
-- class-map type inspect [match-any | match-all]
class-map-name
-----
parameters:
match-any
match-all
class-map-name
-----
class-map sub-configuration mode
Match traffic to
ACL, protocol, another class map
-----
-- match access-group {acl-# | acl-name}
-- match protocol protocol-name
-- match class-map class-map-name
-----
parameters:
> match access-group:
configs match criteria or class-map based
on specific ACL number or name
> match protocol:
configs match criteria for class-map
bae on a protocol
> match class-map:
another class-map to identify traffic
-----
HTTP allowed from in to out
include HTTPS, DNS protocol
-- class-map type inspect match-any HTTP-TRAFFIC
-- match protocol http
-- match protocol https
-- match protocol dns
-----

---------------
3. DEFINE AN ACTION:
-----
policy-map, take action
configure a policy-map
specific functionality
associated with a traffic class
inspect, drop, and pass actions
-- policy-map type inspect policy-map-name
-- class type inspect class-map-name
-- {inspect | drop | pass}
-----
example of policy-map configuration
class HTTP-TRAFFIC
new policy-map PRIV-TO-PUB-POLICY
-- policy-map type inspect PRIV-TO-PUB-POLICY
-- class type inspect HTTP-TRAFFIC
-- inspect
-----
> inspect = state-based traffic control
> drop = default action for all traffic
like implicit deny any at ACL end
class class-default
at last in policy-map config
traffic silently dropped unlike ACL
no ICMP unreachable messages sent
> pass = router forward traffic
one zone to another
does not track connection state
allows traffic in one direction
corresponding policy
allow return traffic pass in opposite direction
but inspect is better
-----

---------------
4. IDENTIFY A ZONE-PAIR, MATCH TO A POLICY:
-----
zone-pair security command
create a zone pair
service-policy type inspect command
attach a policy-map to zone-pair.
-----
-- zone-pair security zone-pair-name source
{source-zone-name | self} destination
{destination-zone-name | self}
-- service-policy type inspect policy-map-name
-----
source source-zone-name
destination destination-zone-name
self
-----
zone-pair configuration
-- zone-pair security PRIV-PUB source PRIVATE
destination PUBLIC
-- service-policy type inspect PRIV-TO-PUB-POLICY
-----

---------------
5. ASSIGN ZONES TO INTERFACES:
-----
apply service-policy associated with zone
no service-policy configured for zone,
traffic dropped
zone-member security command
assign a zone to an interface
-----
-- zone-member security zone-name
-----
GigabitEthernet 0/0 assigned PRIVATE zone
Serial 0/0/0 assigned PUBLIC zone.
-----
-- interface GigabitEthernet 0/0
-- zone-member security PRIVATE
-- interface Serial 0/0/0
-- zone-member security PUBLIC
-----
service-policy is active
HTTP, HTTPS, DNS traffic
sources from PRIVATE, destined to PUBLIC zone
allowed if it is part of sessions
originally initiated by PRIVATE zone hosts.
-----

---------------
VERIFY A ZPF CONFIGURATION:
-----
view running configuration
class-map listed first
policy-map makes use of class-map
class class-default, drop all traffic
other than HTTP-TRAFFIC class
-----
zone configurations follow
policy-map configurations with
zone naming, zone paring
associate service-policy to zone pair
interfaces assigned to zones
-----
at USER mode:
-- show run | begin class-map
verification information
-- show policy-map type inspect zone-pair sessions
-- show class-map type inspect
-----

---------------
CONSIDERATIONS:
-----
- router never filters traffic in same zone
-----
- one interface cant be in multiple zones
- union of security zones?
- new zone, appropriate policy map, zone pairs
-----
- ZPF, classic firewall coexist but
not in same interface
-----
- Remove ip inspect interface config command
before zone-member security command.
-----
Traffic can never flow
without a zone assignment
-----
zone-member configuration command
temporary interruption of service
until other zone member configured
-----
default inter-zone policy is to drop all traffic
unless allow by service-policy
configured for zone-pair
-----
zone-member command does not protect router
zone- pairs configured with predefined self zone.
-----

---------------
ZPF DEMO - VIDEO:

---------------
CONFIGURE A ZPF - LAB:

===============
Firewall theoretically:
types
architectures
design
layered defence
IS ENOUGH
===============

===============================================
M7: CLOUD SECURITY:

=========================
INTRODUCTION:

-----
- storing data in cloud?
- is cloud safe?
- cloud made possible by use of [virtualization]
- unique ways to protect data in cloud
-----

=========================
VIRUALIZATION AND CLOUD COMPUTING:

---------------
virtual machines and cloud storage
a way to save time, money
move apps, storage
from physical devices to digital realm
security risks in virtualization
-----

---------------
VIRTUAL ENVIRONMENT:
-----
- decrease physical machines in IT environment
-----
virtual machines:
~ [hypervisor] = software or hardware
run multiple independent OS on a system
-----
2 methods:
-----
- type 1 hypervisor:
- hardware virtualization
- guest OS runs directly on hardware
~ [DUAL BOOT?]
-----
- type 2 hypervisor:
- hosted virtualization
- app on host machine to create VM
~ [TYPE 2 = STANDARD]
-----
~ [infra - hypervisor - OS - bin/lib - app]
-----
- VM uses OS, need to be patched
- VM share hardware, run with high privileges
- compromise a VM -> compromise host machine.
-----
[containers]:
~ [infra - OS - container engine - bin/lib - app]
- just application and its dependencies
- engine for OS emulation.
- docker - OS level virtualization
-----
- deliver software packages (containers)
- move containers around, apps run
-----
[Kubernetes] = manage containers.
- elevated privileges within container,
- OS can be compromised...
-----
virtual desktop infrastructure:
user desktop env -> remotely stored on server
- virtual desktops
- easy to create, delete, copy, archive, download
configs over network
need availability, storage capability.
-----

---------------
VM DISADVANTAGES:
-----
~ [VM sprawl]
- more resources used than needed
- breaks out, interacts with host OS
-----

---------------
CLOUD BASED TECHNOLOGY:
-----
access
computing, storage, software, servers
through [internet]
-----
cloud models:
~ -=-
collectively = ~ [XaaS] = anything as a service
- SaaS = apps
- PaaS = dev tools
- IaaS = VM?
-----

---------------
CLOUD COMPUTING:
-----
~ -=-
service models deployment:
- private cloud = host on private platform
- public cloud = hosted by cloud service provider 
- hybrid cloud
- community cloud = share cloud
-----

---------------
IOT EXPLOSION:
-----
~ [fog, edge computing]
-----
fog = distribute computing between device, cloud
autonomous vehicles, airlines
data processed within IoT gateway, or fog node
situated within LAN
-----
edge = processed on the device or sensor
without being transferred to a data centre.
-----

---------------
TOP THREATS TO CLOUD COMPUTING:
-----
susceptible to many threats
unique threats for cloud:
compromises a cloud resource ->
use cloud to target others
- host malware on respected cloud providers 
- abuse cloud services. launch DDoS, spam, phish
-----
- data breaches
- cloud mis configs
- poor cloud security [architecture strategy]
- compromised account credentials
- insider threat
- insecure UI or API
limited cloud usage visibility
-----

=========================
DOMAINS OF CLOUD SECURITY:

---------------
RESOURCES TO SECURE CLOUD:
-----
Security Guidance for Critical Areas of Focus
in Cloud Computing v4 document by
~ [Cloud Security Alliance] (CSA)
- best practices
- covers 14 domains of cloud security.
-----
~ -=-
- cloud computing [concepts, architectures]
- governance, enterprise [risk] management
- [legal] issues, contracts, electronic discovery
- compliance and audit management
- [information] governance
- management plan and [business] continuity
- [security] as a service
- [infrastructure] security
- [virtualization] and containers
- [incident response]
- [application] security
- [data] security and encryption
- [identity], entitlement, access management
- related technologies
-----

=========================
CLOUD INFRA SECURITY:

---------------
INFRASTRUCTURE SECURITY:
-----
cloud specific aspects of
infra security
foundation of which virtualized cloud resources
- computing, networking, storage built and deployed
-----
2 layers to infra:
- physical, logical - CPU, memory
- virtual infra managed by user
-----
- traditional infra security measures
are not efficient.
-----
- custom cloud security tools
- secure virtual environments
- bottlenecks when accessing resource
- processor overloading
due to security tools
- evaluate before deployment.
-----
~ [Software-defined networks] (SDN)
- new security controls
- overall gain for network security
~ [SDN firewalls] (security groups in cloud computing)
- a firewall type?
-----

---------------
CLOUD SECURITY RESPONSIBILITIES:
-----
- cloud computing
- cloud clients
- cloud service providers - CSPs
- cloud security in [shared responsibility model]
-----
- CSP responsible for cloud services
- client responsible for the rest
- sharing responsibilities varies
-----
responsibilities:
~ -=-
- data
- endpoints
- id management
- app
- network control
- OS
- infra.
-----

---------------
OTHER CLOUD INFRA SECURITY CONSIDERATIONS:
-----
company security policies:
- un-sanctioned apps may increase productivity
but creates security gaps
-----
layered security:
cloud resources = 4 layers:
- hardware
- infra
- platform
- app
-----
defence in depth strategy for these layers
some options:
- built-in security
- virtual private cloud
subnets logically isolated from internet
- virtual firewall to clients
- flow logs -> monitor logs
- VPN
remote access to cloud resources
- identity and access management services
user credential management
user authentication, authorization management
-----
micro segmentation:
aka ~ [hyper segregation]
- leverage virtual network topologies
- run multiple small, isolated networks
- without additional hardware costs
- [network defined in software]
- software-defined environments
- more granular control
- traffic, workflows within cloud
-----

---------------
traditional security measures don't work
lack of direct access to
physical network infrastructure.
-----
~ [client gets control of id management in IaaS]
-----
links between public cloud, on-premises
data centres = site to site VPN
-----

=========================
CLOUD APP SECURITY:

---------------
APPLICATION DEVELOPMENT:
-----
- security at all stages of app development
- follow a robust process
-----
- development environment
- develop, test, debug
- less restrictive
- version control
- sandbox environment
- quality assurance
-----
~ [staging environment]
- match closely with live environment
- verify security settings here
- deploy for production
-----
~ -=-
- provisioning and deprovisioning:
- provision = create or update software
- deprovisioning = removal
- self-service portal to automate
-----
software provisioning, deprovisioning
-----

---------------
SECURE CODING TECHNIQUES:
-----
validate security requirements
-----
~ -=-
- normalization = data integrity
- stored procedure = precompiled SQL statements
- [obfuscation and camouflage] =
hide with random value or realistic fictional data
- code reuse:
using existing software to build new software
avoid introduction of vulnerabilities
- SDKs:
Third-party libraries
make application development faster
vulnerabilities in them -> affect.
-----

---------------
INPUT VALIDATION:
-----
- control data input -> database integrity
- attack against database -> malformed data
- crashes or gives out info
- automated input attack.
-----
- web app form to subscribe to a newsletter
- automatically generates, sends email confirmations
- customer gets email with URL to confirm
- attackers modify the URL link. 
- changes credentials
- email return host server, it gets bogus info
- flood web app with
thousands of invalid subscribers.
-----

---------------
VALIDATION RULES:
-----
- check data falls within parameters
- defined by database designer
- ensure data is consistent, accurate
- size, format, consistent, range, check digit
- digit calculation
-----

---------------
INTEGRITY CHECKS:
-----
- compare checksum
- check for data corruption
~ [snapshot of data]
use it to compare
~ [checksum = hash function]
-----
- how checksum works
- hash functions
- version control
- backups
- authorization
-----

---------------
OTHER APP SECURITY PRACTICES:
-----
- is software I installed authentic?
- information secure when browsing Internet?
-----
~ [code signing]:
- prove authenticity
- executables to install, run
- digital sign to validate
- author's id
- provide assurance
-----
~ [secure cookies]:
- protect info stored in cookies
-----
- client -> HTTP request -> server
- server -> HTTP response
-> instructs browser to create cookies
-----
cookie = store data for future requests
[cookies with HTTPS]
-----

---------------
RECOMMENDED A CLOUD SECURITY SOLUTION - LAB:

=========================
CLOUD DATA SECURITY:

---------------
STATES OF DATA:
-----
controls related to securing data
of which [encryption, hashing]...
-----
- data at rest
- data in transit
- data in process
-----

---------------
CRYPTOGRAPHY:
-----
- science of [making, breaking secret code]
- store, transmit encrypted data
- only intended person read
- proper knowledge of secret used
in encryption algorithm
-----
- plain text -> cipher text (encrypted)
- unreadable
- reverse the process = decrypt
-----
- requires a key
- person with key can do it
-----
2 classes of encryption algorithms:
[classes of algorithms]
-----
~ -=-
> symmetric:
- same pre-shared key
- private key encryption
~ Advanced Encryption Standard (AES)
- block size of 128 bits
- key size of 128, 192, 256 bits
- government uses AES.
-----
> asymmetric:
- 1 to encrypt, other to decrypt
- 2 keys
~ Rivest-Shamir-Adleman (RSA)
~ Diffie-Hellman
- EIGamal
- Elliptic curve cryptography (ECC)
-----

---------------
HASHING:
-----
~ -=-
- verify, ensures data integrity
- taking binary data
- producing fixed-length representation
- hash value
- one-way functions
- cryptographic hashing function
- replace plaintext passwords
or [encryption keys].
-----
properties:
- any input length
- fixed output length
- hash function not reversible
- 2 different values never result in same hash
-----
- U.S [NIST] developed SHA
- specified in [Secure Hash Standard (SHS)]
~ SHA-1 in 1994
~ Message Digest 5 (MD5)
- another popular hashing algorithm
- no longer secure
- SHA2 -> SHA1
four additional hash functions
- SHA-224 (224 bit)
- SHA-256 (256 bit)
- SHA-384 (384 bit)
- SHA-512 (512 bit)
- replacing SHA1, MD5.
-----

---------------
RECAP:
-----
2 class of encryption algorithms:
symmetric - AES, 128+
asymmetric - RSA, DH etc
-----
hashing:
MD5
SHA
-----

=========================
PROTECTING VMs:

---------------
PROTECTING VM:
-----
- VM requires patches, updates, antimalware measures
- cloud offers additional security options
-----
~ -=-
ALL IN ONE:
- plan subnet placement
- disable unneeded port and services
- enforce account management, policies
- install antimalware software, update
- install HIDPS, firewall.
-----

---------------
PROTECTING VMs FROM VM SPRAWL ATTACKS:
-----
- easy to create VM instances in cloud
- leads to VM sprawl issue
- many VM instances, not managed properly
- unused ones left running
- monitor, maintain or it
- becomes outdated, vulnerable
-----
- implement policies to log and audit
- cloud resources being used
VM sprawl =
- risks, also consumes resources
- VM instances, storage, and
- unassigned public IP addresses
-----

===============================================
M8: CRYPTOGRAPHY:

=========================
CONFIDENTIALITY:

---------------
DATA CONFIDENTIALITY:
-----
- 2 classes of encryption
- asymmetric, symmetric
- classes differ in how keys used
-----
> symmetric encryption algorithms
- data encryption standard (DES)
- 3DES
- advanced encryption standard (AES)
each party knows pre-shared key
-----
> asymmetric encryption algorithms
- Rivest, Shamir, and Adleman (RSA)
- public key infrastructure (PKI)
-----

---------------
SYMMETRIC ENCRYPTION:
-----
- same pre shared key
- [40 - 356] bit key
- faster
~ [for bulk data (VPN traffic)]
-----
- block ciphers:
- encryption completed in 64 bit blocks
- DES = 64-bit block size
- AES = 128-bit block size
-----
- stream ciphers:
- a 1 bit block cipher
~ encryption is 1 bit at a time
- RC4, A5
- GSM cell phone communications
-----
> symmetric encryption algorithms:
- DES
- 3DES = repeat DES 3 times
- AES = recommended symmetric algorithm
- SEAL = software optimized enc algorithm (faster than AES)
~ [RC = rivest cipher series algorithm]
- RC4 most used, stream cipher
- used to secure ~ [web traffic]
- RC4 outdated, insecure
-----

---------------
ASYMMETRIC ENCRYPTION:
-----
- different keys
- [512 - 4096] bit key
- computational taxing -> slow
- quick data transfer, HTTPS
-----
- public-key algorithms
- can't calculate decryption key with 
encryption key and vice versa.
-----
- public + private key
- both can encrypt
- paired key needed to decrypt
- reversible process
~ [confidentiality, authenticity]
-----
~ [key length 2048 bit above is trusted]
-----
protocols for asymmetric algorithm:
- internet key exchange
- secure socket layer
- secure shell
- pretty good privacy
-----
IKE = IPsec VPN component
SSL = in IETF standard TLS
SSH = secure remote access
PGP = cryptographic privacy, authentication for secure email
-----
- asymmetric slower than symmetric
- factoring large number
~ [discrete logarithms]
- used in low volume cryptographic mechanisms
~ [digital signatures, key exchange]
- but key management is simpler here as one key made public
-----
asymmetric encryption algorithms:
-----
> DH:
- key: 512, 1024, 2048, 3072, 4096
- diffie hellman algorithm
- raise a number to certain number
difficult to compute
-----
> DSS, DSA:
- key: 512 - 1024
- DSS -> DSA for digital signatures
- based on [EIGamal] signature scheme
- similar to RSA but
10 to 40 times slow to verify
-----
> RSA:
- key: 512 - 2048
~ [signing, encryption]
- secure if
long keys, updated implementation
-----
> EIGamal:
- key: 512 - 1024
- based on Diffie-Hellman
- size twice as plain text
- used for small messages like keys
-----
> Elliptic curve techniques:
- key: 224+
- adapts Diffie Hellman or ElGamal
- keys can be smaller
-----

---------------
ASYMMETRIC ENCRYPTION - CONFIDENTIALITY:
-----
without pre-sharing a password
encryption with public key
-----
public key(enc) + private key(dec) = confidentiality
-----
only 1 has private key -> confidentiality
private key compromised, generate another pair
-----
request their public key
get it
use with data -> encrypted data
send it
they use their private key, read
-----

---------------
ASYMMETRIC ENCRYPTION - AUTHENTICATION:
-----
- encryption with private key
- private key(enc) + public key(dec) = authentication
-----
- public key to decrypt data
one host has private key
only they could encrypt
-----
- provides sender authentication
-----

---------------
ASYMMETRIC ENCRYPTION - INTEGRITY:
-----
- combine 2 asymmetric encryption process
get CIA.
-----
- message -> ciphered with A's public key
ciphered hash -> enc with B's private key
attained CIA.
-----
~ -=-
A enc using B's public key
A enc hash with private key
B use A's public key, decrypt hash
B use private key, decrypt message
-----

---------------
DIFFIE-HELLMAN:
-----
- asymmetric mathematical algorithm
- 2 hosts share secrets
with no communication in past
shared key never exchanged
-----
- IPsec VPN, SSH
data exchange
-----
common + A's secret = A's public
common + B's secret = B's public
A's public + B's secret = A's final
B's public + A's secret = B's final
A, B both with same final value
-----
- DH key agreement process
- agree arbitrary common value
- DH -> large numbers
- DH 1024 bit number ~ 309 decimal digits
- a billion = 10 decimal digits
- imagine 309 decimal digits.
-----
different DH groups
- key strength
- high group = secure but
- extra time to compute key
- DH group 1,2,5,14,15,16
- with 768, 1024, 1536, 2048, 3072, 4096 bits
-----
- DH key based on elliptic curve cryptography
- group 19, 20, 24.
- very slow for bulk encryption
~ [bulk data] -> symmetric algorithm
3DES or AES
~ [use DH algorithm to create keys]
-----

---------------
CRYPTOGRAPHY:
-----
- important folder with files inside
make sure it is not altered:
~ [quickhash] -> hash files
integrity checks
-----
intercepted, viewed?
-----
encrypt files
~ [7 zip program]
file -> archive with 7 zip -> password
symmetric encryption
-----
data integrity
origin authentication
data confidentiality
data non-repudiation.
-----

---------------
CLASSIC, MODERN ENCRYPTION ALGORITHMS - LAB:
-----
math theory + computer science
~ [JcrypTool]
cryptography, cryptanalysis
-----
- cipher = algorithm to enc, dec
- classic algorithms made by hands
- modern algorithms with computers
- Caesar cipher
- quicktool -> jcryptool
has 4 windows
-----

---------------
ENCRYPTING & DECRYPTING DATA USING OPENSSL - LAB:

---------------
ENCRYPTING & DECRYPTING DATA USING HACKER - LAB:

---------------
EXAMINING TELNET & SSH IN WIRESHARK - LAB:

---------------
DETERMINE ENCRYPTION ALGORITHM TO USE - LAB:

=========================
OBSCURING DATA:

obscure or conceal data

---------------
DATA MASKING TECHNIQUES:
-----
- secure data
- replace with non-sensitive data
- but looks original
limit data propagation within org
- distribute surrogate data
- test and analyse
-----
methods for data to be meaningful
but change, protect it:
- substitution
- shuffling
- nulling out
-----

---------------
STEGANOGRAPHY:
-----
~ -=-
conceal data in another file
lays low
nobody knows. hidden to view
electronic or in hardcopy form
-----
[embedded data + cover text = stego text]
[stego key] to control hiding
~ [stego]
-----
steganography techniques:
- least significant bits
- a pixel can store 3 bits
- LSB uses each of RGB
- 24 bit colour image
- insert T, takes 2 bits
-----
social steganography:
- hide info in plain sight
- read in certain way.
- 2 audience: wife, manager
- got the tool in super market
- wife: groceries
- manager: dark web, AK12
- misspell words on purpose
- make obscure references
- send out 2 different messages
- apparent, secret message.
-----
detection:
~ [steganalysis] to discover hidden info
- patterns in stego image
- disk -> unused yet reserved areas
- [disk analysis utilities]
- data packets with hidden info in headers
steganography signatures.
-----
~ -=-
- compare original, stego image,
- find patterns.
-----

---------------
HIDE DATA WITH STEGANOGRAPHY - LAB:
-----
~ -=-
hide secret data in
non-secret data file.
-----
other's attraction less in steganography
silent, [stealthy], no attention.
~ [steghide]
data file -> image file (data file)
-----
target file, cover file:
- libreOffice secret.odt &
- gimp keyboard.jpg &
embed them
- steghide embed -cf coverfile.jpg -ef targetfile.txt
- give password
view the files
all remains same.
verify hidden file:
-- steghide info coverfile.jpg
extract it:
-- steghide extract -sf coverfile.jpg
end.
-----
~ STEGHIDE
-----

=========================
INTEGRITY AND AUTHENTICITY:

---------------
SECURE COMMUNICATIONS:
-----
- secure data as it travels
across links.
-----
~ -=-
4 elements:
- data integrity
- origin authentication
- data confidentiality
- data non-repudiation
-----

---------------
CRYPTOGRAPHIC HASH FUNCTIONS:
-----
- hash -> verify integrity
- 1 way mathematical function
- easy to compute
- hard to reverse
to verify authentication
plaintext -> hash function -> fixed length hash value
-----
- variable block of binary data
- gives fixed-length hash
- digest or digital fingerprint.
- hash change as data change.
-----

---------------
CRYPTOGRAPHIC HASH OPERATION:
-----
- h = H(x)
- any length input
- fixed length output
- easy to compute
- one way, not reversible
- collision free
-----

---------------
MD5 AND SHA:
-----
- message integrity
- not changed accidentally or intentionally
- MD5, SHA1, SHA2, SHA3
-----
- Ron Rivest -> MD5
- 128 bit hash message
- legacy algorithm.
-----
- SHA1 -> U.S NSA in 1995
- similar to MD5 hash function
- 160 bit hash message
- slower than MD5
- legacy algorithm.
- SHA2 -> [NSA]
- SHA 224, 256, 384, 512
- SHA3 -> [NIST]
- SHA3-224, 256, 384, 512
NG algorithms
-----
any can compute hash for any data
- hashing vulnerable to MiTM
- attacker -> intercept -> change, recalculate hash,
append hash to message -> send it.
-----
~ -=-
hashing -> protect from accidental change
no protection from deliberate changes...
-----

---------------
ORIGIN AUTHENTICATION:
-----
- origin authentication
- integrity assurance
- use keyed-hash message authentication code - [HMAC]
~ [hash function + secret key]
other MAC also used
-----
- HMAC -> SSL, IPsec, SSH.
~ [defeats MiTM], data origin authentication
-----
- HMAC used by C routers for
OSPF routing authentication
-----
hash = MITM
HMAC = no MITM
-----

=========================
USING HASHES:

---------------
HASHING FILES, DIGITAL MEDIA:
-----
- integrity -> ensure complete info, unaltered
- confidence to download from internet
- forensic examination
- checksums.
-----

---------------
HASHING PASSWORDS:
-----
data -> fixed length fingerprint
or digital hash.
can't reverse, get original data
input change -> different hash.
protect passwords
~ [store password as hash]
-----
system never writes password to hard drive
stores digital hash alone.
-----

---------------
CRACKING HASHES:
-----
guess the password
crack the hash.
-----
~ [dictionary]
~ [brute force]
-----
- file with hashes of target passwords
compare hash.
-----
or attempt every possible combination
needs power, time.
-----
weird passphrase = death to crackers.
-----

---------------
SALTING:
-----
- secure password hashing
- 2 users with same password = same hash
- random string of characters
- additional input added before hashing
- different hash
- DB stores both [hash + salt]
- same password -> different hash
- salt need not be secret (random number)
-----

---------------
IMPLEMENTING SALTING:
-----
generate salt with:
- cryptographically secure pseudo-random number generator
~ [CSPRNG]
high level of randomness, unpredictable
-----
- unique salt
- salt, hash same length
hash on server, web app
-----
~ [key stretching] also helps
makes password cracking slow
hacker's high end hardware
crack billions of hash/sec
less effective...
-----
store password:
- CSPRING for long, random salt
- salt at beginning of password
- hash it with SHA 256
- save salt, hash in user's DB record
-----
validate password:
- retrieve user's salt, hash
- add salt to password
- hash with same hash function
- compare hash
- match?
-----

---------------
PREVENTING ATTACKS:
-----
~ [salting] fails:
- dictionary attack
- lookup tables
- rainbow tables
-----
~ [lookup table]:
- stores pre-computed hashes along
with corresponding password.
-----
~ [reverse lookup table]:
- launch dictionary or brute-force attack
on hashes without pre-computed lookup table
then create a lookup table
breached account database
-----
~ [rainbow tables]:
- smaller table
- store solutions to more hashes
in same space.
-----

---------------
HASH IT - LAB
-----

=========================
PUBLIC KEY CRYTOGRAPHY:

---------------
USING DIGITAL SIGNATURES:
-----
- legal proof
- uses [asymmetric] cryptography
-----
- authentic
- unalterable
- not reusable
- non-repudiated
-----
uses:
> code signing:
- guarantee, code is unaltered
- digi sign scripts, executables
> digital certificates:
- virtual ID card
-----
~ -=-
3 digital signature standard ~ [DSS]
algorithms to generate, verify it.
- DSA
- RSA
- ECDSA: newer DSA
smaller, efficient
-----
PKCS - public key cryptography standards
-----

---------------
DIGITAL SIGNATURES FOR CODE SIGNING:
-----
- authenticity, integrity assurance
of software code.
- exe files -> digital signed envelope
- user -> verify before installation
-----
authentic, not modified
publisher published it.
-----
from trusted source, not tampered
-----
properties of file with
digi sign cert:
- file
- properties
- digi signs
- details
- cert info
- cert path
-----

---------------
DIGITAL SIGNATURES FOR DIGITAL CERTIFICATES:
-----
- digi cert -> [e passport]
- securely exchange info over Internet
- authenticate and verify
~ [he is who he is]
-----
also - confidentiality for receiver
with means to encrypt a reply.
-----
digi cert similar to CCNA S
issued to?, who authorized?, validity?
independently verifies identity
-----
~ -=-
cert -> verify ID
sign -> verify something comes from ID
-----
[cert for ID, sign for content from ID]
-----

---------------
GENERATE AND USE A DIGITAL SIGNATURE - LAB:
-----
- prevent tampering
- signature creation, verification process
~ [openSSL]
- generate digital signature
- generate a document
- sign with digital signature
- validate authenticity, integrity
- change document
- validate it is not authentic
-----
generate and view a private key:
-- openssl genpkey -algorithm RSA -out pvt_key.pem
-- cat pvt_key.pem
generate and view a public key:
-- openssl pkey -in pvt_key.pem -pubout -out pub_key.pem
-- cat pub_key.pem
create a document to sign digitally:
-- echo "please transfer INR 14,00,000 to Saisharan by 2 AM 16/01/2027" > contract.txt
-- cat contract.txt
use private key, digitally sign the document:
-- openssl dgst -sha256 -sign pvt_key.pem -out signature contract.txt
-- cat signature
a binary file.
verify authenticity, integrity of document:
-- openssl dgst -sha256 -verify pub_key.pem -signature signature contract.txt
simulate threat actor changing content:
edit the txt file, change to INR 14,000
-- openssl dgst -sha256 -verify pub_key.pem -signature signature contract.txt
-----
Verification OK
Verification Failure
-----

=========================
AUTHORITIES AND PKI TRUST SYSTEM:

---------------
PUBLIC KEY MANAGEMENT:
-----
- internet traffic between 2 parties
- asymmetric connection
- exchange public key information
-----
~ [SSL cert] = digital cert to confirm [ID of domain]
- SSL on website
- purchase an SSL certificate
- SSL certificate provider
- trusted 3rd party
- in depth investigation before issuing credentials
all who trusts 3rd party issues accepts
-----
- host - website over HTTPS
- browser check site's security certificate
- verify validity, reliable CA
- browser -> save certificate locally
- website’s public key included in certificate
- verify future communications
-----
PKI = create, manage, use,
revoke digital certificates.
- certificate authority CA
- org that creates digital certs
~ [public key + confirmed ID]
website or individual.
- intricate system, guard digital ID
-----
CA:
- IdenTrust
- DigiCert
- Sectigo
- GlobalSign
- GoDaddy
-----
~ [Let’s Encrypt]
free
non profit CA.
-----

---------------
PUBLIC KEY INFRASTRUCTURE:
-----
- needed for largescale distribution
of public encryption keys.
-----
scalable trust relationship.
has resources to
manage digital certificates.
-----
- PKI certificate
- certificate store
- PKI cert authority
- cert database
~ [DB worker store ID]
-----
- cert authority
- PKI cert issued
- exchange PKI cert
- verify PKI cert
- cert authority
- cert database
-----
- not all PKI cert from CA
~ [RA - registration authority]
- subordinate of CA
~ [root = CA, leaves = RA]
- cert for specific uses
-----

---------------
PKI AUTHORITIES SYSTEM:
-----
~ -=-
vendors -> CA services:
- Symantec group (verisign)
- comodo
- go daddy group
- globalsign
- digicert
-----
- or private PKIs with
~ [MS server or open SSL]
-----
- outsourced CA -> classes
- trust level of cert:
0, 1, 2, 3, 4, 5
-----
0 = testing, no checks
1 = individuals for email verification
2 = orgs for ID proof
3 = servers, software signing
4 = business transactions
5 = private orgs or gov
-----
5 > 0
-----

---------------
IFRAME COMPONENT TEST:
-----
- weak authentication of holder
class 1
-----
- prove ID, authenticate public key
class 3,4
-----
preloaded CA public keys
in web browsers
-----
[VeriSign] certs in cert store on host:
any cert signed by CA in list
trusted automatically.
-----
[PKI] for org's internal use,
authenticate employees
~ [enterprise = own CA].
-----

---------------
PKI TRUST SYSTEM:
-----
- topologies of trust
- simple = single root PKI topology
- single or root CA -> issue all certs to users
- usually within same organization.
-----
- simple but not scalable.
- centralized administration
- single point of failure...
- root CA -> hosts get certs.
-----
~ -=-
cross certified CA topologies:
- CA1, CA2, CA3 exchange info
deliver to hosts.
-----
hierarchical CA topologies:
- highest level = root CA
- issue certs to [users, subordinate CA]
- conform to minimum set of practices
scalability and manageability.
-----
- hierarchical, cross-certification topology
- hybrid infrastructure...
-----

---------------
INTEROPERABILITY OF DIFFERENT PKI VENDORS:
-----
~ [LDAP], [X.500] directories
interoperability between these...
-----
~ -=-
CA vendors -> proprietary solutions
no standards...
-----
[LDAP, X.500] ->
~ [protocols to query a directory service]
- MS AD
- username + passwd verification
-----
~ -=-
- query a DB with SQL
- query a Directory with LDAP
and X.500
-----
~ [IETF] -> internet X.509 PKI cert policy
- RFC 2527
- X.509 v3 standard
- format of a digital certificate.
-----
~ -=-
X.509 v3 applications:
- SSL
- IPsec
- S/MIME
- EAP-TLS
-----
learn more...

---------------
CERTIFICATE ENROLMENT, AUTHENTICATION, REVOCATION:
-----
- securely obtain copy of CA’s public key
- self-signed certificate
- CA public key verifies all certs issued by CA
- proper operation of PKI.
- root CA alone -> issue self-signed certificate
- verified by other CA within PKI
-----
- auto CA cert handling
- pre-installed with set of public CA root certs
- public certificates to website visitors
- create, distribute private, public certs to clients
-----
- cert enrolment process
- get CA certs in band
- authentication done out-of-band [OOB]  with telephone
~ Plain Old Telephone System [POTS]
- valid CA identity certificate.
- authentication no longer needs CA server
- users exchange certs with public keys
-----
~ -=-
- certificate revocation lists - CRL
- online cert status protocol - OCSP
-----
- query an [OCSP server]
- revocation status of X.509 digital cert
-----

=========================
APPS AND IMPACTS OF CRYPTOGRAPHY:

---------------
PKI APPLICATIONS:
-----
~ -=-
uses of PKIs:
> SSL/TLS certificate-based peer authentication
> Secure network traffic using IPsec VPNs
> HTTPS Web traffic
> Control access to network with 802.1x authentication
> Secure email using S/MIME protocol
> Secure instant messaging
> Approve, authorize apps with Code Signing
> Protect user data with Encryption File System (EFS)
> Implement 2FA with smart cards
> Securing USB storage devices
-----

---------------
ENCRYPTED NETWORK TRANSLATIONS:
-----
permitting PKI-related solutions
increase of SSL/TLS traffic
encrypted, can't monitor by normal means
malware or leak info over SSL/TLS connection
-----
PKI-related issues:
validity date range in X.509v3
sign validation error
-----
SSL/TLS protocols, extensible and modular
cipher suite components:
Message Authentication Code
encryption algorithm
key exchange algorithm
authentication algorithm
-----
cryptanalysis continues to reveal flaws
patch the flaws.
version number of SSL/TLS changes.
-----

---------------
ENCRYPTION, SECURITY MONITORING:
-----
- network monitoring hard with encryption
~ [site-to-site VPNs] are used
- position IPS to monitor unencrypted traffic
- end-to-end encrypted HTTPS traffic 
-----
solutions:
> configure rules. distinguish between SSL, non-SSL traffic
> server certificate validation with CRL, OCSP
> antimalware protection, URL filtering
~ [Cisco SSL Appliance] to decrypt SSL traffic
and send to IPS for risks [hidden by SSL].
-----
- cryptography-related security incidents.
- target the encryption algorithms
- decrypt packet, read info.
- data hidden with encryption to analysts
- encrypted C&C traffic flows through FW
~ [cant stop if cant see, understand]
- continue using encrypted commands to infect
possibly create a botnet
~ [decrypt, compare with signatures]
- detect anomalous TLS/SSL traffic
~ [difficult, time consuming]
-----

=========================
SUMMARY:
~ -=-

---------------
CONFIDENTIALITY:
-----
encrypt
need keys
-----
symmetric encryption algorithms:
- DES
- 3DES = repeat DES 3 times
- AES = recommended symmetric algorithm
- SEAL = software optimized enc algorithm (faster than AES)
-----
~ [RC = rivest cipher series algorithm]
- RC4 most used, stream cipher
- used to secure ~ [web traffic]
- RC4 outdated, insecure
-----
asymmetric encryption algorithms:
- DSS
- DSA
- RSA
- EIGamal
- Elliptic curve techniques
- PKI
- DH
-----
protocols that use [asymmetric key algorithms]:
- IKE
- SSL
- SSH
- PGP
-----
- confidentiality without pre-sharing a password.
- Combining two asymmetric encryption processes
provides message CIA.
-----
- Diffie-Hellman (DH) generate an identical
shared secret key without communicate before.
-----

---------------
OBSCURIN DATA:
-----
data masking
- substitution
- shuffling
- nulling out
-----
steganography
conceal data in another file
electronic or in hardcopy form
steganalysis
disk analysis utilities
steghide
-----

---------------
INTEGRITY AND AUTHENTICITY:
-----
secure comms:
hash
- MD5, SHA1, SHA2, SHA3
-----
origin authentication:
HMAC
used in SSL, IPsec, SSH
defeats MiTM
-----

---------------
USING HASHES:
-----
system store passwords as hash
-----
salting:
need not be secret (random number)
generate with CSPRING
-----
key stretching
also makes password cracking slow
-----
CSPRING salt + SHA 256 and save
-----

---------------
PUBLIC KEY CRYTOGRAPHY:
-----
using digi signs:
legal proof
asymmetric cryptography
code signing
- DSA
- RSA
- ECDSA: newer DSA
-----
digi sign from digi cert:
cert -> verify ID
sign -> verify something comes from ID
-----
openssl
-----

---------------
AUTHORITIES AND PKI TRUST SYSTEM:
-----
public key management:
- internet traffic between 2 parties
- asymmetric connection
- exchange public key information
uses SSL cert
- verify validity, reliable CA
- browser -> save certificate locally
- website’s public key included in certificate
-----
public key infrastructure:
- needed for largescale distribution
of public encryption keys.
- scalable trust relationship.
has resources to manage digi certs.
- PKI certificate
- not all PKI cert from CA
RA subordinate of CA
-----
- outsourced CA -> classes
- trust level of cert:
0, 1, 2, 3, 4, 5
-----
- simple but not scalable.
- centralized administration
- single point of failure...
- root CA -> hosts get certs.
-----
cross certified CA topologies:
- CA1, CA2, CA3 exchange info
deliver to hosts.
-----
- hierarchical, cross-certification topology
- hybrid infrastructure...
-----
~ [LDAP], [X.500] directories
interoperability between these...
-----
CA vendors -> proprietary solutions
no standards...
-----
- query a DB with SQL
- query a Dir with LDAP, X.500
-----
X.509 v3 applications:
- SSL
- IPsec
- S/MIME
- EAP-TLS
-----
- certificate revocation lists - CRL
- online cert status protocol - OCSP
-----

---------------
APPS AND IMPACTS OF CRYPTOGRAPHY:
-----
uses of PKIs:
> SSL/TLS certificate-based peer authentication
> Secure network traffic using IPsec VPNs
> HTTPS Web traffic
> Control access to network with 802.1x authentication
> Secure email using S/MIME protocol
> Secure instant messaging
> Approve, authorize apps with Code Signing
> Protect user data with Encryption File System (EFS)
> Implement 2FA with smart cards
> Securing USB storage devices
-----
encrypted network translations:
permitting PKI-related solutions
increase of SSL/TLS traffic
encrypted, can't monitor by normal means
malware or leak info over SSL/TLS connection
-----
SSL/TLS protocols, extensible and modular
cipher suite components:
Message Authentication Code
encryption algorithm
key exchange algorithm
authentication algorithm
-----
- network monitoring hard with encryption
~ [site-to-site VPNs] are used
- position IPS to monitor unencrypted traffic
- end-to-end encrypted HTTPS traffic 
-----
~ [Cisco SSL Appliance] to decrypt SSL traffic
and send to IPS for risks [hidden by SSL].
-----
- cryptography-related security incidents.
- target the encryption algorithms
- decrypt packet, read info.
- encrypted C&C traffic flows through FW
~ [cant stop if cant see, understand]
- continue using encrypted commands to infect
~ [difficult, time consuming]
-----

===============================================
M9: TECHNOLOGIES AND PROTOCOLS:

=========================
INTRO:

good protocols -> bad uses

=========================
MONITORING COMMON PROTOCOLS:
~ -=-

---------------
SYSLOG & NTP:
-----
- endpoints, network -> syslog -> log events
- log entries -> central servers
~ [syslog daemon] -> listen on UDP [514]
-----
security monitoring tool
potential target
-----
- slow, stealthy data exfiltration
- attack syslog servers -> escape detections
- block data transfer
- syslog clients -> servers
~ tamper/destroy log data.
-----
~ [syslog-ng] = enhanced syslog
- internet search: syslog-ng
-----
~ -=-
devices -> [log server] <- security monitor
- event messages
-----

---------------
NTP:
-----
- syslog messages time stamped
- message from different source
organize by time
- view network comm processes
- share consistent timeclock = better
use Network Time Protocol (NTP)
-----
- hierarchy of
~ [authoritative time sources]
- UDP port [123]
timestamp for detecting exploits
- NTP -> direct DDoS
-----
authoritative time source -> local NTP server -> network
-----

---------------
DNS:
-----
- less stringent policies to protect DNS
- used by millions daily
~ encapsulate different network protocols
within DNS to evade security devices
- various malware exploit DNS for its mission
- malware -> DNS -> communicate with C&C server
- exfiltrate data in traffic
-----
disguised as normal DNS queries
- encoding:
~ [Base64, 8-bit binary and Hex]
to camouflage data, evade DLP measures.
-----
- malware -> encode data as
[subdomain portion of DNS lookup]
for domain (nameserver of attacker)
-----
~ -=-
- DNS lookup for [aaaaa.example.com]
- forward to nameserver of example.com
- records aaaaa,reply to malware
with coded response.
- attacker collect encoded data
decode, combine.
- username/password database.
-----
~ -=-
find if it's sus:
- subdomain part of requests
- longer than usual requests
-----
~ -=-
- construct a mathematical model
based on length of subdomains within DNS requests
- identify abuse of DNS query process
- aW4gcGxhY2UgdG8gcHJvdGVjdC.example.com = abnormal
-----
- DNS queries for randomly generated domain names
long random-appearing subdomains = sus.
~ [analyse DNS proxy logs]
-----
~ -=-
- Cisco Umbrella passive DNS service
- block requests to suspected C&C, exploit domains
-----

---------------
HTTP & HTTPS:
-----
~ [backbone protocol of WWW]
- transmitted in plaintext
- no confidentiality, integrity
- alteration or interception by malicious parties
-----
~ [iFrame injection] = a HTTP exploit
- inline frame
-----
web based threats:
- malware planted in webservers
- direct browsers to infected servers
by loading iframes.
- compromise a webserver, plants
malicious code
- invisible iFrame there too
-----
~ [Cisco Web Reputation filtering]
- implement HTTPS only policies
- adds a layer of encryption
-----
- HTTPS = not mechanism for web server security.
- secures HTTP protocol traffic while in [transit]
-----
~ -=-
- HTTP - SSL/TLS - TCP - IP - EP
- EP - IP - TCP - SSL/TLS - HTTP
- server.
-----
HTTPS:
~ [complicates network security monitoring]
- some = SSL decryption and inspection
- processing and privacy issues
- complexity to packet captures
- additional messaging to establish encrypted connection
-----
- client -> request
- server -> [public key, cert]
- client check cert - [expiry, unrevoked, trusted]
~ [client -> symmetric key]
- server decrypt key
~ [server -> encrypt with that key, send page]
-----

---------------
EMAIL PROTOCOLS:
-----
~ [SMTP, POP3, IMAP]
to spread, exfiltrate, provide channel
to malware
-----
- host -> SMTP -> data -> mail servers
- common like DNS, HTTP
- not always monitored.
-----
~ [2014 hack of Sony Pictures]
- SMTP to exfiltrate user details
hosts -> CnC servers
- develop exploits of secured resources
Security monitoring -> reveal this traffic
-----
host -> IMAP, POP3 ->
download email from mail server.
application protocols, brings malware to hosts.
- Security monitoring can identify
~ [Retrospective analysis] -> track behaviour
- recovery of infected file attachments
- malware sandboxes for analysis.
-----

---------------
ICMP:
-----
- identify hosts on network
- network structure
- determine OS at use
-----
~ [vehicle for DoS]
- data exfiltration
- crafted ICMP packets to transfer files 
~ [ICMP tunnelling]
-----
search: well-known LOKI exploit
tools to craft tunnels:
~ [Ping Tunnel]
-----

=========================
SECURITY TECHNOLOGIES:

---------------
ACLs:
-----
- technologies, protocols impact
security monitoring.
- ACL among those technologies...
-----
rely too much -> false sense of security
-----
~ -=-
network protection:
- ACL
- packet filtering
-----
- ACLs to permit only specific types of ICMP traffic
- outsider -> ping request -> inside host
- outbound ACL -> ICMP messages -> report problems
allow ICMP tunnelling and data exfiltration.
-----
attacker determine -> IP, protocols, ports
allowed by ACL
-----
port scanning, penetration testing,
other reconnaissance
-----
spoofed IP -> craft packets
establish connection on arbitrary ports
manipulate protocol traffic
established flag in TCP segments
-----
can't configure rules to all
emerging packet manipulation techniques.
-----
- detect, react to packet manipulation
- sophisticated behaviour
- context-based measures
~ [Cisco NG FW, AMP, email, web content appliance]
- rule-based security measures.
-----
~ -=-
- ACL to mitigate ICMP abuse:
access-list 112 ( internet -> R1)
access list 114 ( LAN -> R1 )
-
- permit icmp any any
- echo-reply, source-quench, unreachable.
- deny icmp any any.
- permit ip any any.
-
- permit icmp 192.168.1.0 0.0.0.255 any 
- echo, parameter-problem,
- packet-too-big, source-quench
- deny icmp any any
- permit ip any any
-----

---------------
NAT AND PAT:
-----
- complicate security monitoring
multiple private IP mapped to 1 public IP
- hides inside addresses
-----
~ [NetFlow] = unidirectional, defined by
address, ports they share
-----
break a flow that passes NAT gateway
flow info beyond that point unavailable
-----
cisco ->
stitch flows together even if NAT used
-----
LAN host - NAT - internet - remote host
PAT + NAT = difficult to log specific inside device
requesting and receiving the traffic.
-----
- PAT = NAT overload
- map multiple private IP -> singe public IP
using different ports
- PAT extends NAT capabilities.
- translate both IP address and port number
simultaneously.
-----
> translation process:
- LAN -> internet
- router -> PAT -> replace S IP, port ->
own public IP, unique port.
> port multiplexing:
- PAT maintains table of translations
- all device in LAN use same IP
as long as source ports are unique.
> response handling:
external server -> router -> PAT table -> LAN host
based on the destination port number.
> benefits:
- PAT conserves public IP addresses
- limited and expensive
- security by hiding internal network structure.
-----

---------------
ENCRYPTION, ENCAPSULATION, TUNNELLING:
-----
- encryption -> challenge to security monitoring
- makes packet details unreadable.
- encryption = part of VPN technology.
- virtual point-to-point connection
- Malware establish encrypted tunnel
- rides on common, trusted protocol
- exfiltrate data from the network
-----

---------------
PEER TO PEER NETWORKING AND TOR:
-----
- P2P networking
- host = operate both client, server roles.
- file sharing, processor sharing, instant messaging
members of the P2P network
-----
~ [Napster and Gnutella]
- bitcoin = P2P
- share distributed database or ledger
records Bitcoin balances, transactions
~ [BitTorrent]: P2P file sharing network
-----
unknowns access network = security concern
- deny file sharing P2P apps in corporate networks
~ [P2P -> circumvent firewall protections]
- common vector to spread malware
- P2P = inherently dynamic
- connects to numerous D IP addresses
- dynamic port numbering
- shared files ~ often with malware
- malware on P2P clients -> distribute
-----
- Processor sharing P2P networks
donate processor cycles
to distributed computational tasks
- instant messaging -> P2P app
legitimate value within organizations
~ [Webex] secure than IM with public servers
-----
P2P looks like mesh...
-----
- Tor = software, network of P2P hosts
- function as internet routers on Tor network
- browse the internet anonymously.
- access tor network with special browser
- encrypted layered end-to-end path
- across Tor server network
- each encryption layer peeled away ~ [onion routing]
- traverse Tor relay
- layers have encrypted next hop info
- only target router can read
- none knows path to destination
- routing info readable by device that requires
reached. response,
encrypted layered path is again constructed.
-----
- challenges for cybersecurity analysts
widely used by criminal orgs on [dark net]
- communications channel for malware CnC
- D IP obfuscated by encryption
- only the next-hop Tor node known
- avoids block lists configured on security devices.
-----
tor software
constructs a random path
through network of Tor relays
tor exit node -> unencrypt -> destination
-----

---------------
LOAD BALANCING:
-----
- distribute traffic, prevent congestion
redundant resources
- load balancing algorithm or device
- same domain name + multiple IP
- servers distributed geographically
suspicious features to appear in packet captures
-----
- load balancing manager - LBM
- probes to test path performance, health
to avoid sending to unavailable resource
- probes ~ looks suspicious if unaware.
-----
- spreads malware-infected files and
creates vulnerabilities on a network?
- P2P
-----
~ -=-
ACL - defeated by packets with spoofed IP
-----
TOR - hides identity details of users browsing web
-----
ACL, encryption, TOR, NAT/PAT, P2P
-----
LAB?
-----

===============================================
M10: NETWORK SECURITY DATA:

=========================
INTRO:

data needed for security monitoring

=========================
SECURITY DATA TYPES:

---------------
ALERT DATA:
-----
~ -=-
- generated by IPS/IDS in
response to traffic
violated rule/ match signature of known exploit
~ [snort] - NIDS
- comes configured with rules for known exploits
snort generated alerts ->
readable, searchable with
~ [sguil + squert]
part of:
~ -=- Security Onion suite NSM tools
-----
~ [tesmyids site]
- test snort operations.
host visits site
- signature matches
triggers alert.
- easy, harmless way to verify
NIDS is running.
-----
- triggered snort rule:
alert ip any any -> any any… …
generates alert if any IP in network
receives data from outside with
text matching pattern of uid=0(root)
alert's message = GPL ATTACK_RESPONSE id check returned root
snort rule ID for this = 2100498
-----
- Sguil alert generated by visiting
testmyids website:
snort rule, packet data
displayed in lower right area of sguil interface:
-----

---------------
SESSION & TRANSACTION DATA:
-----
~ -=-
ts = session start timestamp
uid = unique session id
id.orig_h = session source IP
id.orig_p = source port
id.resp_h = destination IP
id.resp_p = destination port
proto = L4 protocol for session
service = L7 protocol
duration = session duration
orig_bytes = bytes from origin host
resp_bytes = bytes from responding host
orig_packets = packets from source host
resp_packets = packets from destination host
-----
session data =
~ [record of conversation between 2 endpoints]
- client - server
-----
~ session data, not data use by client
- five tuples of S, D IP & port
-  IP code for protocol
- session ID
- amount of data transferred
- session duration
~ [like metadata]
-----
~ [zeek (bro)]
- network security monitoring tool
- zeek connection log
--zeek session data contents.
-----
- transaction data has messages
- exchanged during network sessions
-----
view in packet capture transcripts
device logs in server has
transaction info between C, S
-----
- session - download content from webserver
- transaction - represent requests and replies
logged in access log server
-----
or by NIDS like zeek.
session = all traffic involved in making request
transaction = request itself.
-----

---------------
FULL PACKET CAPTURES:
-----
- full packet capture -> detailed network data
- storage, retrieval intensive types in NSM.
~ [session data + actual content]
- text of emails, HTML in webpages,
files that go in and out
recover content, malware analyse/ behaviour...
~ [wireshark]
view full data captures.
~ [Cisco Prime Infrastructure system]
like wireshark.
-----

---------------
STATISTICAL DATA:
-----
- like session data,
statistical data through analysis
other forms of network data
-----
predict network [behaviour]
- compare, detect anomalies
- variation in traffic patterns
raise alarms, prompt investigation.
-----
- NBA - network behaviour analysis
- NBAD - network behaviour anomaly detection
uses advanced analytical techniques to analyse
~ [NetFlow, IP-flow Info Export]
- (IPFIX) network telemetry data.
-----
predictive analytics, AI to analyse
detailed session data,
detect incidents.
-----
~ [IPFIX] = IETF standard version of cisco NetFlow v9
-----
NSM tool that uses statistical analysis:
~ [cisco cognitive threat analytics]
find malicious activity
bypassed security controls
entered network through unmonitored channels
includes removable media
operating inside organization’s environment.
- cloud-based product, uses ML, statistical
modelling of networks.
baseline traffic, identifies anomalies.
user, device, web traffic behaviour analysis.
find C&C comms, data exfiltration,
unwanted apps in infra.
-----
Cisco Cognitive Threat Analytics:
- internal users ->
[behavioural analysis -> anomaly detection -> ML]
-> potential threat
-----

---------------
QUESTIONS:
-----
detailed protocol and payload information:
full-packet capture
-----
type of network monitoring data
analyses network flow or performance data:
statistical data
-----
network monitoring data includes device-specific
server and host logs?
transaction date
-----
type of network monitoring data
includes files attached to emails
or downloaded from the internet:
extracted content
-----
type of network monitoring data
has network flow details
includes 5 tuples, data amount, duration:
session data
-----
type of network monitoring data
generated by IPS or IDS devices
when sus traffic detected:
alert data
-----
full packet capture
transaction date
session data
alert data
extracted content
statistical data
-----

=========================
END DEVICE LOGS:

---------------
HOST LOGS:
-----
~ -=-
HIDS run on individual hosts
not only detects intrusions
- in form of [host-based firewalls],
can also prevent intrusion
-----
this software,
creates logs, stores on host
- difficult to get a view
- submit logs to central log management servers
search logs using NSM tools
-----
HIDS -> [agents] -> submit logs -> management server
-----
~ [OSSEC] = open-source HIDS
- robust log collection and analysis
-----
MS W:
auto host log collection and analysis
-----
~ [tripwire] = HIDS for Linux
can scale to larger enterprises
-----
~ [event viewer] -> MSW host logs
- app
- system
- setup
- security
- cmd
-----
- events logged by apps
- operation of drivers, processes, hardware.
- software installation, wind updates too.
- logon attempts, management and access.
- logs of cmd used
-----
- diff logs -> diff event types
- security logs -> audit success/ fail message
- security logging by ~ [LSASS in windows] hosts
- Local Security Authority Subsystem Service
also enforces security policies in w hosts
~ [lsass.exe]
frequently faked by malware
runs from w system32 directory
1sass.exe etc used to trick
-----
- w events identified with ID, descriptions
- encyclopaedia of security event IDs
~ Ultimate Windows Security on the web.
-----
five Windows host log event types:
- error
- warning
- information
- success audit
- failure audit
-----

---------------
SYSLOG:
-----
specifications for message formats
- C-S application structure
network protocol
log events to centralized syslog servers.
-----
a client/server protocol
IETF (RFC 5424)
syslog receiver = ~ [syslogd/syslog daemon/server]
sent via UDP (port 514),TCP (port 5000)
-----
some exceptions like [SSL wrappers]
sent in plaintext over the network
-----
~ -=-
syslog packet format:
~ [PRI | HEADER | MSG]
- severity, facility - 8 bits
- timestamp, hostname + MSG - 1024 bytes
-----
> facility codes
15 - 23 (local0-local7)
9, 15 for clock messages.
> severity 0 - 7
emergency, alert, critical, error,
warning, notice, info, debug.
> priority = facility*8 + severity
first value in a packet
between angled brackets <>.
-----
HEADER section of message:
format
> timestamp preceded by period (.)
or asterisk (*)
problem is indicated with NTP.
header has hostname or source IP
MSG portion = meaning of syslog message
most meaningful and useful
to cybersecurity analyst.
-----

---------------
SERVER LOGS:
-----
- email and web servers
keep access and error logs.
- DNS proxy server logs
document all DNS queries, responses
DNS data exfiltration
connections to malware C&C servers
- many Linux servers use syslog.
- others = proprietary logging.
-----
log file event content
depend on server type
-----
log files:
- Apache webserver access logs
- Microsoft Internet Info Server (IIS) access logs
-----
203.0.113.127 – dsmith [10/Oct/2016:10:26:57...
6/14/2016, 16:22:43, 203.0.113.24...
-----

---------------
SIEM AND LOG COLLECTION:
-----
- Security Information and Event Management
~ real-time reporting
- long-term analysis of security events
- graphical interactive dashboards.
-----
SIEM = SEM + SIM tools
comprehensive view of enterprise network
- log collection - forensic info
- normalization - connect and analyze related events
- correlation - link logs, events from different systems
- aggregation - reduce event data volume. remove dupes
- reporting - correlated, aggregated event data
- compliance - satisfy the requirements of regulations
-----
splunk by cisco partner
used by SOCs
-----
~ -=-
security onion with ELK
integrated Elasticsearch, Logstash, Kibana apps.
includes other [open-source NSM tools]
(network security monitoring)
-----
SOAR -> SIEM + automate security response workflows
-----
companies -> various tools to secure assets
lack compatibility, monitor multiple products
integrate tools from multiple platforms
goes beyond SIEM and SOAR...
-----
unified team. build on instead impede
- cisco secure
- Fortinet security fabric
- Palo alto networks cortex XDR
address network security monitoring complexity
integrating multiple functions, data sources
into one platform
enhance alert accuracy
offering robust defence.
-----

=========================
NETWORK LOGS

---------------
TCPDUMP:
-----
cmd tool
popular packet analyser
write packet captures to a file
real time packet capture display
packet protocol and content data
wireshark = GUI built on tcpdump function
-----

---------------
NETFLOW:
-----
by cisco
network troubleshooting, session-based accounting,
network traffic accounting, usage-based network
billing, network planning, monitoring, security,
DOS monitoring
-----
network users, apps, peak usage times,
traffic routing...
-----
- no full packet capture
- or capture actual content
- record packet flow info
~ [metadata]
-----
cisco -> NetFlow -> IETF -> [IPFIX]
based on NetFlow v9
-----
~ [nfdump]
- see NetFlow data
- nfcapd capture daemon, or collector
GUI open source tool:
~ [FlowViewer]
-----
- IP Flow is based on
- set of 5 to 7 IP packet attributes
- flowing in a single direction
- flow has all packets until TCP terminates
-----
IP Packet attributes used by NetFlow are:
- S IP
- D IP
- S port
- D port
- L3 protocol type
- class of service
- router/switch interface
-----
- grouped into a flow and packets,
bytes tailed fingerprinting or
determining a flow
- scalable
large amount -> condense -> netflow info DB
NetFlow cache.
-----
flow start and end timestamps.
~ [NetFlow Exporter device]
- create flow records, transmit those
- flow records for storage
- on a NetFlow [collector] device...
-----
Simple NetFlow v5 Records
-----
~ -=-
Cisco Lancope Stealthwatch technology
enhances using NetFlow data for NSM.
-----

---------------
APP VISIBILITY AND CONTROL:
-----
Cisco Application Visibility and Control 
~ [AVC system]
- combine multiple technologies
- recognize, analyse, control 1000 apps
- voice, video, email, file sharing, gaming
P2P, cloud apps.
-----
AVC uses:
~ [NBAR2]
- Cisco next-gen network-based app recognition v2
- NG NBAR
has recognition engine to discover, classify apps
-----
- network apps identification with port
low visibility into user behaviour.
- through identification of app signs
better.
- identify what they doing.
- teleconferencing or downloading
movies to their phones.
-----
~ -=-
Cisco Application Visibility and Control:
- app recognition - NBAR2
- metrics collection:
> netflow9
> IPFIX
> flexible netflow
-----
management, reporting - cisco prime etc...
control - QoS
-----
management and reporting system:
analyse, present app analysis -> dashboard reports
control app usage with QoS, policies with AVC info
-----
- port monitoring vs app monitoring
~ [app monitoring = more detailed view]
-----

---------------
CONTENT FILTERING LOGS:
-----
~ [cisco ESA, WSA]
- email, web security appliance
- functions for security monitoring
- logs as text files
- collect on syslog servers
- push to FTP or SCP servers too
-----
- WSA acts as web proxy
- logs all inbound, outbound transaction
- detailed and are customizable
- W3C compatibility format
- submit logs to server by
~ [syslog, FTP, SCP]
-----
- ACL decision logs
- malware scan logs
- web reputation filtering logs
-----
~ [cisco content filtering devices]
- drill down dashboards
- target search -> more specific info...
-----

---------------
LOGGING FROM CISCO DEVICES:
-----
- configure cisco security device
- submit events, alerts to security management systems
~ [with SNMP or syslog]
- cisco ASA device -> syslog message
- cisco IOS device -> syslog message
-----
- ASA -> syslog facility 20 by default
local4.
- different syslog message formats
~ [mnemonics instead of message IDs]
-----
cisco website
dictionary of Cisco ASA syslog
-----

---------------
PROXY LOGS:
-----
- proxy servers
- used for web, DNS requests
has logs for network security monitoring
-----
- intermediaries for network clients
- web proxy to handle web requests
- generates requests, responses logs
- analyse, identify hosts and resources
-----
- web proxies
- determine response or exploits
- inspect outgoing traffic for DLP
-----
~ -=-
popular web proxies:
- Squid
- CCProxy
- Apache Traffic Server
- WinGate
-----
proxy log values, explanations…
-----
- open web proxies -> obfuscate attacker IP
include Open proxy addresses
in block list internet traffic.
-----
~ [cisco umbrella]
- aka [OpenDNS]
- hosted DNS service
~ [DNS + security enhancements]
- Cisco Umbrella provides protections
in its own DNS service.
-----
~ [DNS super proxy]
- real-time threat intelligence
- DNS access logs
- subscribe to Cisco Umbrella
- for DNS, other security services
-----
DNS Proxy Log Example
explanation…
-----

---------------
NEXT GENERATION FIREWALLS:
-----
- extend network security beyond IP, ports
to L7 and beyond...
includes,
- reporting dashboards
- interactive features
-----
~ -=-
do things without SIEM or
other event correlators.
-----
- cisco NGFW use firepower services
- consolidate multiple security layers
into single platform.
- contain cost, simplify management
-----
firepower services:
- app visibility & control
- NGIPS
- reputation, category based URL filtering
- AMP
- web-enabled GUI called [Event Viewer]
----
event types:
-----
connection event:
- connection log with session details
detected by NGIPS
timestamps, S & D IP, metadata...
-----
intrusion event:
- examine packet affecting CIA
- intrusion -> event -> record
-----
host/ endpoint event:
- host appear on network
- detect with hardware, IP
- last known presence
-----
network discovery event:
- changes detected in monitored network
- network discovery policies
-----
netflow event:
- network discovery uses netflow records
- generate events for hosts
-----
~ -=-
NGFW services:
- IPS
- URL filtering
- AMP
- sandboxing
~ firepower analytics
- automation
- app visibility and control
- built in network profiling
- identity-policy control
- VPN
-----

---------------
EXPLORE NETFLOW IMPLEMENTATION - LAB:

---------------
LOG FROM MULTIPLE SOURCES - LAB:

===============================================
M11: EVALUATING ALERTS:

=========================
INTRO:

- evaluate alerts
- decide what to do with them
- workflows associated with alerts
- standard methods to
evaluate, classify alerts.

=========================
SOURCES OF ALERTS:

---------------
SECURITY ONION:
-----
- open source suite of NSM tools
- ubuntu Linux distro
-----
~ -=-
3 core functions for cybersecurity analyst:
- full packet capture, data types
- HIDS, NIDS
- alert analysis tools
~ [capture, detect, analyse]
-----
standalone installation or as
sensor and server platform
some components owned, maintained by
cisco, riverbend technologies
made open source...
-----
security onion website
-----

---------------
DETECTION TOOLS TO COLLECT DATA:
-----
- analysis -
- detection -
- data
-----
- security onion = many components
- integrated environment
- simplified deployment of NSM solution
-----
**** ANALYSIS:
- sguil
- wireshark
- kibana
-----
**** DETECTION:
- capME
- snort
- zeek/bro
- OSSEC
- wazuh
- suricata
-----
**** DATA:
- PCAPS
- content data
- transaction data
- session data
- host logs
- alert data
- syslog data
- metadata
-----
~ [CapME]:
- web app
- view pcap transcripts
- rendered with tcpflow or zeek tools
- access from ELSA tool
- enterprise log search and archive
- easy-to-read means to view L4 session
- plugin to ELSE
-----
~ [snort]:
- NIDS
- important source of alert data
- indexed in Sguil analysis tool
- rules, signatures generate alerts
- auto download new rules
- with pulledpork component in security onion
- snort, pulledpork = open source tools
by ~ [cisco].
-----
~ [zeek]:
- old name = Bro
- NIDS
~ behaviour based IDS
- not signatures or rules
- policies as scripts
- determines what data to log
- when to issue alerts
- file -> malware analysis
- block access
- shut down host violating policy
-----
~ [OSSEC]:
- HIDS
- file integrity
- local log
- system process
- rootkit detection
- alert, log data available to Sguil, Kibana
~ needs an agent to run on win hosts
-----
~ [wazuh]:
- HIDS
~ replaces OSSEC
- full featured solution
- broad spectrum of endpoint protection
- host logfile analysis
- file integrity
- vulnerability detection
- configuration management
- incident response
- needs agents to run on network hosts
-----
~ [suricata]:
- NIDS
~ signature based approach
- inline intrusion prevention
- like zeek but uses
- native multithreading
- packet stream processing
- in multiple processor cores.
also,
- reputation based blocking
- supports GPU multithreading
[[**** ELK STACK ****]]
-----

---------------
ANALYSIS TOOLS:
-----
~ -=-
- sguil
- kibana
- wirehark
- zeek
-----
- security onion
- integrate various IDS type's logs
- into single platform with:
-----
~ [Sguil]:
- high level console
- investigating security alerts
- from wide variety of sources
- starting point to investigate
- pivot directly from sguil to other tools
-----
~ [Kibana]:
- interactive dashboard interface
- Elasticsearch data
~ query the NSM data
- give flexible visuals of data
- data exploration
- ML data analysis features
- pivot from Sguil directly into Kibana
- contextualized displays
- based on S, D IP
-  elastic.co
-----
~ [Wireshark]:
- packet capture app
- open directly from other tools
- full packet capture
-----
~ [Zeek]:
- network traffic analyser
- security monitor.
- inspect traffic, in depth analysis
- pivot from sguil to zeek
- access accurate transaction logs,
- file content, customized output.
-----
** other security onion tools **...
-- visit security onion website...
-----

---------------
ALERT GENERATION:
-----
- notification messages
- generated by NSM tools
- security alerts.
many forms
- syslog -> severity ratings
-----
- sguil -> console -> integrate alerts ->
time stamped security queue
~ [investigate, classify]
escalate or retire alerts
-----
instead dedicated workflow management system
like request tracker for IR (RTIR)
output of squil -> orchestrate NSM investigation.
-----
- alerts has:
- 5 tuples
- timestamps
- device info...
-----
- S IP
- S Port
- D IP
- D Port
- Pr
-----
Pr = IP protocol number for event
- permit or deny decision
- some captured data
- hash value for downloaded file...
- squil -> queue of alerts
- waiting for investigation
-----
fields for real-time events:
-----
- ST - event status
- RT means real time
- priority based on alert category
- colour coded priority
-----
four priority levels:
- v low
- low
- mid
- high
-----
light yellow -> red
-----
~ [CNT]:
- event count for same S, D IP
- determines this set of events is correlated
- event listed once with
- no of times detected.
rather than reporting each, long event list.
potential spurious events
-----
~ [sensor]:
- agent reporting the event.
- Agent Status tab
- Alert ID column
~ OSSEC, pcap, Snort sensors reporting to Sguil
- default hostnames for sensors
- pcap, snort data in each monitoring interface
-----
~ [alert ID]:
- 2 part number
- sensor - event number
- 1.24
-----
~ [date/time]:
- event timestamp
- correlated event -> timestamp of first event
-----
~ event message:
- identifying text for event
- Show Rule checkbox
-----
~ -=-
- generate alerts based on
~ [rules | signatures | behaviours]
- conditions that trigger alert
- must be predefined...
-----

---------------
RULES AND ALERTS:
-----
~ -=-
sources for alerts:
- NIDS - snort, zeek, suricata
- HIDS - OSSEC, wazuh
- Asset management & monitor - PADS (passive asset DS)
- HTTP, DNS, TCP transactions - zeek, pcap records these
- syslog messages - multiple sources.
-----
~ info from alerts -> display in [sguil]
- differ in message format
- as it comes from different sources
-----
~ snort -> rule -> trigger -> sguil alert
- interpret what triggered the alert
- investigate as a security analyst.
- understand components of sort rules
- major source of alerts in sec onion.
-----

---------------
SNORT RULE STRUCTURE:
-----
- snort rules -> 2 sections
[rule header + rule options]
- rule header -> action, protocol, SIP, DIP, S port, D port, netmasks
- rule options -> alert message, info to inspect
- determine if rule action to be taken
- rule location added by sguil too
- path to file with rule, line number
where rule appears to find, modify.
-----
~ [Snort Rule Structure and Sguil-supplied Information]
-----
> rule header:
-- alert ip any any -> any any
[S IP, port -> D IP, port]
- action, protocol, address, port, flow direction.
- consistent between snort alert rules
- variables to represent internal, external IP
-- $HOME_NET and $EXTERNAL_NET
- eliminates need to specify an addresses,
- masks for every rule. 
-- snort.conf file
- Snort Rule Header Structure
-----
> rule option:
msg:"GPL ATTACK_RESPONSE ID
CHECK RETURNED ROOT";...
- enclosed in parenthesis
- text message that identifies alerts
- alert metadata. URL...
- packet payload
-----
> rule location:
/nsm/server_data/securityonion/rules...
-- Snort users manual
GPL, ET, VRT
-----
download rules from
-- snort.org
- pulledpork rule management utility
in security onion.
-----
alert not generated by snort,
identified by OSSEC/ PADS
also, custom local rules can be created.
-----
- Snort Rules Options Structure
-----
msg, content, reference, classtype, sid, rev
-----

---------------
SNORT, FW RULES - LAB
-----

=========================
OVERVIEW OF ALERT EVALUATION:

---------------
NEED FOR ALERT EVALUATION:
-----
- ever changing threat landscape
- new vulnerabilities
- architecture, attack surface...
- evade detection...
-----
- can't prevent all
- detect during or after occurrence
- considerate detection rules
- good skills to investigate alerts
- determine exploit.
-----
~ -=- ***
- tier 1 security analyst
- work through queues of alerts in [sguil] like tool
- pivot to [zeek, wireshark, kibana]
verify alert -> actual exploit...
-----
tier 1:
~ [sguil -> kibana, zeek, wireshark]
-----

---------------
EVALUATING ALERTS:
-----
- security incident classification
- borrowed from medical diagnostics
- guide actions, evaluate
 diagnostic procedures.
-----
- patient visit doctor for routine examination
- doctor determine patient sick/ok
~ diagnosis -> accurate/inaccurate
- doctor -> miss signs of disease...
~ false diagnosis -> costly/dangerous
-----
network security analysis:
- security analyst given alerts
- determine if diagnosis is true
- system says, an exploit has occurred.
- Is this true?”
- find the answer = purpose.
-----
~ -=-
alert classification: [AI]
~ true positive = alert + incident
~ false positive = alert + 0
~ true negative = 0 + 0
~ false negative = 0 + incident
-----
- true events = desirable
- false events = danger
-----
- TP = desired
rules worked correctly
- FP = not desired
false alarms -> waste resources
- TN = desired
benign normal traffic correctly ignored
- FN = danger
exploit not detected
data loss, damage...
-----
~ -=-
- escalate alert to high level investigation
- confirm incident, damage
~ senior security personnel -> isolate damage
- address vulnerabilities
- mitigate threat
- deal with reporting requirements
-----
~ [security analyst] ->
- inform FP impacting time
need for tuning security systems
- new configs -> happens...
- spike in false positives
-----
- find FN after exploit occurred
~ retrospective security analysis (RSA)
- newly obtained rules,
- other threat intelligence
- applied to archived 
- network security data.
- monitor threat intelligence
- learn new vulnerabilities, exploits
- evaluate likelihood of network
- being vulnerable at past...
- add new mitigation techniques
- more detailed analysis...
-----

---------------
DETERMINISTIC AND PROBABILISTIC ANALYSIS:
-----
- use statistical techniques, evaluate
risk that exploits target network.
- evaluate cost of mitigating threat
with exploit's damage.
-----
2 approach:
- deterministic
- probabilistic
-----
> deterministic:
- evaluate with known factors
- steps to exploit is knows
- describes only worst case
-----
> probabilistic:
- potential success of exploit
- estimate likelihood
- real-time network security analysis
- numerous variables are at play
- hacker can make unknown decisions...
-----
- exploits optimized to evade static rules
-----
deterministic = pre defined
probabilistic = possibility
-----

---------------
CLASSIFY ALERTS - LAB
-----

***********************************************
***********************************************
CYBER THREAT MANAGEMENT:

===============================================
M1: GOVERNANCE AND COMPLIANCE:

=========================
SUMMARY:

---------------
GOVERNANCE:
-----
- IT security governance
- determine [who is authorized to decide]
about cyber risks within organization
- accountability, oversight
-----
ensure:
- risks mitigated adequately
~ security strategies align with business objectives
- compliant with regulations.
-----
good data governance programs:
- data owner
- controller
- processor
- custodian
- steward
- protection officer
-----
- cybersecurity policy
- high level document
- outlines org's vision for cybersecurity
- goals, needs, scope, responsibilities.
- primary policy, system specific policy,
issue-specific policy.
-----
specific security policy includes:
- ID
- authentication
- password
- acceptable use
- network maintenance
- incident handling
- data
- credential
- organizational
-----
guiding principles for HR
for cybersecurity governance:
- background checks
- onboarding/off boarding
- clean desk
- need to know
- separation of duties
- mandatory vacations
- job rotations.
-----

---------------
ETHICS OF CYBERSECURITY:
-----
as a cybersecurity specialist
- understand law, org's interests
- utilitarian ethics theory:
action's consequences is
important factor to determine
if it is moral or not.
-----
rights approach
common good approach
-----
~ -=-
10 commandments of computer ethics:
covers things not to do with computer
- don't harm others
- don't interfere with other's work
- don't snoop in other's files
- don't use to steal or lie others
- don't use other's resources without permit
- think of consequences of program u create
- use to demonstrate respect
-----
3 categories of cyber crime:
- computer-targeted
- computer-assisted
- computer-incidental
-----
~ -=-
in US 3 primary sources of computer security laws and regulations:
- statutory law
- administrative law
- common law
-----
~ [FISMA] - cover federal agencies IT systems
- federal info sec modernization act
-----
industries have specific laws about cybercrime
- finance
- corporate accounting
- credit cards
- cryptography
-----
2 security breach notifications laws:
~ [ECPA] - electronic comm privacy act
~ [CFAA] - computer fraud & abuse act
-----
~ -=-
US privacy laws:
- Privacy Act of 1974
- FOIA
- FERPA
- COPPA
- CIPA
- VPPA
- HIPAA
- PIA
-----
International efforts to target cybercrime:
- Convention on Cybercrime:
- copyright infringement
- computer-related fraud
- child pornography
- violations of network security
-----

---------------
IT SECURITY MANAGEMENT FRAMEWORK:
-----
~ -=-
12 domains of cybersecurity:
- risk assessment
- security policy
- organization of information security
- asset management
- human resources security
- physical and environmental security
- communications and operations management
- information systems acquisition, development, maintenance
- access control
- information security incident management
- business continuity management
- compliance
-----
control objectives:
- define high level requirements to implement
- information security management system
within organization.
- controls show how to accomplish control objectives
- establishes guidelines to implement, maintain, improve
infosec management in org.
-----
- ISO 27000
- universal framework
- applicable to all org types
 org must identify:
domain, control objectives, controls
apply to environment, operations.
- orgs create an SOA to tailor
control objectives, controls
best meet priorities around CIA.
- ISO controls address security objectives
for data in rest, transmit, process.
-----
~ [National Cybersecurity Workforce Framework]:
support orgs seeking cybersecurity professionals.
-----
~ [CIS] -> critical security controls
(basic, foundational, and organizational)
help organizations with different levels
of resources, expertise to improve their
cyber defences.
-----
~ [CSA] -> security guidance to any org
that use cloud.
~ [CCM] - Cloud Controls Matrix:
maps cloud-specific security controls
to leading standards, best practices, regulations.
-----
~ [CSA CCM] = de-facto standard for cloud security
assurance, compliance.
- Service providers must assure their client orgs
that the security controls they implement are
properly designed and operate effectively.
-----
~ [SSAE or SOC] attestation report :
confirms controls are in place at
a specific point in time (Type I) or
managed over a period of at least 6 months (Type II).
-----
~ [CMMC]:
- establishes 5 certification levels
range from ‘basic cyber hygiene practices’
to ‘enhanced practices that provide more
sophisticated capabilities
- to detect and respond to APTs’
-----

===============================================
M2: NETWORK SECURITY TESTING:

=========================
SUMMARY:

---------------
SECURITY ASSESSMENTS:
-----
- vulnerability scanner assesses
computers, networks, apps for weakness.
~ -=-
- Nessus
- Retina
- Core Impact
- GFI LanGuard
-----
Vulnerability scanners may be
network scanners, app scanners,
web application scanners.
-----
Intrusive scans try to exploit
vulnerabilities and
may even crash the target.
-----
credentialed scan, usernames and passwords provide
authorized access to system, allowing scanner to
harvest more information.
-----
~ -=-
command line tools:
- ipconfig
- ping
- arp
- tracert
- nslookup
- netstat
- nbstat *
- nmap
- netcat
- hping *
-----
- SIEM systems use
log collectors to [aggregate log data] from
security devices, network devices, servers, apps
-----
- SOAR tools allow an org to
collect data about security threats from
various sources, respond to low-level events
[without human intervention]
-----

---------------
NETWORK SECURITY TESTING TECHNIQUES:
-----
~ [Operations] security concerned with
day-to-day practices necessary to first
deploy, later maintain a secure system.
-----
starts with planning and implementation
process of a network.
network security testing is conducted during
implementation and operational stages,
after system has been
developed, installed, integrated.
performed on a network to ensure all security
implementations are operating as expected.
-----
~ [ST&E] is an examination of protective measures
that are placed on an [operational] network.
-----
~ -=-
network test types:
- penetration
- network scanning
- vulnerability scanning
- password cracking
- log review
- integrity checkers
- virus detection
-----

---------------
NETWORK SECURITY TESTING TOOLS:
-----
~ -=-
- nmap/zenmap
- SuperScan
- SIEM
- GFI LANguard
- Tripwire
- Nessus
- L0phtCrack
- Metasploit
-----
- nmap:
classic TCP and UDP port scanning and sweeping,
Stealth TCP and UDP port scans and sweeps,
remote operating system ID.
-----
- SuperScan:
windows port scanning tool
requires admin privileges
-----
- SIEM provides:
correlation, aggregation,
forensic analysis, retention.
-----

---------------
PENETRATION TESTING:
-----
pen testing
- testing areas of weaknesses in systems
by using various [malicious techniques].
- simulates methods that an attacker would use
to gain unauthorized access to a network
and compromise systems.
- allows an org to understand how well it would
tolerate a real attack.
-----
4 phases:
- plan
- discover
- attack
- report
-----
orgs -> create competing teams
conduct penetration exercises that are
longer than a penetration test.
-----
- usually a [red] team (trying to attack the system)
- and a [blue] team (trying to defend the system).
-----
- Packet analysers, or packet sniffers,
intercept, and log network traffic.
-----
- Sniffing is not only used for malicious purposes.
It is also used by network administrators,
who can analyse network traffic, identify
bandwidth issues, troubleshoot other network
issues using sniffers.
-----

===============================================
M3: THREAT INTELLIGENCE:

=========================
SUMMARY:

---------------
INFORMATION SOURCES:
-----
~ -=-
there are orgs that provide network intelligence.
Network security organizations include:
- SANS
- MITRE
- FIRST
- SecurityNewsWire
- (ISC)^2
- CIS
-----
~ -=- *****
keep abreast of the latest threats and
continue to upgrade your skills.
-----
- Cisco Annual Cybersecurity Report
- Mid-Year Cybersecurity Report
~ read blogs and listen to podcasts.
-----

---------------
THREAT INTELLIGENCE SERVICES:
-----
- exchange of threat information
- vulnerabilities
- indicators of compromise (IOC)
- mitigation techniques
-----
- shared with personnel security systems
-----
- threat intelligence services create,
distribute [firewall rules and IOCs] to
devices that subscribed to service.
-----
1 such service is
~ [Cisco Talos Threat Intelligence Group]
-----
~ [FireEye] is another security company
that offers services to help enterprises
secure their networks.
FireEye uses a [3-pronged approach] combining
security intelligence, security expertise and
technology.
FireEye offers SIEM and SOAR with
~ [Helix Security] Platform which uses
behavioural analysis and advanced threat detection
and is supported by FireEye [Mandiant] worldwide
threat intelligence network.
-----
~ -=-
- U.S Department of Homeland Security
- free service called Automated Indicator Sharing (AIS)
- real-time exchange of cyber threat indicators
- between U.S. Federal Government and private sector.
- US gov sponsored MITRE Corporation to create
- and maintain a catalogue of known security threats
- called Common Vulnerabilities and Exposure (CVE).
-----
~ -=-
3 common threat intelligence sharing standards
- Structured Threat Information Expression (STIX)
- Trusted Automated Exchange of Indicator
Information (TAXII)
- CybOX
-----
these [open standards] provide specifications
that aid in automated exchange of
cyber threat intelligence info in a standard format.
-----

===============================================
M4: ENDPOINT VULNERABILITY ASSESSMENT:

=========================
SUMMARY:

---------------
NETWORK AND SERVER PROFILING:
-----
- network and device [profiling]
to provide statistical baseline information
that can serve as a reference point for
normal network and device performance.
-----
important elements:
- session duration
- total throughput
- ports used
- critical asset address space
-----
- server [profiling] is used to establish
accepted [operating state] of servers.
- security baseline for a given server.
- establishes network, user, app parameters
that are accepted for a specific server.
- Network behaviour described by a large amount
of diverse data such as
> features of packet flow (netflow?)
> features of packet itself (log?)
> telemetry from multiple sources
-----
- Big data analytics can be used to perform
~ [statistical, behavioural, rule-based]
anomaly detection.
-----
- evaluate network security with tools, services.
- Risk analysis is evaluation of risk posed by
vulnerabilities to a specific organization.
- Vulnerability assessment uses software to scan
Internet-facing servers, internal networks for
various types of vulnerabilities.
- Penetration testing uses authorized simulated attacks
to test strength of network security.
-----

---------------
COMMON VULNERABILITY SCORING SYSTEM - CVSS:
-----
- vendor-neutral
- industry standard
- open framework
rate risks of given vulnerability with
variety of metrics to calculate a composite score
-----
- produces standardized vulnerability scores that
should be meaningful across organizations.
- open framework with meaning of each metric openly
available to all users.
- allows prioritization of risk in a way that is
meaningful to individual organizations.
-----
~ -=-
uses 3 metric groups to assess vulnerability:
- base metric group
- temporal metric group (secular)
- environmental metric group
-----
base metric group is designed as a way to
assess security vulnerabilities that are found
in software and hardware systems.
-----
Vulnerabilities rated according to
- attack vector
- attack complexity
- privileges required
- user interaction
- scope
-----
- temporal and environmental groups modify
base metric score according to history of
vulnerability and context of specific org.
-----
~ -=-
FIRST website -> CVSS calculator tool
yields a number that describes severity
of risk that is posed by vulnerability.
[0 - 10]
Ranges of scores have qualitative values of
- none, low, medium, high, critical risk.
-----
vulnerability that [exceeds 3.9] should be addressed.
higher the rating level, the greater the urgency for
remediation.
~ [CVSS from 4 = VIP]
-----
~ -=-
Other important vulnerability info sources include:
- Common Vulnerabilities and Exposures (CVE)
- National Vulnerability Database (NVD)
-----
- both available online.
-----

---------------
SECURE DEVICE MANAGEMENT:
-----
risk management involves:
- selection, specification of
security controls for org.
-----
~ -=-
4 potential ways to respond to risks:
> Risk avoidance - [discontinue] vulnerable activity
because risk too high.
> Risk reduction - take measures to [mitigate] risk in
order to limit its impact.
> Risk sharing - [outsource] responsibility for risk
or using insurance to cover damages caused by risk
> Risk retention - accepting risk, taking [no] action.
-----
- Vulnerability management is a security practice
proactively prevent exploitation of IT vulnerabilities
that exist within an organization.
-----
vulnerability management life cycle (6 steps):
- discover
- prioritize assets
- assess
- report
- remediate
- verify
-----
Asset management involves implementation of systems
that track location, configuration of networked
devices and software across an enterprise.
-----
- Mobile device management (MDM) systems
allow security personnel to
configure, monitor, update a very diverse set
of mobile clients from cloud.
-----
Configuration management addresses
inventory and control of hardware and
software configurations of systems.
-----
Patch management is related to vulnerability
management and involves all aspects of software
patching, including acquiring, distributing,
installing, and verifying patches.
Patch management is required by some compliance
regulations.
-----
different patch management techniques such as
agent-based, agentless scanning, passive network
monitoring.
-----

===============================================
M5: RISK MANAGEMENT AND SECURITY CONTROLS:

=========================
SUMMARY:

---------------
RISK MANAGEMENT:
-----
- risk:
probability of [loss] due to
threat unexpected or malicious event
damages assets.
-----
- risk impact:
damage incurred by an event
asset loss, service disruption.
-----
- risk management:
reduce threats to acceptable level
implement controls to 
maintain that level.
-----
- risk = internal/external/both
impact ripple the org, affect
external entities too.
-----
risk management process:
- frame
- assess
- respond
-----

---------------
RISK ASSESSMENT:
-----
foundation for threat assessment:
- threat = potential that a vulnerability
will be identified, exploited.
-----
- threat vector = path that an attacker utilizes
to impact the target.
-----
Threat source types:
- adversarial
- accidental
- structural
- environmental
-----
- internal or external.
assess, examine operational risks by performing a
risk assessment to ensure their risk management meets
all their business objectives.
-----
determine if threat is:
low, acceptable, high.
-----
~ -=- ***
risk analysis has four goals:
- identify assets and their value
- identify vulnerabilities and threats
- quantify the probability and impact of
the identified threats
- balance impact of threat against cost
of countermeasure.
-----
~ -=-
- quantitative risk analysis:
assigns [numbers] to risk analysis process
several formulas for asset value,
exposure factor, single loss expectancy.
- qualitative risk analysis:
opinions and scenarios plotting [likelihood]
of a threat against its impact.
-----
~ [risk matrix] is a tool that helps prioritize risks
to determine which ones the organization needs to
develop a response for.
results can be ranked and used as a guide to determine
whether the organization takes any action.
-----
~ -=-
Good risk mitigation finds a balance between negative
impact of countermeasures and controls and benefit of
risk reduction.
-----
~ -=-
Several approaches may be considered:
- accepting risk and periodically reassessing
- reducing risk by implementing controls
- avoiding risk totally by changing approach
- transferring risk to a third party.
-----

---------------
SECURITY CONTROLS:
-----
- safeguards or countermeasures
implement to avoid, detect,
counteract, minimize security
risks to org's assets.
-----
- Administrative controls consist of
[procedures and policies]
that an org puts into place when
dealing with sensitive info.
-----
- Technical controls involve [hardware and/or
software] implemented to manage risk and provide
protection.
-----
- Physical controls are mechanisms such as fences
and locks deployed to protect systems, facilities,
personnel, resources.
----
~ Functional security controls include:
preventive, deterrent, detective, corrective,
recovery, and compensative controls.
-----
- Preventive security controls stop unwanted and
unauthorized activity from happening and/or apply
restrictions for authorized users.
-----
[deterrent] aims to discourage something from
happening.
Cybersecurity professionals and organizations
use deterrents to limit or mitigate
an action or behaviour.
-----
Access control detection identifies different types
of unauthorized activity.
-----
[Corrective controls] counteract something undesirable
by restoring the system back to a state of
confidentiality, integrity, and availability.
-----
can also restore systems to normal after unauthorized
activity occurs.
-----
[Recovery security controls] restore resources,
functions, and capabilities back to a normal
state after a violation of a security policy.
-----
[Compensative controls] provide options to other
controls to bolster enforcement in support of a
security policy.
-----

===============================================
M6: DIGITAL FORENSICS AND INCIDENT ANALYSIS & RESPONSE:

=========================
SUMMARY:

---------------
EVIDENCE HANDLING AND ATTACK ATTRIBUTION:
-----
digital forensics:
- recovery, investigation of info found on digital
devices as it relates to criminal activity.
- indicators of compromise are evidence that a
cybersecurity incident has occurred.
- preserve it for future analysis.
~ [NIST 800-86 guide]
Guide to Integrating Forensic Techniques into Incident Response
-----
forensic process (4 steps):
- collection
- examination
- analysis
- reporting
-----
IETF RFC 3227
describes an order to collect of digital evidence
based on volatility of data.
-----
chain of custody involves
- collection
- handling
- secure storage
of evidence.
-----
- principled, systematic investigation of
evidence to identify responsible threat actors
[attack attribution]
-----
- evidence-based investigation
incident response team correlates
Tactics, Techniques, and Procedures (TTP)
that were used in incident with
other known exploits.
-----
- Threat intelligence sources can help
to map TTP identified by an investigation
to known sources of similar attacks.
-----
For internal threats, uncovering devices
from which an attack was launched can lead
directly to threat actor.
One way to attribute an attack is to model
threat actor behaviour.
-----
MITRE - ATT&CK Framework
enables cybersecurity technicians to detect
attacker tactics, techniques, and procedures (TTP)
as part of threat defence, attack attribution.
-----

---------------
CYBER KILL CHAIN:
-----
7 steps to Cyber Kill Chain
helps to understand
techniques, tools, procedures
of threat actors.
-----
- when responding to a security incident,
objective is to detect and stop the attack
as early as possible in
kill chain progression.
-----
steps in the Cyber Kill Chain:
> reconnaissance
> weaponization
> delivery
> exploitation
> installation
> command and control
> actions on objectives
~ [RWDEI CA]
-----
- weaponization is using info from
reconnaissance to develop weapon
against target.
-----
- weapon is transmitted to target
using a delivery vector.
-----
- after weapon delivery,
threat actor Exploits it to
gain control of the target.
-----
- installation is when threat actor
establishes a back door into system to
allow for continued access to target.
-----
- to preserve backdoor:
make sure remote access does not alert
cybersecurity analysts or users.
-----
- C&C establishes threat actor's control
over target system.
- C&C channels used by threat actor to issue commands
to software they installed on target.
-----
- Actions on Objectives describes threat actor
achieving their original objective.
This may be data theft, performing a DDoS attack,
or using compromised network to create and send
spam or mine Bitcoin.
-----

---------------
DIAMOND MODEL OF INTRUSION ANALYSIS:
-----
~ -=-
- represents a security incident or event.
~ event = time-bound activity restricted
to specific step in which an adversary
uses a capability over infra to attack a
victim to achieve a specific result.
-----
4 core components of an intrusion event:
> adversary motivations
> capability
> infrastructure
> victim
-----
Meta-features expand model slightly include:
Timestamp, Phase, Result,
Direction, Methodology, Resources.
-----
As a cybersecurity analyst,
can be called on to use [Diamond Model] of
Intrusion Analysis to diagram a series of
intrusion events.
-----
- Adversaries don't operate in just a single event
- events threaded together in chain
each event must be successfully completed
before next event.
- This thread of events can be mapped
to Cyber Kill Chain.
-----

---------------
INCIDENT RESPONSE:
-----
~ -=-
Incident Response involves
- methods
- policies
- procedures
used by orgs for attack's response.
-----
goals of IR are:
~ [to limit the impact of attack]
- assess damage caused,
- implement recovery procedures.
-----
- It is essential that organizations create
and maintain detailed incident response plans
and designate personnel who are responsible for
executing all aspects of that plan.
-----
NIST incident response recommendations
~ [Special Publication 800-61]
800-86 there, 61 here...
- Computer Security Incident Handling Guide
-----
1st step for org to establish
- computer security incident response capability (CSIRC).
NIST recommends creating
- policies, plans, procedures to
establish, maintain a ~ [CSIRC]
-----
Some of the CSIRC stakeholders:
- Management
- Information Assurance
- IT Support
- Legal Department
- Public Affairs and Media Relations
- Human Resources
- Business Continuity Planners
- Physical Security
- Facilities Management
-----
- Governmental regulations should be consulted
by legal team to determine organization’s responsibility
for reporting incident.
- Beyond legal requirements and stakeholder considerations,
NIST recommends an organization coordinate with
organizations to share details for the incident.
- there should be policy in place in each organization that
outlines how long evidence of an incident is retained.
-----
~ [CMMC framework]
- created to assess ability of organizations
that perform functions for U.S. DoD to protect
military supply chain from disruptions or losses
due to cybersecurity incidents.
-----
CMMC specifies 17 domains
- varying number of capabilities associated with it.
- organization rated by maturity level that has been
achieved for each of domains
- CMMC certifies organizations by level
-----
NIST defines 4 steps in
IR process life cycle:
> prepare
> detect, analyse
> contain, eradicate, recover
> post-incident activities
-----
~ [preparation phase] is when CSIRT
is created and trained.
tools, assets needed by team to
investigate incidents are
acquired and deployed.
-----
Incidents detected in many different ways
not all of these ways are very detailed or
provide detailed clarity.
-----
~ -=-
There are 2 categories for signs of an incident:
> Precursor
> Indicator
-----
use of complex algorithms, machine learning often
help to determine validity of security incidents.
One method that can be used is
network and system profiling.
-----
When CSIRT believes an incident has occurred,
immediately perform an [initial analysis]
to determine incident’s scope like which networks,
systems, apps affected, who or what originated
incident, how incident is occurring.
-----
When incident is analysed and prioritized,
incident response team needs to notify appropriate
stakeholders, outside parties so that all who need to be
involved will play their roles.
-----
Clear and concise documentation surrounding
preservation of evidence is critical.
- Identifying attackers = secondary to
containing, eradicating, recovering
hosts and services.
-----
After containment, 1st step to eradication is
identifying all of hosts that need remediation.
effects of security incident, all of vulnerabilities
exploited by attacker must be corrected or [patched]
so that incident does not occur again.
-----
Following an incident, organization should debrief
to review effectiveness of incident handling process
and identify necessary hardening needed for existing
security controls and practices.
-----

---------------
DISASTER RECOVERY:
-----
- Natural disasters differ
depending on location
sometimes difficult to predict.
-----
- Human-caused disasters involve
people or organizations.
org’s DRP includes activities org takes to
assess, salvage, repair, restore damaged
facilities or assets.
-----
~ -=-
> Preventive measures
include controls that prevent a disaster from occurring.
> Detective measures
include controls that discover new potential threats.
> Corrective measures
include controls that restore system after a disaster or
an event.
-----
before - now - after
(preventive, detective, collective)
-----
Business continuity controls:
- backing up data
- redundant hardware...
- business continuity plan
starts with carrying out a
- business impact analysis [BIA]
identify critical business
processes, resources,
relationships between systems.
-----
- BIA focuses on consequences of interruption
to critical business functions, examines key
considerations listed here:
- RTOs, RPOs, MTTR, and MTBF.
NIST developed best practices in relation to
business continuity.
-----
several methods to train for disaster recovery:
- tabletop exercise
participants sit around a table
with a facilitator who supplies information
related to a scenario incident and processes
that are being examined.
No actual processes or procedures invoked;
they are just discussed.
- functional test
certain aspects of a plan are tested to see how
well they work, how well-prepared personnel is.
full operational exercises, or simulations.
designed to interrupt services to verify that
all aspects of a plan are in place and sufficient
to respond to type of incident being simulated.
-----




